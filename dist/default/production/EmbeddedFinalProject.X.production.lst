

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Dec 14 15:56:52 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72  0000                     
    73 ;;___lwtoft@c	offset=-2 (param)
    74 ;;___ftdiv@f3	offset	0
    75 ;;___ftdiv@sign	offset	3
    76 ;;___ftdiv@exp	offset	4
    77 ;;___ftdiv@cntr	offset	5
    78 ;;___ftdiv@f1	offset=-3 (param)
    79 ;;___ftdiv@f2	offset=-6 (param)
    80 ;;existingUserLogin@i	offset	0
    81 ;;atoi@a	offset	0
    82 ;;atoi@sign	offset	2
    83 ;;atoi@s	offset=-2 (param)
    84 ;;_isdigit$1567	offset	0
    85 ;;isdigit@c	offset=-1 (param)
    86 ;;read_EEPROM@add	offset=-2 (param)
    87 ;;mainScreen@tempTemperatureArray	offset	0
    88 ;;mainScreen@tempThresholdArray	offset	3
    89 ;;mainScreen@i	offset	5
    90 ;;___wmul@product	offset	0
    91 ;;___wmul@multiplier	offset=-2 (param)
    92 ;;___wmul@multiplicand	offset=-4 (param)
    93 ;;___ftmul@f3_as_product	offset	0
    94 ;;___ftmul@sign	offset	3
    95 ;;___ftmul@cntr	offset	4
    96 ;;___ftmul@exp	offset	5
    97 ;;___ftmul@f1	offset=-3 (param)
    98 ;;___ftmul@f2	offset=-6 (param)
    99 ;;___ftadd@exp1	offset	0
   100 ;;___ftadd@exp2	offset	1
   101 ;;___ftadd@sign	offset	2
   102 ;;___ftadd@f1	offset=-3 (param)
   103 ;;___ftadd@f2	offset=-6 (param)
   104 ;;___ftpack@arg	offset=-3 (param)
   105 ;;___ftpack@exp	offset=-4 (param)
   106 ;;___ftpack@sign	offset=-5 (param)
   107 ;;___ftge@ff1	offset=-3 (param)
   108 ;;___ftge@ff2	offset=-6 (param)
   109 ;;updateThreshold@i_1232	offset	0
   110 ;;updateThreshold@i	offset	2
   111 ;;halfSecDelay@i	offset	0
   112 ;;reception@val	offset	0
   113 ;;my_print@message	offset=-2 (param)
   114 ;;write_EEPROM@add	offset=-2 (param)
   115 ;;write_EEPROM@c	offset=-3 (param)
   116 ;;updateThreshold@i_1232	offset	0
   117 ;;updateThreshold@i	offset	2
   118 ;;write_EEPROM@add	offset=-2 (param)
   119 ;;write_EEPROM@c	offset=-3 (param)
   120 ;;atoi@a	offset	0
   121 ;;atoi@sign	offset	2
   122 ;;atoi@s	offset=-2 (param)
   123 ;;_isdigit$1567	offset	0
   124 ;;isdigit@c	offset=-1 (param)
   125 ;;___wmul@product	offset	0
   126 ;;___wmul@multiplier	offset=-2 (param)
   127 ;;___wmul@multiplicand	offset=-4 (param)
   128 ;;reception@val	offset	0
   129 ;;read_EEPROM@add	offset=-2 (param)
   130 ;;my_print@message	offset=-2 (param)
   131 ;;halfSecDelay@i	offset	0
   132 ;;___ftge@ff1	offset=-3 (param)
   133 ;;___ftge@ff2	offset=-6 (param)
   134 ;;___lwtoft@c	offset=-2 (param)
   135 ;;___ftmul@f3_as_product	offset	0
   136 ;;___ftmul@sign	offset	3
   137 ;;___ftmul@cntr	offset	4
   138 ;;___ftmul@exp	offset	5
   139 ;;___ftmul@f1	offset=-3 (param)
   140 ;;___ftmul@f2	offset=-6 (param)
   141 ;;___ftdiv@f3	offset	0
   142 ;;___ftdiv@sign	offset	3
   143 ;;___ftdiv@exp	offset	4
   144 ;;___ftdiv@cntr	offset	5
   145 ;;___ftdiv@f1	offset=-3 (param)
   146 ;;___ftdiv@f2	offset=-6 (param)
   147 ;;___ftadd@exp1	offset	0
   148 ;;___ftadd@exp2	offset	1
   149 ;;___ftadd@sign	offset	2
   150 ;;___ftadd@f1	offset=-3 (param)
   151 ;;___ftadd@f2	offset=-6 (param)
   152 ;;___ftpack@arg	offset=-3 (param)
   153 ;;___ftpack@exp	offset=-4 (param)
   154 ;;___ftpack@sign	offset=-5 (param)
   155 ;;write_EEPROM@add	offset=-2 (param)
   156 ;;write_EEPROM@c	offset=-3 (param)
   157 ;;reception@val	offset	0
   158 ;;read_EEPROM@add	offset=-2 (param)
   159 ;;my_print@message	offset=-2 (param)
   160 ;;halfSecDelay@i	offset	0
   161                           
   162                           	psect	idataCOMRAM
   163  00422E                     __pidataCOMRAM:
   164                           	opt stack 0
   165                           
   166                           ;initializer for _inputTypeAddr
   167  00422E  00E3               	dw	227
   168                           
   169                           ;initializer for _tempStatusAddr
   170  004230  00E1               	dw	225
   171                           
   172                           	psect	idataBANK0
   173  00421C                     __pidataBANK0:
   174                           	opt stack 0
   175                           
   176                           ;initializer for _PIRStatusAddr
   177  00421C  00E0               	dw	224
   178                           
   179                           ;initializer for _correctPassword
   180  00421E  0001               	dw	1
   181                           
   182                           ;initializer for _inputMethod
   183  004220  D7                 	db	low STR_3
   184  004221  7F                 	db	high STR_3
   185                           
   186                           ;initializer for _statusOfPir
   187  004222  E0                 	db	low STR_1
   188  004223  7F                 	db	high STR_1
   189                           
   190                           ;initializer for _statusOfTemp
   191  004224  E0                 	db	low STR_1
   192  004225  7F                 	db	high STR_1
   193                           
   194                           ;initializer for _thresholdAddr
   195  004226  00D0               	dw	208
   196                           
   197                           	psect	mediumconst
   198  007554                     __pmediumconst:
   199                           	opt stack 0
   200  007554  00                 	db	0
   201  007555                     _dpowers:
   202                           	opt stack 0
   203  007555  0001               	dw	1
   204  007557  0000               	dw	0
   205  007559  000A               	dw	10
   206  00755B  0000               	dw	0
   207  00755D  0064               	dw	100
   208  00755F  0000               	dw	0
   209  007561  03E8               	dw	1000
   210  007563  0000               	dw	0
   211  007565  2710               	dw	10000
   212  007567  0000               	dw	0
   213  007569  86A0               	dw	34464
   214  00756B  0001               	dw	1
   215  00756D  4240               	dw	16960
   216  00756F  000F               	dw	15
   217  007571  9680               	dw	38528
   218  007573  0098               	dw	152
   219  007575  E100               	dw	57600
   220  007577  05F5               	dw	1525
   221  007579  CA00               	dw	51712
   222  00757B  3B9A               	dw	15258
   223  00757D                     __end_of_dpowers:
   224                           	opt stack 0
   225  00757D                     __npowers_:
   226                           	opt stack 0
   227  00757D  00                 	db	0
   228  00757E  80                 	db	128
   229  00757F  3F                 	db	63
   230  007580  CD                 	db	205
   231  007581  CC                 	db	204
   232  007582  3D                 	db	61
   233  007583  D7                 	db	215
   234  007584  23                 	db	35
   235  007585  3C                 	db	60
   236  007586  12                 	db	18
   237  007587  83                 	db	131
   238  007588  3A                 	db	58
   239  007589  B7                 	db	183
   240  00758A  D1                 	db	209
   241  00758B  38                 	db	56
   242  00758C  C6                 	db	198
   243  00758D  27                 	db	39
   244  00758E  37                 	db	55
   245  00758F  38                 	db	56
   246  007590  86                 	db	134
   247  007591  35                 	db	53
   248  007592  C0                 	db	192
   249  007593  D6                 	db	214
   250  007594  33                 	db	51
   251  007595  CC                 	db	204
   252  007596  2B                 	db	43
   253  007597  32                 	db	50
   254  007598  70                 	db	112
   255  007599  89                 	db	137
   256  00759A  30                 	db	48
   257  00759B  E7                 	db	231
   258  00759C  DB                 	db	219
   259  00759D  2E                 	db	46
   260  00759E  E5                 	db	229
   261  00759F  3C                 	db	60
   262  0075A0  1E                 	db	30
   263  0075A1  42                 	db	66
   264  0075A2  A2                 	db	162
   265  0075A3  0D                 	db	13
   266  0075A4                     __end_of__npowers_:
   267                           	opt stack 0
   268  0075A4                     __powers_:
   269                           	opt stack 0
   270  0075A4  00                 	db	0
   271  0075A5  80                 	db	128
   272  0075A6  3F                 	db	63
   273  0075A7  00                 	db	0
   274  0075A8  20                 	db	32
   275  0075A9  41                 	db	65
   276  0075AA  00                 	db	0
   277  0075AB  C8                 	db	200
   278  0075AC  42                 	db	66
   279  0075AD  00                 	db	0
   280  0075AE  7A                 	db	122
   281  0075AF  44                 	db	68
   282  0075B0  40                 	db	64
   283  0075B1  1C                 	db	28
   284  0075B2  46                 	db	70
   285  0075B3  50                 	db	80
   286  0075B4  C3                 	db	195
   287  0075B5  47                 	db	71
   288  0075B6  24                 	db	36
   289  0075B7  74                 	db	116
   290  0075B8  49                 	db	73
   291  0075B9  97                 	db	151
   292  0075BA  18                 	db	24
   293  0075BB  4B                 	db	75
   294  0075BC  BC                 	db	188
   295  0075BD  BE                 	db	190
   296  0075BE  4C                 	db	76
   297  0075BF  6B                 	db	107
   298  0075C0  6E                 	db	110
   299  0075C1  4E                 	db	78
   300  0075C2  03                 	db	3
   301  0075C3  15                 	db	21
   302  0075C4  50                 	db	80
   303  0075C5  79                 	db	121
   304  0075C6  AD                 	db	173
   305  0075C7  60                 	db	96
   306  0075C8  F3                 	db	243
   307  0075C9  49                 	db	73
   308  0075CA  71                 	db	113
   309  0075CB                     __end_of__powers_:
   310                           	opt stack 0
   311  0000                     _ADCON0	set	4034
   312  0000                     _ADCON0bits	set	4034
   313  0000                     _ADCON1	set	4033
   314  0000                     _ADCON2	set	4032
   315  0000                     _ADRESH	set	4036
   316  0000                     _ADRESL	set	4035
   317  0000                     _EEADR	set	4009
   318  0000                     _EECON1bits	set	4006
   319  0000                     _EECON2	set	4007
   320  0000                     _EEDATA	set	4008
   321  0000                     _INTCON2bits	set	4081
   322  0000                     _INTCONbits	set	4082
   323  0000                     _IPR1bits	set	3999
   324  0000                     _PIE1bits	set	3997
   325  0000                     _PIR1bits	set	3998
   326  0000                     _PORTBbits	set	3969
   327  0000                     _PORTD	set	3971
   328  0000                     _PORTDbits	set	3971
   329  0000                     _RCONbits	set	4048
   330  0000                     _RCREG	set	4014
   331  0000                     _RCSTAbits	set	4011
   332  0000                     _SPBRG	set	4015
   333  0000                     _T0CON	set	4053
   334  0000                     _T0CONbits	set	4053
   335  0000                     _TMR0H	set	4055
   336  0000                     _TMR0L	set	4054
   337  0000                     _TRISAbits	set	3986
   338  0000                     _TRISBbits	set	3987
   339  0000                     _TRISCbits	set	3988
   340  0000                     _TRISD	set	3989
   341  0000                     _TXREG	set	4013
   342  0000                     _TXSTAbits	set	4012
   343  0000                     _CFGS	set	32054
   344  0000                     _EEPGD	set	32055
   345  0000                     _RD	set	32048
   346  0000                     _WREN	set	32050
   347  0075CB                     STR_30:
   348  0075CB  0A                 	db	10
   349  0075CC  0D                 	db	13
   350  0075CD  2A                 	db	42
   351  0075CE  2A                 	db	42
   352  0075CF  2A                 	db	42
   353  0075D0  2A                 	db	42
   354  0075D1  2A                 	db	42
   355  0075D2  2A                 	db	42
   356  0075D3  2A                 	db	42
   357  0075D4  2A                 	db	42
   358  0075D5  2A                 	db	42
   359  0075D6  2A                 	db	42
   360  0075D7  2A                 	db	42
   361  0075D8  2A                 	db	42
   362  0075D9  2A                 	db	42
   363  0075DA  2A                 	db	42
   364  0075DB  2A                 	db	42
   365  0075DC  2A                 	db	42
   366  0075DD  2A                 	db	42
   367  0075DE  2A                 	db	42
   368  0075DF  2A                 	db	42
   369  0075E0  2A                 	db	42
   370  0075E1  2A                 	db	42
   371  0075E2  2A                 	db	42
   372  0075E3  2A                 	db	42
   373  0075E4  2A                 	db	42
   374  0075E5  2A                 	db	42
   375  0075E6  2A                 	db	42
   376  0075E7  2A                 	db	42
   377  0075E8  2A                 	db	42
   378  0075E9  2A                 	db	42
   379  0075EA  2A                 	db	42
   380  0075EB  2A                 	db	42
   381  0075EC  2A                 	db	42
   382  0075ED  2A                 	db	42
   383  0075EE  2A                 	db	42
   384  0075EF  2A                 	db	42
   385  0075F0  2A                 	db	42
   386  0075F1  2A                 	db	42
   387  0075F2  2A                 	db	42
   388  0075F3  2A                 	db	42
   389  0075F4  2A                 	db	42
   390  0075F5  2A                 	db	42
   391  0075F6  2A                 	db	42
   392  0075F7  2A                 	db	42
   393  0075F8  2A                 	db	42
   394  0075F9  2A                 	db	42
   395  0075FA  2A                 	db	42
   396  0075FB  2A                 	db	42
   397  0075FC  2A                 	db	42
   398  0075FD  2A                 	db	42
   399  0075FE  2A                 	db	42
   400  0075FF  2A                 	db	42
   401  007600  2A                 	db	42
   402  007601  2A                 	db	42
   403  007602  2A                 	db	42
   404  007603  2A                 	db	42
   405  007604  2A                 	db	42
   406  007605  2A                 	db	42
   407  007606  2A                 	db	42
   408  007607  2A                 	db	42
   409  007608  2A                 	db	42
   410  007609  0A                 	db	10
   411  00760A  0D                 	db	13
   412  00760B  00                 	db	0
   413  00760C                     STR_66:
   414  00760C  0A                 	db	10
   415  00760D  0D                 	db	13
   416  00760E  2A                 	db	42
   417  00760F  2A                 	db	42
   418  007610  2A                 	db	42
   419  007611  2A                 	db	42
   420  007612  2A                 	db	42
   421  007613  2A                 	db	42
   422  007614  2A                 	db	42
   423  007615  2A                 	db	42
   424  007616  2A                 	db	42
   425  007617  20                 	db	32
   426  007618  20                 	db	32
   427  007619  20                 	db	32
   428  00761A  20                 	db	32
   429  00761B  20                 	db	32
   430  00761C  20                 	db	32
   431  00761D  20                 	db	32
   432  00761E  54                 	db	84	;'T'
   433  00761F  65                 	db	101	;'e'
   434  007620  6D                 	db	109	;'m'
   435  007621  70                 	db	112	;'p'
   436  007622  65                 	db	101	;'e'
   437  007623  72                 	db	114	;'r'
   438  007624  61                 	db	97	;'a'
   439  007625  74                 	db	116	;'t'
   440  007626  75                 	db	117	;'u'
   441  007627  72                 	db	114	;'r'
   442  007628  65                 	db	101	;'e'
   443  007629  20                 	db	32
   444  00762A  53                 	db	83	;'S'
   445  00762B  65                 	db	101	;'e'
   446  00762C  6E                 	db	110	;'n'
   447  00762D  73                 	db	115	;'s'
   448  00762E  6F                 	db	111	;'o'
   449  00762F  72                 	db	114	;'r'
   450  007630  20                 	db	32
   451  007631  41                 	db	65	;'A'
   452  007632  6C                 	db	108	;'l'
   453  007633  61                 	db	97	;'a'
   454  007634  72                 	db	114	;'r'
   455  007635  6D                 	db	109	;'m'
   456  007636  20                 	db	32
   457  007637  4D                 	db	77	;'M'
   458  007638  65                 	db	101	;'e'
   459  007639  6E                 	db	110	;'n'
   460  00763A  75                 	db	117	;'u'
   461  00763B  20                 	db	32
   462  00763C  20                 	db	32
   463  00763D  20                 	db	32
   464  00763E  20                 	db	32
   465  00763F  20                 	db	32
   466  007640  20                 	db	32
   467  007641  20                 	db	32
   468  007642  20                 	db	32
   469  007643  20                 	db	32
   470  007644  2A                 	db	42
   471  007645  2A                 	db	42
   472  007646  2A                 	db	42
   473  007647  2A                 	db	42
   474  007648  2A                 	db	42
   475  007649  2A                 	db	42
   476  00764A  2A                 	db	42
   477  00764B  2A                 	db	42
   478  00764C  00                 	db	0
   479  00764D                     STR_55:
   480  00764D  0A                 	db	10
   481  00764E  0D                 	db	13
   482  00764F  2A                 	db	42
   483  007650  2A                 	db	42
   484  007651  2A                 	db	42
   485  007652  2A                 	db	42
   486  007653  2A                 	db	42
   487  007654  2A                 	db	42
   488  007655  2A                 	db	42
   489  007656  2A                 	db	42
   490  007657  2A                 	db	42
   491  007658  20                 	db	32
   492  007659  20                 	db	32
   493  00765A  20                 	db	32
   494  00765B  20                 	db	32
   495  00765C  20                 	db	32
   496  00765D  20                 	db	32
   497  00765E  20                 	db	32
   498  00765F  50                 	db	80	;'P'
   499  007660  49                 	db	73	;'I'
   500  007661  52                 	db	82	;'R'
   501  007662  20                 	db	32
   502  007663  53                 	db	83	;'S'
   503  007664  65                 	db	101	;'e'
   504  007665  6E                 	db	110	;'n'
   505  007666  73                 	db	115	;'s'
   506  007667  6F                 	db	111	;'o'
   507  007668  72                 	db	114	;'r'
   508  007669  20                 	db	32
   509  00766A  41                 	db	65	;'A'
   510  00766B  6C                 	db	108	;'l'
   511  00766C  61                 	db	97	;'a'
   512  00766D  72                 	db	114	;'r'
   513  00766E  6D                 	db	109	;'m'
   514  00766F  20                 	db	32
   515  007670  4D                 	db	77	;'M'
   516  007671  65                 	db	101	;'e'
   517  007672  6E                 	db	110	;'n'
   518  007673  75                 	db	117	;'u'
   519  007674  20                 	db	32
   520  007675  20                 	db	32
   521  007676  20                 	db	32
   522  007677  20                 	db	32
   523  007678  20                 	db	32
   524  007679  20                 	db	32
   525  00767A  20                 	db	32
   526  00767B  20                 	db	32
   527  00767C  20                 	db	32
   528  00767D  20                 	db	32
   529  00767E  20                 	db	32
   530  00767F  2A                 	db	42
   531  007680  2A                 	db	42
   532  007681  2A                 	db	42
   533  007682  2A                 	db	42
   534  007683  2A                 	db	42
   535  007684  2A                 	db	42
   536  007685  2A                 	db	42
   537  007686  2A                 	db	42
   538  007687  2A                 	db	42
   539  007688  2A                 	db	42
   540  007689  2A                 	db	42
   541  00768A  2A                 	db	42
   542  00768B  2A                 	db	42
   543  00768C  2A                 	db	42
   544  00768D  00                 	db	0
   545  00768E                     STR_93:
   546  00768E  0A                 	db	10
   547  00768F  0D                 	db	13
   548  007690  21                 	db	33
   549  007691  21                 	db	33
   550  007692  21                 	db	33
   551  007693  21                 	db	33
   552  007694  21                 	db	33
   553  007695  21                 	db	33
   554  007696  21                 	db	33
   555  007697  21                 	db	33
   556  007698  20                 	db	32
   557  007699  20                 	db	32
   558  00769A  20                 	db	32
   559  00769B  54                 	db	84	;'T'
   560  00769C  45                 	db	69	;'E'
   561  00769D  4D                 	db	77	;'M'
   562  00769E  50                 	db	80	;'P'
   563  00769F  45                 	db	69	;'E'
   564  0076A0  52                 	db	82	;'R'
   565  0076A1  41                 	db	65	;'A'
   566  0076A2  54                 	db	84	;'T'
   567  0076A3  55                 	db	85	;'U'
   568  0076A4  52                 	db	82	;'R'
   569  0076A5  45                 	db	69	;'E'
   570  0076A6  20                 	db	32
   571  0076A7  53                 	db	83	;'S'
   572  0076A8  45                 	db	69	;'E'
   573  0076A9  4E                 	db	78	;'N'
   574  0076AA  53                 	db	83	;'S'
   575  0076AB  4F                 	db	79	;'O'
   576  0076AC  52                 	db	82	;'R'
   577  0076AD  20                 	db	32
   578  0076AE  48                 	db	72	;'H'
   579  0076AF  41                 	db	65	;'A'
   580  0076B0  53                 	db	83	;'S'
   581  0076B1  20                 	db	32
   582  0076B2  42                 	db	66	;'B'
   583  0076B3  45                 	db	69	;'E'
   584  0076B4  45                 	db	69	;'E'
   585  0076B5  4E                 	db	78	;'N'
   586  0076B6  20                 	db	32
   587  0076B7  54                 	db	84	;'T'
   588  0076B8  52                 	db	82	;'R'
   589  0076B9  49                 	db	73	;'I'
   590  0076BA  50                 	db	80	;'P'
   591  0076BB  50                 	db	80	;'P'
   592  0076BC  45                 	db	69	;'E'
   593  0076BD  44                 	db	68	;'D'
   594  0076BE  20                 	db	32
   595  0076BF  20                 	db	32
   596  0076C0  20                 	db	32
   597  0076C1  20                 	db	32
   598  0076C2  21                 	db	33
   599  0076C3  21                 	db	33
   600  0076C4  21                 	db	33
   601  0076C5  21                 	db	33
   602  0076C6  21                 	db	33
   603  0076C7  21                 	db	33
   604  0076C8  21                 	db	33
   605  0076C9  21                 	db	33
   606  0076CA  21                 	db	33
   607  0076CB  21                 	db	33
   608  0076CC  00                 	db	0
   609  0076CD                     STR_112:
   610  0076CD  0A                 	db	10
   611  0076CE  0D                 	db	13
   612  0076CF  21                 	db	33
   613  0076D0  21                 	db	33
   614  0076D1  21                 	db	33
   615  0076D2  21                 	db	33
   616  0076D3  21                 	db	33
   617  0076D4  21                 	db	33
   618  0076D5  21                 	db	33
   619  0076D6  21                 	db	33
   620  0076D7  21                 	db	33
   621  0076D8  21                 	db	33
   622  0076D9  21                 	db	33
   623  0076DA  21                 	db	33
   624  0076DB  21                 	db	33
   625  0076DC  20                 	db	32
   626  0076DD  50                 	db	80	;'P'
   627  0076DE  49                 	db	73	;'I'
   628  0076DF  52                 	db	82	;'R'
   629  0076E0  20                 	db	32
   630  0076E1  53                 	db	83	;'S'
   631  0076E2  45                 	db	69	;'E'
   632  0076E3  4E                 	db	78	;'N'
   633  0076E4  53                 	db	83	;'S'
   634  0076E5  4F                 	db	79	;'O'
   635  0076E6  52                 	db	82	;'R'
   636  0076E7  20                 	db	32
   637  0076E8  48                 	db	72	;'H'
   638  0076E9  41                 	db	65	;'A'
   639  0076EA  53                 	db	83	;'S'
   640  0076EB  20                 	db	32
   641  0076EC  44                 	db	68	;'D'
   642  0076ED  45                 	db	69	;'E'
   643  0076EE  54                 	db	84	;'T'
   644  0076EF  45                 	db	69	;'E'
   645  0076F0  43                 	db	67	;'C'
   646  0076F1  54                 	db	84	;'T'
   647  0076F2  45                 	db	69	;'E'
   648  0076F3  44                 	db	68	;'D'
   649  0076F4  20                 	db	32
   650  0076F5  4D                 	db	77	;'M'
   651  0076F6  4F                 	db	79	;'O'
   652  0076F7  54                 	db	84	;'T'
   653  0076F8  49                 	db	73	;'I'
   654  0076F9  4F                 	db	79	;'O'
   655  0076FA  4E                 	db	78	;'N'
   656  0076FB  20                 	db	32
   657  0076FC  20                 	db	32
   658  0076FD  21                 	db	33
   659  0076FE  21                 	db	33
   660  0076FF  21                 	db	33
   661  007700  21                 	db	33
   662  007701  21                 	db	33
   663  007702  21                 	db	33
   664  007703  21                 	db	33
   665  007704  21                 	db	33
   666  007705  21                 	db	33
   667  007706  21                 	db	33
   668  007707  21                 	db	33
   669  007708  21                 	db	33
   670  007709  21                 	db	33
   671  00770A  21                 	db	33
   672  00770B  00                 	db	0
   673  00770C                     STR_16:
   674  00770C  0A                 	db	10
   675  00770D  0D                 	db	13
   676  00770E  2A                 	db	42
   677  00770F  20                 	db	32
   678  007710  20                 	db	32
   679  007711  20                 	db	32
   680  007712  20                 	db	32
   681  007713  20                 	db	32
   682  007714  20                 	db	32
   683  007715  20                 	db	32
   684  007716  20                 	db	32
   685  007717  20                 	db	32
   686  007718  20                 	db	32
   687  007719  20                 	db	32
   688  00771A  20                 	db	32
   689  00771B  20                 	db	32
   690  00771C  20                 	db	32
   691  00771D  20                 	db	32
   692  00771E  20                 	db	32
   693  00771F  20                 	db	32
   694  007720  20                 	db	32
   695  007721  20                 	db	32
   696  007722  20                 	db	32
   697  007723  20                 	db	32
   698  007724  20                 	db	32
   699  007725  20                 	db	32
   700  007726  20                 	db	32
   701  007727  20                 	db	32
   702  007728  20                 	db	32
   703  007729  4C                 	db	76	;'L'
   704  00772A  61                 	db	97	;'a'
   705  00772B  62                 	db	98	;'b'
   706  00772C  37                 	db	55	;'7'
   707  00772D  20                 	db	32
   708  00772E  20                 	db	32
   709  00772F  20                 	db	32
   710  007730  20                 	db	32
   711  007731  20                 	db	32
   712  007732  20                 	db	32
   713  007733  20                 	db	32
   714  007734  20                 	db	32
   715  007735  20                 	db	32
   716  007736  20                 	db	32
   717  007737  20                 	db	32
   718  007738  20                 	db	32
   719  007739  20                 	db	32
   720  00773A  20                 	db	32
   721  00773B  20                 	db	32
   722  00773C  20                 	db	32
   723  00773D  20                 	db	32
   724  00773E  20                 	db	32
   725  00773F  20                 	db	32
   726  007740  20                 	db	32
   727  007741  20                 	db	32
   728  007742  20                 	db	32
   729  007743  20                 	db	32
   730  007744  20                 	db	32
   731  007745  20                 	db	32
   732  007746  20                 	db	32
   733  007747  20                 	db	32
   734  007748  20                 	db	32
   735  007749  2A                 	db	42
   736  00774A  00                 	db	0
   737  00774B                     STR_14:
   738  00774B  0A                 	db	10
   739  00774C  0D                 	db	13
   740  00774D  2A                 	db	42
   741  00774E  20                 	db	32
   742  00774F  20                 	db	32
   743  007750  20                 	db	32
   744  007751  20                 	db	32
   745  007752  20                 	db	32
   746  007753  20                 	db	32
   747  007754  20                 	db	32
   748  007755  20                 	db	32
   749  007756  20                 	db	32
   750  007757  20                 	db	32
   751  007758  20                 	db	32
   752  007759  20                 	db	32
   753  00775A  20                 	db	32
   754  00775B  20                 	db	32
   755  00775C  20                 	db	32
   756  00775D  20                 	db	32
   757  00775E  20                 	db	32
   758  00775F  20                 	db	32
   759  007760  20                 	db	32
   760  007761  20                 	db	32
   761  007762  20                 	db	32
   762  007763  41                 	db	65	;'A'
   763  007764  6C                 	db	108	;'l'
   764  007765  61                 	db	97	;'a'
   765  007766  72                 	db	114	;'r'
   766  007767  6D                 	db	109	;'m'
   767  007768  20                 	db	32
   768  007769  53                 	db	83	;'S'
   769  00776A  79                 	db	121	;'y'
   770  00776B  73                 	db	115	;'s'
   771  00776C  74                 	db	116	;'t'
   772  00776D  65                 	db	101	;'e'
   773  00776E  6D                 	db	109	;'m'
   774  00776F  20                 	db	32
   775  007770  20                 	db	32
   776  007771  20                 	db	32
   777  007772  20                 	db	32
   778  007773  20                 	db	32
   779  007774  20                 	db	32
   780  007775  20                 	db	32
   781  007776  20                 	db	32
   782  007777  20                 	db	32
   783  007778  20                 	db	32
   784  007779  20                 	db	32
   785  00777A  20                 	db	32
   786  00777B  20                 	db	32
   787  00777C  20                 	db	32
   788  00777D  20                 	db	32
   789  00777E  20                 	db	32
   790  00777F  20                 	db	32
   791  007780  20                 	db	32
   792  007781  20                 	db	32
   793  007782  20                 	db	32
   794  007783  20                 	db	32
   795  007784  20                 	db	32
   796  007785  20                 	db	32
   797  007786  20                 	db	32
   798  007787  20                 	db	32
   799  007788  2A                 	db	42
   800  007789  00                 	db	0
   801  00778A                     STR_17:
   802  00778A  0A                 	db	10
   803  00778B  0D                 	db	13
   804  00778C  2A                 	db	42
   805  00778D  20                 	db	32
   806  00778E  20                 	db	32
   807  00778F  20                 	db	32
   808  007790  20                 	db	32
   809  007791  20                 	db	32
   810  007792  20                 	db	32
   811  007793  20                 	db	32
   812  007794  20                 	db	32
   813  007795  20                 	db	32
   814  007796  20                 	db	32
   815  007797  20                 	db	32
   816  007798  20                 	db	32
   817  007799  20                 	db	32
   818  00779A  20                 	db	32
   819  00779B  20                 	db	32
   820  00779C  20                 	db	32
   821  00779D  20                 	db	32
   822  00779E  20                 	db	32
   823  00779F  20                 	db	32
   824  0077A0  20                 	db	32
   825  0077A1  20                 	db	32
   826  0077A2  20                 	db	32
   827  0077A3  20                 	db	32
   828  0077A4  53                 	db	83	;'S'
   829  0077A5  68                 	db	104	;'h'
   830  0077A6  72                 	db	114	;'r'
   831  0077A7  65                 	db	101	;'e'
   832  0077A8  79                 	db	121	;'y'
   833  0077A9  20                 	db	32
   834  0077AA  41                 	db	65	;'A'
   835  0077AB  72                 	db	114	;'r'
   836  0077AC  79                 	db	121	;'y'
   837  0077AD  61                 	db	97	;'a'
   838  0077AE  6C                 	db	108	;'l'
   839  0077AF  20                 	db	32
   840  0077B0  20                 	db	32
   841  0077B1  20                 	db	32
   842  0077B2  20                 	db	32
   843  0077B3  20                 	db	32
   844  0077B4  20                 	db	32
   845  0077B5  20                 	db	32
   846  0077B6  20                 	db	32
   847  0077B7  20                 	db	32
   848  0077B8  20                 	db	32
   849  0077B9  20                 	db	32
   850  0077BA  20                 	db	32
   851  0077BB  20                 	db	32
   852  0077BC  20                 	db	32
   853  0077BD  20                 	db	32
   854  0077BE  20                 	db	32
   855  0077BF  20                 	db	32
   856  0077C0  20                 	db	32
   857  0077C1  20                 	db	32
   858  0077C2  20                 	db	32
   859  0077C3  20                 	db	32
   860  0077C4  20                 	db	32
   861  0077C5  20                 	db	32
   862  0077C6  20                 	db	32
   863  0077C7  2A                 	db	42
   864  0077C8  00                 	db	0
   865  0077C9                     STR_15:
   866  0077C9  0A                 	db	10
   867  0077CA  0D                 	db	13
   868  0077CB  2A                 	db	42
   869  0077CC  20                 	db	32
   870  0077CD  20                 	db	32
   871  0077CE  20                 	db	32
   872  0077CF  20                 	db	32
   873  0077D0  20                 	db	32
   874  0077D1  20                 	db	32
   875  0077D2  20                 	db	32
   876  0077D3  20                 	db	32
   877  0077D4  20                 	db	32
   878  0077D5  20                 	db	32
   879  0077D6  20                 	db	32
   880  0077D7  20                 	db	32
   881  0077D8  20                 	db	32
   882  0077D9  20                 	db	32
   883  0077DA  20                 	db	32
   884  0077DB  20                 	db	32
   885  0077DC  20                 	db	32
   886  0077DD  20                 	db	32
   887  0077DE  20                 	db	32
   888  0077DF  45                 	db	69	;'E'
   889  0077E0  6D                 	db	109	;'m'
   890  0077E1  62                 	db	98	;'b'
   891  0077E2  65                 	db	101	;'e'
   892  0077E3  64                 	db	100	;'d'
   893  0077E4  64                 	db	100	;'d'
   894  0077E5  65                 	db	101	;'e'
   895  0077E6  64                 	db	100	;'d'
   896  0077E7  20                 	db	32
   897  0077E8  53                 	db	83	;'S'
   898  0077E9  79                 	db	121	;'y'
   899  0077EA  73                 	db	115	;'s'
   900  0077EB  74                 	db	116	;'t'
   901  0077EC  65                 	db	101	;'e'
   902  0077ED  6D                 	db	109	;'m'
   903  0077EE  73                 	db	115	;'s'
   904  0077EF  20                 	db	32
   905  0077F0  31                 	db	49	;'1'
   906  0077F1  20                 	db	32
   907  0077F2  20                 	db	32
   908  0077F3  20                 	db	32
   909  0077F4  20                 	db	32
   910  0077F5  20                 	db	32
   911  0077F6  20                 	db	32
   912  0077F7  20                 	db	32
   913  0077F8  20                 	db	32
   914  0077F9  20                 	db	32
   915  0077FA  20                 	db	32
   916  0077FB  20                 	db	32
   917  0077FC  20                 	db	32
   918  0077FD  20                 	db	32
   919  0077FE  20                 	db	32
   920  0077FF  20                 	db	32
   921  007800  20                 	db	32
   922  007801  20                 	db	32
   923  007802  20                 	db	32
   924  007803  20                 	db	32
   925  007804  20                 	db	32
   926  007805  20                 	db	32
   927  007806  2A                 	db	42
   928  007807  00                 	db	0
   929  007808                     STR_31:
   930  007808  0A                 	db	10
   931  007809  0D                 	db	13
   932  00780A  2A                 	db	42
   933  00780B  2A                 	db	42
   934  00780C  2A                 	db	42
   935  00780D  2A                 	db	42
   936  00780E  2A                 	db	42
   937  00780F  2A                 	db	42
   938  007810  2A                 	db	42
   939  007811  2A                 	db	42
   940  007812  2A                 	db	42
   941  007813  20                 	db	32
   942  007814  20                 	db	32
   943  007815  20                 	db	32
   944  007816  20                 	db	32
   945  007817  20                 	db	32
   946  007818  20                 	db	32
   947  007819  20                 	db	32
   948  00781A  20                 	db	32
   949  00781B  20                 	db	32
   950  00781C  20                 	db	32
   951  00781D  20                 	db	32
   952  00781E  20                 	db	32
   953  00781F  4D                 	db	77	;'M'
   954  007820  61                 	db	97	;'a'
   955  007821  69                 	db	105	;'i'
   956  007822  6E                 	db	110	;'n'
   957  007823  20                 	db	32
   958  007824  4D                 	db	77	;'M'
   959  007825  65                 	db	101	;'e'
   960  007826  6E                 	db	110	;'n'
   961  007827  75                 	db	117	;'u'
   962  007828  20                 	db	32
   963  007829  20                 	db	32
   964  00782A  20                 	db	32
   965  00782B  20                 	db	32
   966  00782C  20                 	db	32
   967  00782D  20                 	db	32
   968  00782E  20                 	db	32
   969  00782F  20                 	db	32
   970  007830  20                 	db	32
   971  007831  20                 	db	32
   972  007832  20                 	db	32
   973  007833  20                 	db	32
   974  007834  20                 	db	32
   975  007835  20                 	db	32
   976  007836  20                 	db	32
   977  007837  20                 	db	32
   978  007838  2A                 	db	42
   979  007839  2A                 	db	42
   980  00783A  2A                 	db	42
   981  00783B  2A                 	db	42
   982  00783C  2A                 	db	42
   983  00783D  2A                 	db	42
   984  00783E  2A                 	db	42
   985  00783F  2A                 	db	42
   986  007840  2A                 	db	42
   987  007841  2A                 	db	42
   988  007842  2A                 	db	42
   989  007843  2A                 	db	42
   990  007844  2A                 	db	42
   991  007845  2A                 	db	42
   992  007846  00                 	db	0
   993  007847                     STR_41:
   994  007847  0A                 	db	10
   995  007848  0D                 	db	13
   996  007849  2A                 	db	42
   997  00784A  2A                 	db	42
   998  00784B  2A                 	db	42
   999  00784C  2A                 	db	42
  1000  00784D  2A                 	db	42
  1001  00784E  2A                 	db	42
  1002  00784F  2A                 	db	42
  1003  007850  2A                 	db	42
  1004  007851  2A                 	db	42
  1005  007852  20                 	db	32
  1006  007853  20                 	db	32
  1007  007854  20                 	db	32
  1008  007855  20                 	db	32
  1009  007856  20                 	db	32
  1010  007857  20                 	db	32
  1011  007858  20                 	db	32
  1012  007859  20                 	db	32
  1013  00785A  20                 	db	32
  1014  00785B  50                 	db	80	;'P'
  1015  00785C  61                 	db	97	;'a'
  1016  00785D  73                 	db	115	;'s'
  1017  00785E  73                 	db	115	;'s'
  1018  00785F  63                 	db	99	;'c'
  1019  007860  6F                 	db	111	;'o'
  1020  007861  64                 	db	100	;'d'
  1021  007862  65                 	db	101	;'e'
  1022  007863  20                 	db	32
  1023  007864  4D                 	db	77	;'M'
  1024  007865  65                 	db	101	;'e'
  1025  007866  6E                 	db	110	;'n'
  1026  007867  75                 	db	117	;'u'
  1027  007868  20                 	db	32
  1028  007869  20                 	db	32
  1029  00786A  20                 	db	32
  1030  00786B  20                 	db	32
  1031  00786C  20                 	db	32
  1032  00786D  20                 	db	32
  1033  00786E  20                 	db	32
  1034  00786F  20                 	db	32
  1035  007870  20                 	db	32
  1036  007871  20                 	db	32
  1037  007872  20                 	db	32
  1038  007873  20                 	db	32
  1039  007874  20                 	db	32
  1040  007875  20                 	db	32
  1041  007876  20                 	db	32
  1042  007877  2A                 	db	42
  1043  007878  2A                 	db	42
  1044  007879  2A                 	db	42
  1045  00787A  2A                 	db	42
  1046  00787B  2A                 	db	42
  1047  00787C  2A                 	db	42
  1048  00787D  2A                 	db	42
  1049  00787E  2A                 	db	42
  1050  00787F  2A                 	db	42
  1051  007880  2A                 	db	42
  1052  007881  2A                 	db	42
  1053  007882  2A                 	db	42
  1054  007883  2A                 	db	42
  1055  007884  2A                 	db	42
  1056  007885  00                 	db	0
  1057  007886                     STR_13:
  1058  007886  0A                 	db	10
  1059  007887  0D                 	db	13
  1060  007888  2A                 	db	42
  1061  007889  2A                 	db	42
  1062  00788A  2A                 	db	42
  1063  00788B  2A                 	db	42
  1064  00788C  2A                 	db	42
  1065  00788D  2A                 	db	42
  1066  00788E  2A                 	db	42
  1067  00788F  2A                 	db	42
  1068  007890  2A                 	db	42
  1069  007891  2A                 	db	42
  1070  007892  2A                 	db	42
  1071  007893  2A                 	db	42
  1072  007894  2A                 	db	42
  1073  007895  2A                 	db	42
  1074  007896  2A                 	db	42
  1075  007897  2A                 	db	42
  1076  007898  2A                 	db	42
  1077  007899  2A                 	db	42
  1078  00789A  2A                 	db	42
  1079  00789B  2A                 	db	42
  1080  00789C  2A                 	db	42
  1081  00789D  2A                 	db	42
  1082  00789E  2A                 	db	42
  1083  00789F  2A                 	db	42
  1084  0078A0  2A                 	db	42
  1085  0078A1  2A                 	db	42
  1086  0078A2  2A                 	db	42
  1087  0078A3  2A                 	db	42
  1088  0078A4  2A                 	db	42
  1089  0078A5  2A                 	db	42
  1090  0078A6  2A                 	db	42
  1091  0078A7  2A                 	db	42
  1092  0078A8  2A                 	db	42
  1093  0078A9  2A                 	db	42
  1094  0078AA  2A                 	db	42
  1095  0078AB  2A                 	db	42
  1096  0078AC  2A                 	db	42
  1097  0078AD  2A                 	db	42
  1098  0078AE  2A                 	db	42
  1099  0078AF  2A                 	db	42
  1100  0078B0  2A                 	db	42
  1101  0078B1  2A                 	db	42
  1102  0078B2  2A                 	db	42
  1103  0078B3  2A                 	db	42
  1104  0078B4  2A                 	db	42
  1105  0078B5  2A                 	db	42
  1106  0078B6  2A                 	db	42
  1107  0078B7  2A                 	db	42
  1108  0078B8  2A                 	db	42
  1109  0078B9  2A                 	db	42
  1110  0078BA  2A                 	db	42
  1111  0078BB  2A                 	db	42
  1112  0078BC  2A                 	db	42
  1113  0078BD  2A                 	db	42
  1114  0078BE  2A                 	db	42
  1115  0078BF  2A                 	db	42
  1116  0078C0  2A                 	db	42
  1117  0078C1  2A                 	db	42
  1118  0078C2  2A                 	db	42
  1119  0078C3  2A                 	db	42
  1120  0078C4  00                 	db	0
  1121  0078C5                     STR_70:
  1122  0078C5  0A                 	db	10
  1123  0078C6  0D                 	db	13
  1124  0078C7  20                 	db	32
  1125  0078C8  20                 	db	32
  1126  0078C9  20                 	db	32
  1127  0078CA  20                 	db	32
  1128  0078CB  20                 	db	32
  1129  0078CC  20                 	db	32
  1130  0078CD  20                 	db	32
  1131  0078CE  20                 	db	32
  1132  0078CF  20                 	db	32
  1133  0078D0  20                 	db	32
  1134  0078D1  20                 	db	32
  1135  0078D2  20                 	db	32
  1136  0078D3  20                 	db	32
  1137  0078D4  20                 	db	32
  1138  0078D5  20                 	db	32
  1139  0078D6  20                 	db	32
  1140  0078D7  20                 	db	32
  1141  0078D8  33                 	db	51	;'3'
  1142  0078D9  2E                 	db	46
  1143  0078DA  43                 	db	67	;'C'
  1144  0078DB  68                 	db	104	;'h'
  1145  0078DC  61                 	db	97	;'a'
  1146  0078DD  6E                 	db	110	;'n'
  1147  0078DE  67                 	db	103	;'g'
  1148  0078DF  65                 	db	101	;'e'
  1149  0078E0  20                 	db	32
  1150  0078E1  54                 	db	84	;'T'
  1151  0078E2  65                 	db	101	;'e'
  1152  0078E3  6D                 	db	109	;'m'
  1153  0078E4  70                 	db	112	;'p'
  1154  0078E5  65                 	db	101	;'e'
  1155  0078E6  72                 	db	114	;'r'
  1156  0078E7  61                 	db	97	;'a'
  1157  0078E8  74                 	db	116	;'t'
  1158  0078E9  75                 	db	117	;'u'
  1159  0078EA  72                 	db	114	;'r'
  1160  0078EB  65                 	db	101	;'e'
  1161  0078EC  20                 	db	32
  1162  0078ED  53                 	db	83	;'S'
  1163  0078EE  65                 	db	101	;'e'
  1164  0078EF  6E                 	db	110	;'n'
  1165  0078F0  73                 	db	115	;'s'
  1166  0078F1  6F                 	db	111	;'o'
  1167  0078F2  72                 	db	114	;'r'
  1168  0078F3  20                 	db	32
  1169  0078F4  41                 	db	65	;'A'
  1170  0078F5  6C                 	db	108	;'l'
  1171  0078F6  61                 	db	97	;'a'
  1172  0078F7  72                 	db	114	;'r'
  1173  0078F8  6D                 	db	109	;'m'
  1174  0078F9  20                 	db	32
  1175  0078FA  54                 	db	84	;'T'
  1176  0078FB  68                 	db	104	;'h'
  1177  0078FC  72                 	db	114	;'r'
  1178  0078FD  65                 	db	101	;'e'
  1179  0078FE  73                 	db	115	;'s'
  1180  0078FF  68                 	db	104	;'h'
  1181  007900  6F                 	db	111	;'o'
  1182  007901  6C                 	db	108	;'l'
  1183  007902  64                 	db	100	;'d'
  1184  007903  00                 	db	0
  1185  007904                     STR_4:
  1186  007904  0A                 	db	10
  1187  007905  0D                 	db	13
  1188  007906  57                 	db	87	;'W'
  1189  007907  65                 	db	101	;'e'
  1190  007908  6C                 	db	108	;'l'
  1191  007909  63                 	db	99	;'c'
  1192  00790A  6F                 	db	111	;'o'
  1193  00790B  6D                 	db	109	;'m'
  1194  00790C  65                 	db	101	;'e'
  1195  00790D  20                 	db	32
  1196  00790E  55                 	db	85	;'U'
  1197  00790F  73                 	db	115	;'s'
  1198  007910  65                 	db	101	;'e'
  1199  007911  72                 	db	114	;'r'
  1200  007912  2E                 	db	46
  1201  007913  20                 	db	32
  1202  007914  54                 	db	84	;'T'
  1203  007915  68                 	db	104	;'h'
  1204  007916  69                 	db	105	;'i'
  1205  007917  73                 	db	115	;'s'
  1206  007918  20                 	db	32
  1207  007919  69                 	db	105	;'i'
  1208  00791A  73                 	db	115	;'s'
  1209  00791B  20                 	db	32
  1210  00791C  74                 	db	116	;'t'
  1211  00791D  68                 	db	104	;'h'
  1212  00791E  65                 	db	101	;'e'
  1213  00791F  20                 	db	32
  1214  007920  66                 	db	102	;'f'
  1215  007921  69                 	db	105	;'i'
  1216  007922  72                 	db	114	;'r'
  1217  007923  73                 	db	115	;'s'
  1218  007924  74                 	db	116	;'t'
  1219  007925  20                 	db	32
  1220  007926  74                 	db	116	;'t'
  1221  007927  69                 	db	105	;'i'
  1222  007928  6D                 	db	109	;'m'
  1223  007929  65                 	db	101	;'e'
  1224  00792A  20                 	db	32
  1225  00792B  79                 	db	121	;'y'
  1226  00792C  6F                 	db	111	;'o'
  1227  00792D  75                 	db	117	;'u'
  1228  00792E  20                 	db	32
  1229  00792F  68                 	db	104	;'h'
  1230  007930  61                 	db	97	;'a'
  1231  007931  76                 	db	118	;'v'
  1232  007932  65                 	db	101	;'e'
  1233  007933  20                 	db	32
  1234  007934  6C                 	db	108	;'l'
  1235  007935  6F                 	db	111	;'o'
  1236  007936  67                 	db	103	;'g'
  1237  007937  67                 	db	103	;'g'
  1238  007938  65                 	db	101	;'e'
  1239  007939  64                 	db	100	;'d'
  1240  00793A  20                 	db	32
  1241  00793B  69                 	db	105	;'i'
  1242  00793C  6E                 	db	110	;'n'
  1243  00793D  00                 	db	0
  1244  00793E                     STR_120:
  1245  00793E  0A                 	db	10
  1246  00793F  0D                 	db	13
  1247  007940  20                 	db	32
  1248  007941  45                 	db	69	;'E'
  1249  007942  6E                 	db	110	;'n'
  1250  007943  74                 	db	116	;'t'
  1251  007944  65                 	db	101	;'e'
  1252  007945  72                 	db	114	;'r'
  1253  007946  20                 	db	32
  1254  007947  54                 	db	84	;'T'
  1255  007948  65                 	db	101	;'e'
  1256  007949  6D                 	db	109	;'m'
  1257  00794A  70                 	db	112	;'p'
  1258  00794B  65                 	db	101	;'e'
  1259  00794C  72                 	db	114	;'r'
  1260  00794D  61                 	db	97	;'a'
  1261  00794E  74                 	db	116	;'t'
  1262  00794F  75                 	db	117	;'u'
  1263  007950  72                 	db	114	;'r'
  1264  007951  65                 	db	101	;'e'
  1265  007952  20                 	db	32
  1266  007953  74                 	db	116	;'t'
  1267  007954  68                 	db	104	;'h'
  1268  007955  72                 	db	114	;'r'
  1269  007956  65                 	db	101	;'e'
  1270  007957  73                 	db	115	;'s'
  1271  007958  68                 	db	104	;'h'
  1272  007959  6F                 	db	111	;'o'
  1273  00795A  6C                 	db	108	;'l'
  1274  00795B  64                 	db	100	;'d'
  1275  00795C  20                 	db	32
  1276  00795D  69                 	db	105	;'i'
  1277  00795E  6E                 	db	110	;'n'
  1278  00795F  20                 	db	32
  1279  007960  46                 	db	70	;'F'
  1280  007961  61                 	db	97	;'a'
  1281  007962  68                 	db	104	;'h'
  1282  007963  72                 	db	114	;'r'
  1283  007964  65                 	db	101	;'e'
  1284  007965  6E                 	db	110	;'n'
  1285  007966  68                 	db	104	;'h'
  1286  007967  65                 	db	101	;'e'
  1287  007968  69                 	db	105	;'i'
  1288  007969  74                 	db	116	;'t'
  1289  00796A  28                 	db	40
  1290  00796B  32                 	db	50	;'2'
  1291  00796C  20                 	db	32
  1292  00796D  64                 	db	100	;'d'
  1293  00796E  69                 	db	105	;'i'
  1294  00796F  67                 	db	103	;'g'
  1295  007970  69                 	db	105	;'i'
  1296  007971  74                 	db	116	;'t'
  1297  007972  73                 	db	115	;'s'
  1298  007973  29                 	db	41
  1299  007974  3A                 	db	58	;':'
  1300  007975  20                 	db	32
  1301  007976  00                 	db	0
  1302  007977                     STR_37:
  1303  007977  0A                 	db	10
  1304  007978  0D                 	db	13
  1305  007979  20                 	db	32
  1306  00797A  20                 	db	32
  1307  00797B  20                 	db	32
  1308  00797C  20                 	db	32
  1309  00797D  20                 	db	32
  1310  00797E  20                 	db	32
  1311  00797F  35                 	db	53	;'5'
  1312  007980  2E                 	db	46
  1313  007981  55                 	db	85	;'U'
  1314  007982  73                 	db	115	;'s'
  1315  007983  65                 	db	101	;'e'
  1316  007984  20                 	db	32
  1317  007985  4B                 	db	75	;'K'
  1318  007986  65                 	db	101	;'e'
  1319  007987  79                 	db	121	;'y'
  1320  007988  70                 	db	112	;'p'
  1321  007989  61                 	db	97	;'a'
  1322  00798A  64                 	db	100	;'d'
  1323  00798B  20                 	db	32
  1324  00798C  61                 	db	97	;'a'
  1325  00798D  73                 	db	115	;'s'
  1326  00798E  20                 	db	32
  1327  00798F  74                 	db	116	;'t'
  1328  007990  68                 	db	104	;'h'
  1329  007991  65                 	db	101	;'e'
  1330  007992  20                 	db	32
  1331  007993  6F                 	db	111	;'o'
  1332  007994  6E                 	db	110	;'n'
  1333  007995  6C                 	db	108	;'l'
  1334  007996  79                 	db	121	;'y'
  1335  007997  20                 	db	32
  1336  007998  69                 	db	105	;'i'
  1337  007999  6E                 	db	110	;'n'
  1338  00799A  70                 	db	112	;'p'
  1339  00799B  75                 	db	117	;'u'
  1340  00799C  74                 	db	116	;'t'
  1341  00799D  20                 	db	32
  1342  00799E  28                 	db	40
  1343  00799F  27                 	db	39
  1344  0079A0  41                 	db	65	;'A'
  1345  0079A1  27                 	db	39
  1346  0079A2  20                 	db	32
  1347  0079A3  3D                 	db	61	;'='
  1348  0079A4  20                 	db	32
  1349  0079A5  45                 	db	69	;'E'
  1350  0079A6  6E                 	db	110	;'n'
  1351  0079A7  74                 	db	116	;'t'
  1352  0079A8  65                 	db	101	;'e'
  1353  0079A9  72                 	db	114	;'r'
  1354  0079AA  20                 	db	32
  1355  0079AB  4B                 	db	75	;'K'
  1356  0079AC  65                 	db	101	;'e'
  1357  0079AD  79                 	db	121	;'y'
  1358  0079AE  29                 	db	41
  1359  0079AF  00                 	db	0
  1360  0079B0                     STR_96:
  1361  0079B0  0A                 	db	10
  1362  0079B1  0D                 	db	13
  1363  0079B2  57                 	db	87	;'W'
  1364  0079B3  6F                 	db	111	;'o'
  1365  0079B4  75                 	db	117	;'u'
  1366  0079B5  6C                 	db	108	;'l'
  1367  0079B6  64                 	db	100	;'d'
  1368  0079B7  20                 	db	32
  1369  0079B8  79                 	db	121	;'y'
  1370  0079B9  6F                 	db	111	;'o'
  1371  0079BA  75                 	db	117	;'u'
  1372  0079BB  20                 	db	32
  1373  0079BC  6C                 	db	108	;'l'
  1374  0079BD  69                 	db	105	;'i'
  1375  0079BE  6B                 	db	107	;'k'
  1376  0079BF  65                 	db	101	;'e'
  1377  0079C0  20                 	db	32
  1378  0079C1  74                 	db	116	;'t'
  1379  0079C2  6F                 	db	111	;'o'
  1380  0079C3  20                 	db	32
  1381  0079C4  75                 	db	117	;'u'
  1382  0079C5  70                 	db	112	;'p'
  1383  0079C6  64                 	db	100	;'d'
  1384  0079C7  61                 	db	97	;'a'
  1385  0079C8  74                 	db	116	;'t'
  1386  0079C9  65                 	db	101	;'e'
  1387  0079CA  20                 	db	32
  1388  0079CB  74                 	db	116	;'t'
  1389  0079CC  68                 	db	104	;'h'
  1390  0079CD  65                 	db	101	;'e'
  1391  0079CE  20                 	db	32
  1392  0079CF  54                 	db	84	;'T'
  1393  0079D0  68                 	db	104	;'h'
  1394  0079D1  72                 	db	114	;'r'
  1395  0079D2  65                 	db	101	;'e'
  1396  0079D3  73                 	db	115	;'s'
  1397  0079D4  68                 	db	104	;'h'
  1398  0079D5  6F                 	db	111	;'o'
  1399  0079D6  6C                 	db	108	;'l'
  1400  0079D7  64                 	db	100	;'d'
  1401  0079D8  20                 	db	32
  1402  0079D9  54                 	db	84	;'T'
  1403  0079DA  65                 	db	101	;'e'
  1404  0079DB  6D                 	db	109	;'m'
  1405  0079DC  70                 	db	112	;'p'
  1406  0079DD  65                 	db	101	;'e'
  1407  0079DE  72                 	db	114	;'r'
  1408  0079DF  61                 	db	97	;'a'
  1409  0079E0  74                 	db	116	;'t'
  1410  0079E1  75                 	db	117	;'u'
  1411  0079E2  72                 	db	114	;'r'
  1412  0079E3  65                 	db	101	;'e'
  1413  0079E4  3F                 	db	63	;'?'
  1414  0079E5  00                 	db	0
  1415  0079E6                     STR_69:
  1416  0079E6  0A                 	db	10
  1417  0079E7  0D                 	db	13
  1418  0079E8  20                 	db	32
  1419  0079E9  20                 	db	32
  1420  0079EA  20                 	db	32
  1421  0079EB  20                 	db	32
  1422  0079EC  20                 	db	32
  1423  0079ED  20                 	db	32
  1424  0079EE  20                 	db	32
  1425  0079EF  20                 	db	32
  1426  0079F0  20                 	db	32
  1427  0079F1  20                 	db	32
  1428  0079F2  20                 	db	32
  1429  0079F3  20                 	db	32
  1430  0079F4  20                 	db	32
  1431  0079F5  20                 	db	32
  1432  0079F6  20                 	db	32
  1433  0079F7  20                 	db	32
  1434  0079F8  20                 	db	32
  1435  0079F9  32                 	db	50	;'2'
  1436  0079FA  2E                 	db	46
  1437  0079FB  44                 	db	68	;'D'
  1438  0079FC  69                 	db	105	;'i'
  1439  0079FD  73                 	db	115	;'s'
  1440  0079FE  61                 	db	97	;'a'
  1441  0079FF  62                 	db	98	;'b'
  1442  007A00  6C                 	db	108	;'l'
  1443  007A01  65                 	db	101	;'e'
  1444  007A02  20                 	db	32
  1445  007A03  54                 	db	84	;'T'
  1446  007A04  65                 	db	101	;'e'
  1447  007A05  6D                 	db	109	;'m'
  1448  007A06  70                 	db	112	;'p'
  1449  007A07  65                 	db	101	;'e'
  1450  007A08  72                 	db	114	;'r'
  1451  007A09  61                 	db	97	;'a'
  1452  007A0A  74                 	db	116	;'t'
  1453  007A0B  75                 	db	117	;'u'
  1454  007A0C  72                 	db	114	;'r'
  1455  007A0D  65                 	db	101	;'e'
  1456  007A0E  20                 	db	32
  1457  007A0F  53                 	db	83	;'S'
  1458  007A10  65                 	db	101	;'e'
  1459  007A11  6E                 	db	110	;'n'
  1460  007A12  73                 	db	115	;'s'
  1461  007A13  6F                 	db	111	;'o'
  1462  007A14  72                 	db	114	;'r'
  1463  007A15  20                 	db	32
  1464  007A16  41                 	db	65	;'A'
  1465  007A17  6C                 	db	108	;'l'
  1466  007A18  61                 	db	97	;'a'
  1467  007A19  72                 	db	114	;'r'
  1468  007A1A  6D                 	db	109	;'m'
  1469  007A1B  00                 	db	0
  1470  007A1C                     STR_68:
  1471  007A1C  0A                 	db	10
  1472  007A1D  0D                 	db	13
  1473  007A1E  20                 	db	32
  1474  007A1F  20                 	db	32
  1475  007A20  20                 	db	32
  1476  007A21  20                 	db	32
  1477  007A22  20                 	db	32
  1478  007A23  20                 	db	32
  1479  007A24  20                 	db	32
  1480  007A25  20                 	db	32
  1481  007A26  20                 	db	32
  1482  007A27  20                 	db	32
  1483  007A28  20                 	db	32
  1484  007A29  20                 	db	32
  1485  007A2A  20                 	db	32
  1486  007A2B  20                 	db	32
  1487  007A2C  20                 	db	32
  1488  007A2D  20                 	db	32
  1489  007A2E  20                 	db	32
  1490  007A2F  31                 	db	49	;'1'
  1491  007A30  2E                 	db	46
  1492  007A31  45                 	db	69	;'E'
  1493  007A32  6E                 	db	110	;'n'
  1494  007A33  61                 	db	97	;'a'
  1495  007A34  62                 	db	98	;'b'
  1496  007A35  6C                 	db	108	;'l'
  1497  007A36  65                 	db	101	;'e'
  1498  007A37  20                 	db	32
  1499  007A38  54                 	db	84	;'T'
  1500  007A39  65                 	db	101	;'e'
  1501  007A3A  6D                 	db	109	;'m'
  1502  007A3B  70                 	db	112	;'p'
  1503  007A3C  65                 	db	101	;'e'
  1504  007A3D  72                 	db	114	;'r'
  1505  007A3E  61                 	db	97	;'a'
  1506  007A3F  74                 	db	116	;'t'
  1507  007A40  75                 	db	117	;'u'
  1508  007A41  72                 	db	114	;'r'
  1509  007A42  65                 	db	101	;'e'
  1510  007A43  20                 	db	32
  1511  007A44  53                 	db	83	;'S'
  1512  007A45  65                 	db	101	;'e'
  1513  007A46  6E                 	db	110	;'n'
  1514  007A47  73                 	db	115	;'s'
  1515  007A48  6F                 	db	111	;'o'
  1516  007A49  72                 	db	114	;'r'
  1517  007A4A  20                 	db	32
  1518  007A4B  41                 	db	65	;'A'
  1519  007A4C  6C                 	db	108	;'l'
  1520  007A4D  61                 	db	97	;'a'
  1521  007A4E  72                 	db	114	;'r'
  1522  007A4F  6D                 	db	109	;'m'
  1523  007A50  00                 	db	0
  1524  007A51                     STR_36:
  1525  007A51  0A                 	db	10
  1526  007A52  0D                 	db	13
  1527  007A53  20                 	db	32
  1528  007A54  20                 	db	32
  1529  007A55  20                 	db	32
  1530  007A56  20                 	db	32
  1531  007A57  20                 	db	32
  1532  007A58  20                 	db	32
  1533  007A59  34                 	db	52	;'4'
  1534  007A5A  2E                 	db	46
  1535  007A5B  55                 	db	85	;'U'
  1536  007A5C  73                 	db	115	;'s'
  1537  007A5D  65                 	db	101	;'e'
  1538  007A5E  20                 	db	32
  1539  007A5F  4B                 	db	75	;'K'
  1540  007A60  65                 	db	101	;'e'
  1541  007A61  79                 	db	121	;'y'
  1542  007A62  62                 	db	98	;'b'
  1543  007A63  6F                 	db	111	;'o'
  1544  007A64  61                 	db	97	;'a'
  1545  007A65  72                 	db	114	;'r'
  1546  007A66  64                 	db	100	;'d'
  1547  007A67  28                 	db	40
  1548  007A68  54                 	db	84	;'T'
  1549  007A69  65                 	db	101	;'e'
  1550  007A6A  72                 	db	114	;'r'
  1551  007A6B  6D                 	db	109	;'m'
  1552  007A6C  69                 	db	105	;'i'
  1553  007A6D  6E                 	db	110	;'n'
  1554  007A6E  61                 	db	97	;'a'
  1555  007A6F  6C                 	db	108	;'l'
  1556  007A70  29                 	db	41
  1557  007A71  20                 	db	32
  1558  007A72  61                 	db	97	;'a'
  1559  007A73  73                 	db	115	;'s'
  1560  007A74  20                 	db	32
  1561  007A75  74                 	db	116	;'t'
  1562  007A76  68                 	db	104	;'h'
  1563  007A77  65                 	db	101	;'e'
  1564  007A78  20                 	db	32
  1565  007A79  6F                 	db	111	;'o'
  1566  007A7A  6E                 	db	110	;'n'
  1567  007A7B  6C                 	db	108	;'l'
  1568  007A7C  79                 	db	121	;'y'
  1569  007A7D  20                 	db	32
  1570  007A7E  69                 	db	105	;'i'
  1571  007A7F  6E                 	db	110	;'n'
  1572  007A80  70                 	db	112	;'p'
  1573  007A81  75                 	db	117	;'u'
  1574  007A82  74                 	db	116	;'t'
  1575  007A83  00                 	db	0
  1576  007A84                     STR_53:
  1577  007A84  0A                 	db	10
  1578  007A85  0D                 	db	13
  1579  007A86  49                 	db	73	;'I'
  1580  007A87  6E                 	db	110	;'n'
  1581  007A88  63                 	db	99	;'c'
  1582  007A89  6F                 	db	111	;'o'
  1583  007A8A  72                 	db	114	;'r'
  1584  007A8B  72                 	db	114	;'r'
  1585  007A8C  65                 	db	101	;'e'
  1586  007A8D  63                 	db	99	;'c'
  1587  007A8E  74                 	db	116	;'t'
  1588  007A8F  20                 	db	32
  1589  007A90  50                 	db	80	;'P'
  1590  007A91  61                 	db	97	;'a'
  1591  007A92  73                 	db	115	;'s'
  1592  007A93  73                 	db	115	;'s'
  1593  007A94  77                 	db	119	;'w'
  1594  007A95  6F                 	db	111	;'o'
  1595  007A96  72                 	db	114	;'r'
  1596  007A97  64                 	db	100	;'d'
  1597  007A98  2E                 	db	46
  1598  007A99  20                 	db	32
  1599  007A9A  43                 	db	67	;'C'
  1600  007A9B  61                 	db	97	;'a'
  1601  007A9C  6E                 	db	110	;'n'
  1602  007A9D  6E                 	db	110	;'n'
  1603  007A9E  6F                 	db	111	;'o'
  1604  007A9F  74                 	db	116	;'t'
  1605  007AA0  20                 	db	32
  1606  007AA1  63                 	db	99	;'c'
  1607  007AA2  68                 	db	104	;'h'
  1608  007AA3  61                 	db	97	;'a'
  1609  007AA4  6E                 	db	110	;'n'
  1610  007AA5  67                 	db	103	;'g'
  1611  007AA6  65                 	db	101	;'e'
  1612  007AA7  20                 	db	32
  1613  007AA8  70                 	db	112	;'p'
  1614  007AA9  61                 	db	97	;'a'
  1615  007AAA  73                 	db	115	;'s'
  1616  007AAB  73                 	db	115	;'s'
  1617  007AAC  77                 	db	119	;'w'
  1618  007AAD  6F                 	db	111	;'o'
  1619  007AAE  72                 	db	114	;'r'
  1620  007AAF  64                 	db	100	;'d'
  1621  007AB0  2E                 	db	46
  1622  007AB1  0A                 	db	10
  1623  007AB2  0D                 	db	13
  1624  007AB3  00                 	db	0
  1625  007AB4                     STR_58:
  1626  007AB4  0A                 	db	10
  1627  007AB5  0D                 	db	13
  1628  007AB6  20                 	db	32
  1629  007AB7  20                 	db	32
  1630  007AB8  20                 	db	32
  1631  007AB9  20                 	db	32
  1632  007ABA  20                 	db	32
  1633  007ABB  20                 	db	32
  1634  007ABC  20                 	db	32
  1635  007ABD  20                 	db	32
  1636  007ABE  20                 	db	32
  1637  007ABF  20                 	db	32
  1638  007AC0  20                 	db	32
  1639  007AC1  20                 	db	32
  1640  007AC2  20                 	db	32
  1641  007AC3  20                 	db	32
  1642  007AC4  20                 	db	32
  1643  007AC5  20                 	db	32
  1644  007AC6  20                 	db	32
  1645  007AC7  32                 	db	50	;'2'
  1646  007AC8  2E                 	db	46
  1647  007AC9  44                 	db	68	;'D'
  1648  007ACA  69                 	db	105	;'i'
  1649  007ACB  73                 	db	115	;'s'
  1650  007ACC  61                 	db	97	;'a'
  1651  007ACD  62                 	db	98	;'b'
  1652  007ACE  6C                 	db	108	;'l'
  1653  007ACF  65                 	db	101	;'e'
  1654  007AD0  20                 	db	32
  1655  007AD1  50                 	db	80	;'P'
  1656  007AD2  49                 	db	73	;'I'
  1657  007AD3  52                 	db	82	;'R'
  1658  007AD4  20                 	db	32
  1659  007AD5  53                 	db	83	;'S'
  1660  007AD6  65                 	db	101	;'e'
  1661  007AD7  6E                 	db	110	;'n'
  1662  007AD8  73                 	db	115	;'s'
  1663  007AD9  6F                 	db	111	;'o'
  1664  007ADA  72                 	db	114	;'r'
  1665  007ADB  20                 	db	32
  1666  007ADC  41                 	db	65	;'A'
  1667  007ADD  6C                 	db	108	;'l'
  1668  007ADE  61                 	db	97	;'a'
  1669  007ADF  72                 	db	114	;'r'
  1670  007AE0  6D                 	db	109	;'m'
  1671  007AE1  00                 	db	0
  1672  007AE2                     STR_57:
  1673  007AE2  0A                 	db	10
  1674  007AE3  0D                 	db	13
  1675  007AE4  20                 	db	32
  1676  007AE5  20                 	db	32
  1677  007AE6  20                 	db	32
  1678  007AE7  20                 	db	32
  1679  007AE8  20                 	db	32
  1680  007AE9  20                 	db	32
  1681  007AEA  20                 	db	32
  1682  007AEB  20                 	db	32
  1683  007AEC  20                 	db	32
  1684  007AED  20                 	db	32
  1685  007AEE  20                 	db	32
  1686  007AEF  20                 	db	32
  1687  007AF0  20                 	db	32
  1688  007AF1  20                 	db	32
  1689  007AF2  20                 	db	32
  1690  007AF3  20                 	db	32
  1691  007AF4  20                 	db	32
  1692  007AF5  31                 	db	49	;'1'
  1693  007AF6  2E                 	db	46
  1694  007AF7  45                 	db	69	;'E'
  1695  007AF8  6E                 	db	110	;'n'
  1696  007AF9  61                 	db	97	;'a'
  1697  007AFA  62                 	db	98	;'b'
  1698  007AFB  6C                 	db	108	;'l'
  1699  007AFC  65                 	db	101	;'e'
  1700  007AFD  20                 	db	32
  1701  007AFE  50                 	db	80	;'P'
  1702  007AFF  49                 	db	73	;'I'
  1703  007B00  52                 	db	82	;'R'
  1704  007B01  20                 	db	32
  1705  007B02  53                 	db	83	;'S'
  1706  007B03  65                 	db	101	;'e'
  1707  007B04  6E                 	db	110	;'n'
  1708  007B05  73                 	db	115	;'s'
  1709  007B06  6F                 	db	111	;'o'
  1710  007B07  72                 	db	114	;'r'
  1711  007B08  20                 	db	32
  1712  007B09  41                 	db	65	;'A'
  1713  007B0A  6C                 	db	108	;'l'
  1714  007B0B  61                 	db	97	;'a'
  1715  007B0C  72                 	db	114	;'r'
  1716  007B0D  6D                 	db	109	;'m'
  1717  007B0E  00                 	db	0
  1718  007B0F                     STR_94:
  1719  007B0F  0D                 	db	13
  1720  007B10  0A                 	db	10
  1721  007B11  45                 	db	69	;'E'
  1722  007B12  6E                 	db	110	;'n'
  1723  007B13  74                 	db	116	;'t'
  1724  007B14  65                 	db	101	;'e'
  1725  007B15  72                 	db	114	;'r'
  1726  007B16  20                 	db	32
  1727  007B17  74                 	db	116	;'t'
  1728  007B18  68                 	db	104	;'h'
  1729  007B19  65                 	db	101	;'e'
  1730  007B1A  20                 	db	32
  1731  007B1B  70                 	db	112	;'p'
  1732  007B1C  61                 	db	97	;'a'
  1733  007B1D  73                 	db	115	;'s'
  1734  007B1E  73                 	db	115	;'s'
  1735  007B1F  77                 	db	119	;'w'
  1736  007B20  6F                 	db	111	;'o'
  1737  007B21  72                 	db	114	;'r'
  1738  007B22  64                 	db	100	;'d'
  1739  007B23  20                 	db	32
  1740  007B24  74                 	db	116	;'t'
  1741  007B25  6F                 	db	111	;'o'
  1742  007B26  20                 	db	32
  1743  007B27  72                 	db	114	;'r'
  1744  007B28  65                 	db	101	;'e'
  1745  007B29  73                 	db	115	;'s'
  1746  007B2A  65                 	db	101	;'e'
  1747  007B2B  74                 	db	116	;'t'
  1748  007B2C  20                 	db	32
  1749  007B2D  74                 	db	116	;'t'
  1750  007B2E  68                 	db	104	;'h'
  1751  007B2F  65                 	db	101	;'e'
  1752  007B30  20                 	db	32
  1753  007B31  61                 	db	97	;'a'
  1754  007B32  6C                 	db	108	;'l'
  1755  007B33  61                 	db	97	;'a'
  1756  007B34  72                 	db	114	;'r'
  1757  007B35  6D                 	db	109	;'m'
  1758  007B36  3A                 	db	58	;':'
  1759  007B37  20                 	db	32
  1760  007B38  0A                 	db	10
  1761  007B39  0D                 	db	13
  1762  007B3A  00                 	db	0
  1763  007B3B                     STR_108:
  1764  007B3B  0A                 	db	10
  1765  007B3C  0D                 	db	13
  1766  007B3D  20                 	db	32
  1767  007B3E  54                 	db	84	;'T'
  1768  007B3F  45                 	db	69	;'E'
  1769  007B40  4D                 	db	77	;'M'
  1770  007B41  50                 	db	80	;'P'
  1771  007B42  45                 	db	69	;'E'
  1772  007B43  52                 	db	82	;'R'
  1773  007B44  41                 	db	65	;'A'
  1774  007B45  54                 	db	84	;'T'
  1775  007B46  55                 	db	85	;'U'
  1776  007B47  52                 	db	82	;'R'
  1777  007B48  45                 	db	69	;'E'
  1778  007B49  20                 	db	32
  1779  007B4A  53                 	db	83	;'S'
  1780  007B4B  45                 	db	69	;'E'
  1781  007B4C  4E                 	db	78	;'N'
  1782  007B4D  53                 	db	83	;'S'
  1783  007B4E  4F                 	db	79	;'O'
  1784  007B4F  52                 	db	82	;'R'
  1785  007B50  20                 	db	32
  1786  007B51  41                 	db	65	;'A'
  1787  007B52  4C                 	db	76	;'L'
  1788  007B53  41                 	db	65	;'A'
  1789  007B54  52                 	db	82	;'R'
  1790  007B55  4D                 	db	77	;'M'
  1791  007B56  20                 	db	32
  1792  007B57  49                 	db	73	;'I'
  1793  007B58  53                 	db	83	;'S'
  1794  007B59  20                 	db	32
  1795  007B5A  4B                 	db	75	;'K'
  1796  007B5B  45                 	db	69	;'E'
  1797  007B5C  50                 	db	80	;'P'
  1798  007B5D  54                 	db	84	;'T'
  1799  007B5E  20                 	db	32
  1800  007B5F  45                 	db	69	;'E'
  1801  007B60  4E                 	db	78	;'N'
  1802  007B61  41                 	db	65	;'A'
  1803  007B62  42                 	db	66	;'B'
  1804  007B63  4C                 	db	76	;'L'
  1805  007B64  45                 	db	69	;'E'
  1806  007B65  44                 	db	68	;'D'
  1807  007B66  00                 	db	0
  1808  007B67                     STR_35:
  1809  007B67  0A                 	db	10
  1810  007B68  0D                 	db	13
  1811  007B69  20                 	db	32
  1812  007B6A  20                 	db	32
  1813  007B6B  20                 	db	32
  1814  007B6C  20                 	db	32
  1815  007B6D  20                 	db	32
  1816  007B6E  20                 	db	32
  1817  007B6F  33                 	db	51	;'3'
  1818  007B70  2E                 	db	46
  1819  007B71  54                 	db	84	;'T'
  1820  007B72  65                 	db	101	;'e'
  1821  007B73  6D                 	db	109	;'m'
  1822  007B74  70                 	db	112	;'p'
  1823  007B75  65                 	db	101	;'e'
  1824  007B76  72                 	db	114	;'r'
  1825  007B77  61                 	db	97	;'a'
  1826  007B78  74                 	db	116	;'t'
  1827  007B79  75                 	db	117	;'u'
  1828  007B7A  72                 	db	114	;'r'
  1829  007B7B  65                 	db	101	;'e'
  1830  007B7C  20                 	db	32
  1831  007B7D  53                 	db	83	;'S'
  1832  007B7E  65                 	db	101	;'e'
  1833  007B7F  6E                 	db	110	;'n'
  1834  007B80  73                 	db	115	;'s'
  1835  007B81  6F                 	db	111	;'o'
  1836  007B82  72                 	db	114	;'r'
  1837  007B83  20                 	db	32
  1838  007B84  41                 	db	65	;'A'
  1839  007B85  6C                 	db	108	;'l'
  1840  007B86  61                 	db	97	;'a'
  1841  007B87  72                 	db	114	;'r'
  1842  007B88  6D                 	db	109	;'m'
  1843  007B89  20                 	db	32
  1844  007B8A  4F                 	db	79	;'O'
  1845  007B8B  70                 	db	112	;'p'
  1846  007B8C  74                 	db	116	;'t'
  1847  007B8D  69                 	db	105	;'i'
  1848  007B8E  6F                 	db	111	;'o'
  1849  007B8F  6E                 	db	110	;'n'
  1850  007B90  73                 	db	115	;'s'
  1851  007B91  00                 	db	0
  1852  007B92                     STR_113:
  1853  007B92  0D                 	db	13
  1854  007B93  0A                 	db	10
  1855  007B94  45                 	db	69	;'E'
  1856  007B95  6E                 	db	110	;'n'
  1857  007B96  74                 	db	116	;'t'
  1858  007B97  65                 	db	101	;'e'
  1859  007B98  72                 	db	114	;'r'
  1860  007B99  20                 	db	32
  1861  007B9A  74                 	db	116	;'t'
  1862  007B9B  68                 	db	104	;'h'
  1863  007B9C  65                 	db	101	;'e'
  1864  007B9D  20                 	db	32
  1865  007B9E  70                 	db	112	;'p'
  1866  007B9F  61                 	db	97	;'a'
  1867  007BA0  73                 	db	115	;'s'
  1868  007BA1  73                 	db	115	;'s'
  1869  007BA2  77                 	db	119	;'w'
  1870  007BA3  6F                 	db	111	;'o'
  1871  007BA4  72                 	db	114	;'r'
  1872  007BA5  64                 	db	100	;'d'
  1873  007BA6  20                 	db	32
  1874  007BA7  74                 	db	116	;'t'
  1875  007BA8  6F                 	db	111	;'o'
  1876  007BA9  20                 	db	32
  1877  007BAA  72                 	db	114	;'r'
  1878  007BAB  65                 	db	101	;'e'
  1879  007BAC  73                 	db	115	;'s'
  1880  007BAD  65                 	db	101	;'e'
  1881  007BAE  74                 	db	116	;'t'
  1882  007BAF  20                 	db	32
  1883  007BB0  74                 	db	116	;'t'
  1884  007BB1  68                 	db	104	;'h'
  1885  007BB2  65                 	db	101	;'e'
  1886  007BB3  20                 	db	32
  1887  007BB4  61                 	db	97	;'a'
  1888  007BB5  6C                 	db	108	;'l'
  1889  007BB6  61                 	db	97	;'a'
  1890  007BB7  72                 	db	114	;'r'
  1891  007BB8  6D                 	db	109	;'m'
  1892  007BB9  3A                 	db	58	;':'
  1893  007BBA  20                 	db	32
  1894  007BBB  00                 	db	0
  1895  007BBC                     STR_44:
  1896  007BBC  0A                 	db	10
  1897  007BBD  0D                 	db	13
  1898  007BBE  20                 	db	32
  1899  007BBF  20                 	db	32
  1900  007BC0  20                 	db	32
  1901  007BC1  20                 	db	32
  1902  007BC2  20                 	db	32
  1903  007BC3  20                 	db	32
  1904  007BC4  20                 	db	32
  1905  007BC5  20                 	db	32
  1906  007BC6  20                 	db	32
  1907  007BC7  20                 	db	32
  1908  007BC8  20                 	db	32
  1909  007BC9  20                 	db	32
  1910  007BCA  20                 	db	32
  1911  007BCB  20                 	db	32
  1912  007BCC  20                 	db	32
  1913  007BCD  20                 	db	32
  1914  007BCE  20                 	db	32
  1915  007BCF  30                 	db	48	;'0'
  1916  007BD0  2E                 	db	46
  1917  007BD1  52                 	db	82	;'R'
  1918  007BD2  65                 	db	101	;'e'
  1919  007BD3  74                 	db	116	;'t'
  1920  007BD4  75                 	db	117	;'u'
  1921  007BD5  72                 	db	114	;'r'
  1922  007BD6  6E                 	db	110	;'n'
  1923  007BD7  20                 	db	32
  1924  007BD8  74                 	db	116	;'t'
  1925  007BD9  6F                 	db	111	;'o'
  1926  007BDA  20                 	db	32
  1927  007BDB  4D                 	db	77	;'M'
  1928  007BDC  61                 	db	97	;'a'
  1929  007BDD  69                 	db	105	;'i'
  1930  007BDE  6E                 	db	110	;'n'
  1931  007BDF  20                 	db	32
  1932  007BE0  4D                 	db	77	;'M'
  1933  007BE1  65                 	db	101	;'e'
  1934  007BE2  6E                 	db	110	;'n'
  1935  007BE3  75                 	db	117	;'u'
  1936  007BE4  00                 	db	0
  1937  007BE5                     STR_76:
  1938  007BE5  0A                 	db	10
  1939  007BE6  0D                 	db	13
  1940  007BE7  20                 	db	32
  1941  007BE8  54                 	db	84	;'T'
  1942  007BE9  65                 	db	101	;'e'
  1943  007BEA  6D                 	db	109	;'m'
  1944  007BEB  70                 	db	112	;'p'
  1945  007BEC  65                 	db	101	;'e'
  1946  007BED  72                 	db	114	;'r'
  1947  007BEE  61                 	db	97	;'a'
  1948  007BEF  74                 	db	116	;'t'
  1949  007BF0  75                 	db	117	;'u'
  1950  007BF1  72                 	db	114	;'r'
  1951  007BF2  65                 	db	101	;'e'
  1952  007BF3  20                 	db	32
  1953  007BF4  53                 	db	83	;'S'
  1954  007BF5  65                 	db	101	;'e'
  1955  007BF6  6E                 	db	110	;'n'
  1956  007BF7  73                 	db	115	;'s'
  1957  007BF8  6F                 	db	111	;'o'
  1958  007BF9  72                 	db	114	;'r'
  1959  007BFA  20                 	db	32
  1960  007BFB  41                 	db	65	;'A'
  1961  007BFC  6C                 	db	108	;'l'
  1962  007BFD  61                 	db	97	;'a'
  1963  007BFE  72                 	db	114	;'r'
  1964  007BFF  6D                 	db	109	;'m'
  1965  007C00  20                 	db	32
  1966  007C01  44                 	db	68	;'D'
  1967  007C02  69                 	db	105	;'i'
  1968  007C03  73                 	db	115	;'s'
  1969  007C04  61                 	db	97	;'a'
  1970  007C05  62                 	db	98	;'b'
  1971  007C06  6C                 	db	108	;'l'
  1972  007C07  65                 	db	101	;'e'
  1973  007C08  64                 	db	100	;'d'
  1974  007C09  2E                 	db	46
  1975  007C0A  0A                 	db	10
  1976  007C0B  0D                 	db	13
  1977  007C0C  00                 	db	0
  1978  007C0D                     STR_99:
  1979  007C0D  0A                 	db	10
  1980  007C0E  0D                 	db	13
  1981  007C0F  44                 	db	68	;'D'
  1982  007C10  69                 	db	105	;'i'
  1983  007C11  73                 	db	115	;'s'
  1984  007C12  61                 	db	97	;'a'
  1985  007C13  62                 	db	98	;'b'
  1986  007C14  6C                 	db	108	;'l'
  1987  007C15  65                 	db	101	;'e'
  1988  007C16  20                 	db	32
  1989  007C17  74                 	db	116	;'t'
  1990  007C18  68                 	db	104	;'h'
  1991  007C19  65                 	db	101	;'e'
  1992  007C1A  20                 	db	32
  1993  007C1B  54                 	db	84	;'T'
  1994  007C1C  65                 	db	101	;'e'
  1995  007C1D  6D                 	db	109	;'m'
  1996  007C1E  70                 	db	112	;'p'
  1997  007C1F  65                 	db	101	;'e'
  1998  007C20  72                 	db	114	;'r'
  1999  007C21  61                 	db	97	;'a'
  2000  007C22  74                 	db	116	;'t'
  2001  007C23  75                 	db	117	;'u'
  2002  007C24  72                 	db	114	;'r'
  2003  007C25  65                 	db	101	;'e'
  2004  007C26  20                 	db	32
  2005  007C27  53                 	db	83	;'S'
  2006  007C28  65                 	db	101	;'e'
  2007  007C29  6E                 	db	110	;'n'
  2008  007C2A  73                 	db	115	;'s'
  2009  007C2B  6F                 	db	111	;'o'
  2010  007C2C  72                 	db	114	;'r'
  2011  007C2D  20                 	db	32
  2012  007C2E  41                 	db	65	;'A'
  2013  007C2F  6C                 	db	108	;'l'
  2014  007C30  61                 	db	97	;'a'
  2015  007C31  72                 	db	114	;'r'
  2016  007C32  6D                 	db	109	;'m'
  2017  007C33  3F                 	db	63	;'?'
  2018  007C34  00                 	db	0
  2019  007C35                     STR_73:
  2020  007C35  0A                 	db	10
  2021  007C36  0D                 	db	13
  2022  007C37  20                 	db	32
  2023  007C38  54                 	db	84	;'T'
  2024  007C39  65                 	db	101	;'e'
  2025  007C3A  6D                 	db	109	;'m'
  2026  007C3B  70                 	db	112	;'p'
  2027  007C3C  65                 	db	101	;'e'
  2028  007C3D  72                 	db	114	;'r'
  2029  007C3E  61                 	db	97	;'a'
  2030  007C3F  74                 	db	116	;'t'
  2031  007C40  75                 	db	117	;'u'
  2032  007C41  72                 	db	114	;'r'
  2033  007C42  65                 	db	101	;'e'
  2034  007C43  20                 	db	32
  2035  007C44  53                 	db	83	;'S'
  2036  007C45  65                 	db	101	;'e'
  2037  007C46  6E                 	db	110	;'n'
  2038  007C47  73                 	db	115	;'s'
  2039  007C48  6F                 	db	111	;'o'
  2040  007C49  72                 	db	114	;'r'
  2041  007C4A  20                 	db	32
  2042  007C4B  41                 	db	65	;'A'
  2043  007C4C  6C                 	db	108	;'l'
  2044  007C4D  61                 	db	97	;'a'
  2045  007C4E  72                 	db	114	;'r'
  2046  007C4F  6D                 	db	109	;'m'
  2047  007C50  20                 	db	32
  2048  007C51  45                 	db	69	;'E'
  2049  007C52  6E                 	db	110	;'n'
  2050  007C53  61                 	db	97	;'a'
  2051  007C54  62                 	db	98	;'b'
  2052  007C55  6C                 	db	108	;'l'
  2053  007C56  65                 	db	101	;'e'
  2054  007C57  64                 	db	100	;'d'
  2055  007C58  2E                 	db	46
  2056  007C59  0A                 	db	10
  2057  007C5A  0D                 	db	13
  2058  007C5B  00                 	db	0
  2059  007C5C                     STR_43:
  2060  007C5C  0A                 	db	10
  2061  007C5D  0D                 	db	13
  2062  007C5E  20                 	db	32
  2063  007C5F  20                 	db	32
  2064  007C60  20                 	db	32
  2065  007C61  20                 	db	32
  2066  007C62  20                 	db	32
  2067  007C63  20                 	db	32
  2068  007C64  20                 	db	32
  2069  007C65  20                 	db	32
  2070  007C66  20                 	db	32
  2071  007C67  20                 	db	32
  2072  007C68  20                 	db	32
  2073  007C69  20                 	db	32
  2074  007C6A  20                 	db	32
  2075  007C6B  20                 	db	32
  2076  007C6C  20                 	db	32
  2077  007C6D  20                 	db	32
  2078  007C6E  20                 	db	32
  2079  007C6F  31                 	db	49	;'1'
  2080  007C70  2E                 	db	46
  2081  007C71  43                 	db	67	;'C'
  2082  007C72  68                 	db	104	;'h'
  2083  007C73  61                 	db	97	;'a'
  2084  007C74  6E                 	db	110	;'n'
  2085  007C75  67                 	db	103	;'g'
  2086  007C76  65                 	db	101	;'e'
  2087  007C77  20                 	db	32
  2088  007C78  70                 	db	112	;'p'
  2089  007C79  61                 	db	97	;'a'
  2090  007C7A  73                 	db	115	;'s'
  2091  007C7B  73                 	db	115	;'s'
  2092  007C7C  63                 	db	99	;'c'
  2093  007C7D  6F                 	db	111	;'o'
  2094  007C7E  64                 	db	100	;'d'
  2095  007C7F  65                 	db	101	;'e'
  2096  007C80  00                 	db	0
  2097  007C81                     STR_52:
  2098  007C81  0D                 	db	13
  2099  007C82  0A                 	db	10
  2100  007C83  59                 	db	89	;'Y'
  2101  007C84  6F                 	db	111	;'o'
  2102  007C85  75                 	db	117	;'u'
  2103  007C86  72                 	db	114	;'r'
  2104  007C87  20                 	db	32
  2105  007C88  50                 	db	80	;'P'
  2106  007C89  61                 	db	97	;'a'
  2107  007C8A  73                 	db	115	;'s'
  2108  007C8B  73                 	db	115	;'s'
  2109  007C8C  77                 	db	119	;'w'
  2110  007C8D  6F                 	db	111	;'o'
  2111  007C8E  72                 	db	114	;'r'
  2112  007C8F  64                 	db	100	;'d'
  2113  007C90  20                 	db	32
  2114  007C91  68                 	db	104	;'h'
  2115  007C92  61                 	db	97	;'a'
  2116  007C93  73                 	db	115	;'s'
  2117  007C94  20                 	db	32
  2118  007C95  62                 	db	98	;'b'
  2119  007C96  65                 	db	101	;'e'
  2120  007C97  65                 	db	101	;'e'
  2121  007C98  6E                 	db	110	;'n'
  2122  007C99  20                 	db	32
  2123  007C9A  63                 	db	99	;'c'
  2124  007C9B  68                 	db	104	;'h'
  2125  007C9C  61                 	db	97	;'a'
  2126  007C9D  6E                 	db	110	;'n'
  2127  007C9E  67                 	db	103	;'g'
  2128  007C9F  65                 	db	101	;'e'
  2129  007CA0  64                 	db	100	;'d'
  2130  007CA1  21                 	db	33
  2131  007CA2  0A                 	db	10
  2132  007CA3  0D                 	db	13
  2133  007CA4  00                 	db	0
  2134  007CA5                     STR_28:
  2135  007CA5  0A                 	db	10
  2136  007CA6  0D                 	db	13
  2137  007CA7  43                 	db	67	;'C'
  2138  007CA8  75                 	db	117	;'u'
  2139  007CA9  72                 	db	114	;'r'
  2140  007CAA  72                 	db	114	;'r'
  2141  007CAB  65                 	db	101	;'e'
  2142  007CAC  6E                 	db	110	;'n'
  2143  007CAD  74                 	db	116	;'t'
  2144  007CAE  20                 	db	32
  2145  007CAF  49                 	db	73	;'I'
  2146  007CB0  6E                 	db	110	;'n'
  2147  007CB1  70                 	db	112	;'p'
  2148  007CB2  75                 	db	117	;'u'
  2149  007CB3  74                 	db	116	;'t'
  2150  007CB4  20                 	db	32
  2151  007CB5  4D                 	db	77	;'M'
  2152  007CB6  65                 	db	101	;'e'
  2153  007CB7  74                 	db	116	;'t'
  2154  007CB8  68                 	db	104	;'h'
  2155  007CB9  6F                 	db	111	;'o'
  2156  007CBA  64                 	db	100	;'d'
  2157  007CBB  3A                 	db	58	;':'
  2158  007CBC  20                 	db	32
  2159  007CBD  20                 	db	32
  2160  007CBE  20                 	db	32
  2161  007CBF  20                 	db	32
  2162  007CC0  20                 	db	32
  2163  007CC1  20                 	db	32
  2164  007CC2  20                 	db	32
  2165  007CC3  20                 	db	32
  2166  007CC4  20                 	db	32
  2167  007CC5  20                 	db	32
  2168  007CC6  20                 	db	32
  2169  007CC7  20                 	db	32
  2170  007CC8  00                 	db	0
  2171  007CC9                     STR_27:
  2172  007CC9  0A                 	db	10
  2173  007CCA  0D                 	db	13
  2174  007CCB  50                 	db	80	;'P'
  2175  007CCC  49                 	db	73	;'I'
  2176  007CCD  52                 	db	82	;'R'
  2177  007CCE  20                 	db	32
  2178  007CCF  53                 	db	83	;'S'
  2179  007CD0  65                 	db	101	;'e'
  2180  007CD1  6E                 	db	110	;'n'
  2181  007CD2  73                 	db	115	;'s'
  2182  007CD3  6F                 	db	111	;'o'
  2183  007CD4  72                 	db	114	;'r'
  2184  007CD5  20                 	db	32
  2185  007CD6  41                 	db	65	;'A'
  2186  007CD7  6C                 	db	108	;'l'
  2187  007CD8  61                 	db	97	;'a'
  2188  007CD9  72                 	db	114	;'r'
  2189  007CDA  6D                 	db	109	;'m'
  2190  007CDB  20                 	db	32
  2191  007CDC  53                 	db	83	;'S'
  2192  007CDD  74                 	db	116	;'t'
  2193  007CDE  61                 	db	97	;'a'
  2194  007CDF  74                 	db	116	;'t'
  2195  007CE0  65                 	db	101	;'e'
  2196  007CE1  3A                 	db	58	;':'
  2197  007CE2  20                 	db	32
  2198  007CE3  20                 	db	32
  2199  007CE4  20                 	db	32
  2200  007CE5  20                 	db	32
  2201  007CE6  20                 	db	32
  2202  007CE7  20                 	db	32
  2203  007CE8  20                 	db	32
  2204  007CE9  20                 	db	32
  2205  007CEA  20                 	db	32
  2206  007CEB  20                 	db	32
  2207  007CEC  00                 	db	0
  2208  007CED                     STR_22:
  2209  007CED  0A                 	db	10
  2210  007CEE  0D                 	db	13
  2211  007CEF  54                 	db	84	;'T'
  2212  007CF0  65                 	db	101	;'e'
  2213  007CF1  6D                 	db	109	;'m'
  2214  007CF2  70                 	db	112	;'p'
  2215  007CF3  65                 	db	101	;'e'
  2216  007CF4  72                 	db	114	;'r'
  2217  007CF5  61                 	db	97	;'a'
  2218  007CF6  74                 	db	116	;'t'
  2219  007CF7  75                 	db	117	;'u'
  2220  007CF8  72                 	db	114	;'r'
  2221  007CF9  65                 	db	101	;'e'
  2222  007CFA  20                 	db	32
  2223  007CFB  41                 	db	65	;'A'
  2224  007CFC  6C                 	db	108	;'l'
  2225  007CFD  61                 	db	97	;'a'
  2226  007CFE  72                 	db	114	;'r'
  2227  007CFF  6D                 	db	109	;'m'
  2228  007D00  20                 	db	32
  2229  007D01  53                 	db	83	;'S'
  2230  007D02  74                 	db	116	;'t'
  2231  007D03  61                 	db	97	;'a'
  2232  007D04  74                 	db	116	;'t'
  2233  007D05  65                 	db	101	;'e'
  2234  007D06  3A                 	db	58	;':'
  2235  007D07  20                 	db	32
  2236  007D08  20                 	db	32
  2237  007D09  20                 	db	32
  2238  007D0A  20                 	db	32
  2239  007D0B  20                 	db	32
  2240  007D0C  20                 	db	32
  2241  007D0D  20                 	db	32
  2242  007D0E  20                 	db	32
  2243  007D0F  20                 	db	32
  2244  007D10  00                 	db	0
  2245  007D11                     STR_25:
  2246  007D11  0A                 	db	10
  2247  007D12  0D                 	db	13
  2248  007D13  54                 	db	84	;'T'
  2249  007D14  65                 	db	101	;'e'
  2250  007D15  6D                 	db	109	;'m'
  2251  007D16  70                 	db	112	;'p'
  2252  007D17  65                 	db	101	;'e'
  2253  007D18  72                 	db	114	;'r'
  2254  007D19  61                 	db	97	;'a'
  2255  007D1A  74                 	db	116	;'t'
  2256  007D1B  75                 	db	117	;'u'
  2257  007D1C  72                 	db	114	;'r'
  2258  007D1D  65                 	db	101	;'e'
  2259  007D1E  20                 	db	32
  2260  007D1F  41                 	db	65	;'A'
  2261  007D20  6C                 	db	108	;'l'
  2262  007D21  61                 	db	97	;'a'
  2263  007D22  72                 	db	114	;'r'
  2264  007D23  6D                 	db	109	;'m'
  2265  007D24  20                 	db	32
  2266  007D25  54                 	db	84	;'T'
  2267  007D26  68                 	db	104	;'h'
  2268  007D27  72                 	db	114	;'r'
  2269  007D28  65                 	db	101	;'e'
  2270  007D29  73                 	db	115	;'s'
  2271  007D2A  68                 	db	104	;'h'
  2272  007D2B  6F                 	db	111	;'o'
  2273  007D2C  6C                 	db	108	;'l'
  2274  007D2D  64                 	db	100	;'d'
  2275  007D2E  3A                 	db	58	;':'
  2276  007D2F  20                 	db	32
  2277  007D30  20                 	db	32
  2278  007D31  20                 	db	32
  2279  007D32  20                 	db	32
  2280  007D33  20                 	db	32
  2281  007D34  00                 	db	0
  2282  007D35                     STR_23:
  2283  007D35  0A                 	db	10
  2284  007D36  0D                 	db	13
  2285  007D37  43                 	db	67	;'C'
  2286  007D38  75                 	db	117	;'u'
  2287  007D39  72                 	db	114	;'r'
  2288  007D3A  72                 	db	114	;'r'
  2289  007D3B  65                 	db	101	;'e'
  2290  007D3C  6E                 	db	110	;'n'
  2291  007D3D  74                 	db	116	;'t'
  2292  007D3E  20                 	db	32
  2293  007D3F  54                 	db	84	;'T'
  2294  007D40  65                 	db	101	;'e'
  2295  007D41  6D                 	db	109	;'m'
  2296  007D42  70                 	db	112	;'p'
  2297  007D43  65                 	db	101	;'e'
  2298  007D44  72                 	db	114	;'r'
  2299  007D45  61                 	db	97	;'a'
  2300  007D46  74                 	db	116	;'t'
  2301  007D47  75                 	db	117	;'u'
  2302  007D48  72                 	db	114	;'r'
  2303  007D49  65                 	db	101	;'e'
  2304  007D4A  20                 	db	32
  2305  007D4B  52                 	db	82	;'R'
  2306  007D4C  65                 	db	101	;'e'
  2307  007D4D  61                 	db	97	;'a'
  2308  007D4E  64                 	db	100	;'d'
  2309  007D4F  69                 	db	105	;'i'
  2310  007D50  6E                 	db	110	;'n'
  2311  007D51  67                 	db	103	;'g'
  2312  007D52  3A                 	db	58	;':'
  2313  007D53  20                 	db	32
  2314  007D54  20                 	db	32
  2315  007D55  20                 	db	32
  2316  007D56  20                 	db	32
  2317  007D57  20                 	db	32
  2318  007D58  00                 	db	0
  2319  007D59                     STR_88:
  2320  007D59  0A                 	db	10
  2321  007D5A  0D                 	db	13
  2322  007D5B  20                 	db	32
  2323  007D5C  50                 	db	80	;'P'
  2324  007D5D  49                 	db	73	;'I'
  2325  007D5E  52                 	db	82	;'R'
  2326  007D5F  20                 	db	32
  2327  007D60  53                 	db	83	;'S'
  2328  007D61  45                 	db	69	;'E'
  2329  007D62  4E                 	db	78	;'N'
  2330  007D63  53                 	db	83	;'S'
  2331  007D64  4F                 	db	79	;'O'
  2332  007D65  52                 	db	82	;'R'
  2333  007D66  20                 	db	32
  2334  007D67  41                 	db	65	;'A'
  2335  007D68  4C                 	db	76	;'L'
  2336  007D69  41                 	db	65	;'A'
  2337  007D6A  52                 	db	82	;'R'
  2338  007D6B  4D                 	db	77	;'M'
  2339  007D6C  20                 	db	32
  2340  007D6D  49                 	db	73	;'I'
  2341  007D6E  53                 	db	83	;'S'
  2342  007D6F  20                 	db	32
  2343  007D70  4B                 	db	75	;'K'
  2344  007D71  45                 	db	69	;'E'
  2345  007D72  50                 	db	80	;'P'
  2346  007D73  54                 	db	84	;'T'
  2347  007D74  20                 	db	32
  2348  007D75  45                 	db	69	;'E'
  2349  007D76  4E                 	db	78	;'N'
  2350  007D77  41                 	db	65	;'A'
  2351  007D78  42                 	db	66	;'B'
  2352  007D79  4C                 	db	76	;'L'
  2353  007D7A  45                 	db	69	;'E'
  2354  007D7B  44                 	db	68	;'D'
  2355  007D7C  00                 	db	0
  2356  007D7D                     STR_34:
  2357  007D7D  0A                 	db	10
  2358  007D7E  0D                 	db	13
  2359  007D7F  20                 	db	32
  2360  007D80  20                 	db	32
  2361  007D81  20                 	db	32
  2362  007D82  20                 	db	32
  2363  007D83  20                 	db	32
  2364  007D84  20                 	db	32
  2365  007D85  32                 	db	50	;'2'
  2366  007D86  2E                 	db	46
  2367  007D87  50                 	db	80	;'P'
  2368  007D88  49                 	db	73	;'I'
  2369  007D89  52                 	db	82	;'R'
  2370  007D8A  20                 	db	32
  2371  007D8B  53                 	db	83	;'S'
  2372  007D8C  65                 	db	101	;'e'
  2373  007D8D  6E                 	db	110	;'n'
  2374  007D8E  73                 	db	115	;'s'
  2375  007D8F  6F                 	db	111	;'o'
  2376  007D90  72                 	db	114	;'r'
  2377  007D91  20                 	db	32
  2378  007D92  41                 	db	65	;'A'
  2379  007D93  6C                 	db	108	;'l'
  2380  007D94  61                 	db	97	;'a'
  2381  007D95  72                 	db	114	;'r'
  2382  007D96  6D                 	db	109	;'m'
  2383  007D97  20                 	db	32
  2384  007D98  4F                 	db	79	;'O'
  2385  007D99  70                 	db	112	;'p'
  2386  007D9A  74                 	db	116	;'t'
  2387  007D9B  69                 	db	105	;'i'
  2388  007D9C  6F                 	db	111	;'o'
  2389  007D9D  6E                 	db	110	;'n'
  2390  007D9E  73                 	db	115	;'s'
  2391  007D9F  00                 	db	0
  2392  007DA0                     STR_64:
  2393  007DA0  0A                 	db	10
  2394  007DA1  0D                 	db	13
  2395  007DA2  20                 	db	32
  2396  007DA3  50                 	db	80	;'P'
  2397  007DA4  49                 	db	73	;'I'
  2398  007DA5  52                 	db	82	;'R'
  2399  007DA6  20                 	db	32
  2400  007DA7  53                 	db	83	;'S'
  2401  007DA8  65                 	db	101	;'e'
  2402  007DA9  6E                 	db	110	;'n'
  2403  007DAA  73                 	db	115	;'s'
  2404  007DAB  6F                 	db	111	;'o'
  2405  007DAC  72                 	db	114	;'r'
  2406  007DAD  20                 	db	32
  2407  007DAE  41                 	db	65	;'A'
  2408  007DAF  6C                 	db	108	;'l'
  2409  007DB0  61                 	db	97	;'a'
  2410  007DB1  72                 	db	114	;'r'
  2411  007DB2  6D                 	db	109	;'m'
  2412  007DB3  20                 	db	32
  2413  007DB4  44                 	db	68	;'D'
  2414  007DB5  69                 	db	105	;'i'
  2415  007DB6  73                 	db	115	;'s'
  2416  007DB7  61                 	db	97	;'a'
  2417  007DB8  62                 	db	98	;'b'
  2418  007DB9  6C                 	db	108	;'l'
  2419  007DBA  65                 	db	101	;'e'
  2420  007DBB  64                 	db	100	;'d'
  2421  007DBC  2E                 	db	46
  2422  007DBD  0A                 	db	10
  2423  007DBE  0D                 	db	13
  2424  007DBF  00                 	db	0
  2425  007DC0                     STR_80:
  2426  007DC0  0A                 	db	10
  2427  007DC1  0D                 	db	13
  2428  007DC2  44                 	db	68	;'D'
  2429  007DC3  69                 	db	105	;'i'
  2430  007DC4  73                 	db	115	;'s'
  2431  007DC5  61                 	db	97	;'a'
  2432  007DC6  62                 	db	98	;'b'
  2433  007DC7  6C                 	db	108	;'l'
  2434  007DC8  65                 	db	101	;'e'
  2435  007DC9  20                 	db	32
  2436  007DCA  74                 	db	116	;'t'
  2437  007DCB  68                 	db	104	;'h'
  2438  007DCC  65                 	db	101	;'e'
  2439  007DCD  20                 	db	32
  2440  007DCE  50                 	db	80	;'P'
  2441  007DCF  49                 	db	73	;'I'
  2442  007DD0  52                 	db	82	;'R'
  2443  007DD1  20                 	db	32
  2444  007DD2  53                 	db	83	;'S'
  2445  007DD3  65                 	db	101	;'e'
  2446  007DD4  6E                 	db	110	;'n'
  2447  007DD5  73                 	db	115	;'s'
  2448  007DD6  6F                 	db	111	;'o'
  2449  007DD7  72                 	db	114	;'r'
  2450  007DD8  20                 	db	32
  2451  007DD9  41                 	db	65	;'A'
  2452  007DDA  6C                 	db	108	;'l'
  2453  007DDB  61                 	db	97	;'a'
  2454  007DDC  72                 	db	114	;'r'
  2455  007DDD  6D                 	db	109	;'m'
  2456  007DDE  3F                 	db	63	;'?'
  2457  007DDF  00                 	db	0
  2458  007DE0                     STR_61:
  2459  007DE0  0A                 	db	10
  2460  007DE1  0D                 	db	13
  2461  007DE2  20                 	db	32
  2462  007DE3  50                 	db	80	;'P'
  2463  007DE4  49                 	db	73	;'I'
  2464  007DE5  52                 	db	82	;'R'
  2465  007DE6  20                 	db	32
  2466  007DE7  53                 	db	83	;'S'
  2467  007DE8  65                 	db	101	;'e'
  2468  007DE9  6E                 	db	110	;'n'
  2469  007DEA  73                 	db	115	;'s'
  2470  007DEB  6F                 	db	111	;'o'
  2471  007DEC  72                 	db	114	;'r'
  2472  007DED  20                 	db	32
  2473  007DEE  41                 	db	65	;'A'
  2474  007DEF  6C                 	db	108	;'l'
  2475  007DF0  61                 	db	97	;'a'
  2476  007DF1  72                 	db	114	;'r'
  2477  007DF2  6D                 	db	109	;'m'
  2478  007DF3  20                 	db	32
  2479  007DF4  45                 	db	69	;'E'
  2480  007DF5  6E                 	db	110	;'n'
  2481  007DF6  61                 	db	97	;'a'
  2482  007DF7  62                 	db	98	;'b'
  2483  007DF8  6C                 	db	108	;'l'
  2484  007DF9  65                 	db	101	;'e'
  2485  007DFA  64                 	db	100	;'d'
  2486  007DFB  2E                 	db	46
  2487  007DFC  0A                 	db	10
  2488  007DFD  0D                 	db	13
  2489  007DFE  00                 	db	0
  2490  007DFF                     STR_49:
  2491  007DFF  0D                 	db	13
  2492  007E00  0A                 	db	10
  2493  007E01  45                 	db	69	;'E'
  2494  007E02  6E                 	db	110	;'n'
  2495  007E03  74                 	db	116	;'t'
  2496  007E04  65                 	db	101	;'e'
  2497  007E05  72                 	db	114	;'r'
  2498  007E06  20                 	db	32
  2499  007E07  6E                 	db	110	;'n'
  2500  007E08  65                 	db	101	;'e'
  2501  007E09  77                 	db	119	;'w'
  2502  007E0A  20                 	db	32
  2503  007E0B  34                 	db	52	;'4'
  2504  007E0C  20                 	db	32
  2505  007E0D  64                 	db	100	;'d'
  2506  007E0E  69                 	db	105	;'i'
  2507  007E0F  67                 	db	103	;'g'
  2508  007E10  69                 	db	105	;'i'
  2509  007E11  74                 	db	116	;'t'
  2510  007E12  20                 	db	32
  2511  007E13  70                 	db	112	;'p'
  2512  007E14  61                 	db	97	;'a'
  2513  007E15  73                 	db	115	;'s'
  2514  007E16  73                 	db	115	;'s'
  2515  007E17  77                 	db	119	;'w'
  2516  007E18  6F                 	db	111	;'o'
  2517  007E19  72                 	db	114	;'r'
  2518  007E1A  64                 	db	100	;'d'
  2519  007E1B  3A                 	db	58	;':'
  2520  007E1C  20                 	db	32
  2521  007E1D  00                 	db	0
  2522  007E1E                     STR_32:
  2523  007E1E  0A                 	db	10
  2524  007E1F  0D                 	db	13
  2525  007E20  53                 	db	83	;'S'
  2526  007E21  65                 	db	101	;'e'
  2527  007E22  6C                 	db	108	;'l'
  2528  007E23  65                 	db	101	;'e'
  2529  007E24  63                 	db	99	;'c'
  2530  007E25  74                 	db	116	;'t'
  2531  007E26  20                 	db	32
  2532  007E27  4F                 	db	79	;'O'
  2533  007E28  6E                 	db	110	;'n'
  2534  007E29  65                 	db	101	;'e'
  2535  007E2A  20                 	db	32
  2536  007E2B  6F                 	db	111	;'o'
  2537  007E2C  66                 	db	102	;'f'
  2538  007E2D  20                 	db	32
  2539  007E2E  74                 	db	116	;'t'
  2540  007E2F  68                 	db	104	;'h'
  2541  007E30  65                 	db	101	;'e'
  2542  007E31  20                 	db	32
  2543  007E32  46                 	db	70	;'F'
  2544  007E33  6F                 	db	111	;'o'
  2545  007E34  6C                 	db	108	;'l'
  2546  007E35  6C                 	db	108	;'l'
  2547  007E36  6F                 	db	111	;'o'
  2548  007E37  77                 	db	119	;'w'
  2549  007E38  69                 	db	105	;'i'
  2550  007E39  6E                 	db	110	;'n'
  2551  007E3A  67                 	db	103	;'g'
  2552  007E3B  3A                 	db	58	;':'
  2553  007E3C  00                 	db	0
  2554  007E3D                     STR_20:
  2555  007E3D  0A                 	db	10
  2556  007E3E  0D                 	db	13
  2557  007E3F  43                 	db	67	;'C'
  2558  007E40  55                 	db	85	;'U'
  2559  007E41  52                 	db	82	;'R'
  2560  007E42  52                 	db	82	;'R'
  2561  007E43  45                 	db	69	;'E'
  2562  007E44  4E                 	db	78	;'N'
  2563  007E45  54                 	db	84	;'T'
  2564  007E46  20                 	db	32
  2565  007E47  53                 	db	83	;'S'
  2566  007E48  54                 	db	84	;'T'
  2567  007E49  41                 	db	65	;'A'
  2568  007E4A  54                 	db	84	;'T'
  2569  007E4B  55                 	db	85	;'U'
  2570  007E4C  53                 	db	83	;'S'
  2571  007E4D  20                 	db	32
  2572  007E4E  4F                 	db	79	;'O'
  2573  007E4F  46                 	db	70	;'F'
  2574  007E50  20                 	db	32
  2575  007E51  43                 	db	67	;'C'
  2576  007E52  4F                 	db	79	;'O'
  2577  007E53  4D                 	db	77	;'M'
  2578  007E54  50                 	db	80	;'P'
  2579  007E55  4F                 	db	79	;'O'
  2580  007E56  4E                 	db	78	;'N'
  2581  007E57  45                 	db	69	;'E'
  2582  007E58  4E                 	db	78	;'N'
  2583  007E59  54                 	db	84	;'T'
  2584  007E5A  53                 	db	83	;'S'
  2585  007E5B  00                 	db	0
  2586  007E5C                     STR_81:
  2587  007E5C  0A                 	db	10
  2588  007E5D  0D                 	db	13
  2589  007E5E  45                 	db	69	;'E'
  2590  007E5F  6E                 	db	110	;'n'
  2591  007E60  61                 	db	97	;'a'
  2592  007E61  62                 	db	98	;'b'
  2593  007E62  6C                 	db	108	;'l'
  2594  007E63  65                 	db	101	;'e'
  2595  007E64  20                 	db	32
  2596  007E65  3D                 	db	61	;'='
  2597  007E66  20                 	db	32
  2598  007E67  31                 	db	49	;'1'
  2599  007E68  20                 	db	32
  2600  007E69  61                 	db	97	;'a'
  2601  007E6A  6E                 	db	110	;'n'
  2602  007E6B  64                 	db	100	;'d'
  2603  007E6C  20                 	db	32
  2604  007E6D  44                 	db	68	;'D'
  2605  007E6E  69                 	db	105	;'i'
  2606  007E6F  73                 	db	115	;'s'
  2607  007E70  61                 	db	97	;'a'
  2608  007E71  62                 	db	98	;'b'
  2609  007E72  6C                 	db	108	;'l'
  2610  007E73  65                 	db	101	;'e'
  2611  007E74  20                 	db	32
  2612  007E75  3D                 	db	61	;'='
  2613  007E76  20                 	db	32
  2614  007E77  30                 	db	48	;'0'
  2615  007E78  00                 	db	0
  2616  007E79                     STR_95:
  2617  007E79  0A                 	db	10
  2618  007E7A  0A                 	db	10
  2619  007E7B  0A                 	db	10
  2620  007E7C  0D                 	db	13
  2621  007E7D  45                 	db	69	;'E'
  2622  007E7E  6E                 	db	110	;'n'
  2623  007E7F  74                 	db	116	;'t'
  2624  007E80  65                 	db	101	;'e'
  2625  007E81  72                 	db	114	;'r'
  2626  007E82  20                 	db	32
  2627  007E83  30                 	db	48	;'0'
  2628  007E84  20                 	db	32
  2629  007E85  74                 	db	116	;'t'
  2630  007E86  6F                 	db	111	;'o'
  2631  007E87  20                 	db	32
  2632  007E88  67                 	db	103	;'g'
  2633  007E89  6F                 	db	111	;'o'
  2634  007E8A  20                 	db	32
  2635  007E8B  62                 	db	98	;'b'
  2636  007E8C  61                 	db	97	;'a'
  2637  007E8D  63                 	db	99	;'c'
  2638  007E8E  6B                 	db	107	;'k'
  2639  007E8F  21                 	db	33
  2640  007E90  21                 	db	33
  2641  007E91  21                 	db	33
  2642  007E92  0A                 	db	10
  2643  007E93  0D                 	db	13
  2644  007E94  00                 	db	0
  2645  007E95                     STR_5:
  2646  007E95  0D                 	db	13
  2647  007E96  0A                 	db	10
  2648  007E97  4C                 	db	76	;'L'
  2649  007E98  65                 	db	101	;'e'
  2650  007E99  74                 	db	116	;'t'
  2651  007E9A  73                 	db	115	;'s'
  2652  007E9B  20                 	db	32
  2653  007E9C  73                 	db	115	;'s'
  2654  007E9D  65                 	db	101	;'e'
  2655  007E9E  74                 	db	116	;'t'
  2656  007E9F  20                 	db	32
  2657  007EA0  75                 	db	117	;'u'
  2658  007EA1  70                 	db	112	;'p'
  2659  007EA2  20                 	db	32
  2660  007EA3  79                 	db	121	;'y'
  2661  007EA4  6F                 	db	111	;'o'
  2662  007EA5  75                 	db	117	;'u'
  2663  007EA6  72                 	db	114	;'r'
  2664  007EA7  20                 	db	32
  2665  007EA8  50                 	db	80	;'P'
  2666  007EA9  61                 	db	97	;'a'
  2667  007EAA  73                 	db	115	;'s'
  2668  007EAB  73                 	db	115	;'s'
  2669  007EAC  77                 	db	119	;'w'
  2670  007EAD  6F                 	db	111	;'o'
  2671  007EAE  72                 	db	114	;'r'
  2672  007EAF  64                 	db	100	;'d'
  2673  007EB0  00                 	db	0
  2674  007EB1                     STR_6:
  2675  007EB1  0D                 	db	13
  2676  007EB2  0A                 	db	10
  2677  007EB3  45                 	db	69	;'E'
  2678  007EB4  6E                 	db	110	;'n'
  2679  007EB5  74                 	db	116	;'t'
  2680  007EB6  65                 	db	101	;'e'
  2681  007EB7  72                 	db	114	;'r'
  2682  007EB8  20                 	db	32
  2683  007EB9  34                 	db	52	;'4'
  2684  007EBA  20                 	db	32
  2685  007EBB  64                 	db	100	;'d'
  2686  007EBC  69                 	db	105	;'i'
  2687  007EBD  67                 	db	103	;'g'
  2688  007EBE  69                 	db	105	;'i'
  2689  007EBF  74                 	db	116	;'t'
  2690  007EC0  20                 	db	32
  2691  007EC1  70                 	db	112	;'p'
  2692  007EC2  61                 	db	97	;'a'
  2693  007EC3  73                 	db	115	;'s'
  2694  007EC4  73                 	db	115	;'s'
  2695  007EC5  77                 	db	119	;'w'
  2696  007EC6  6F                 	db	111	;'o'
  2697  007EC7  72                 	db	114	;'r'
  2698  007EC8  64                 	db	100	;'d'
  2699  007EC9  3A                 	db	58	;':'
  2700  007ECA  20                 	db	32
  2701  007ECB  00                 	db	0
  2702  007ECC                     STR_33:
  2703  007ECC  0A                 	db	10
  2704  007ECD  0D                 	db	13
  2705  007ECE  20                 	db	32
  2706  007ECF  20                 	db	32
  2707  007ED0  20                 	db	32
  2708  007ED1  20                 	db	32
  2709  007ED2  20                 	db	32
  2710  007ED3  20                 	db	32
  2711  007ED4  31                 	db	49	;'1'
  2712  007ED5  2E                 	db	46
  2713  007ED6  50                 	db	80	;'P'
  2714  007ED7  61                 	db	97	;'a'
  2715  007ED8  73                 	db	115	;'s'
  2716  007ED9  73                 	db	115	;'s'
  2717  007EDA  63                 	db	99	;'c'
  2718  007EDB  6F                 	db	111	;'o'
  2719  007EDC  64                 	db	100	;'d'
  2720  007EDD  65                 	db	101	;'e'
  2721  007EDE  20                 	db	32
  2722  007EDF  4F                 	db	79	;'O'
  2723  007EE0  70                 	db	112	;'p'
  2724  007EE1  74                 	db	116	;'t'
  2725  007EE2  69                 	db	105	;'i'
  2726  007EE3  6F                 	db	111	;'o'
  2727  007EE4  6E                 	db	110	;'n'
  2728  007EE5  73                 	db	115	;'s'
  2729  007EE6  00                 	db	0
  2730  007EE7                     STR_46:
  2731  007EE7  0A                 	db	10
  2732  007EE8  0D                 	db	13
  2733  007EE9  45                 	db	69	;'E'
  2734  007EEA  6E                 	db	110	;'n'
  2735  007EEB  74                 	db	116	;'t'
  2736  007EEC  65                 	db	101	;'e'
  2737  007EED  72                 	db	114	;'r'
  2738  007EEE  20                 	db	32
  2739  007EEF  43                 	db	67	;'C'
  2740  007EF0  75                 	db	117	;'u'
  2741  007EF1  72                 	db	114	;'r'
  2742  007EF2  72                 	db	114	;'r'
  2743  007EF3  65                 	db	101	;'e'
  2744  007EF4  6E                 	db	110	;'n'
  2745  007EF5  74                 	db	116	;'t'
  2746  007EF6  20                 	db	32
  2747  007EF7  50                 	db	80	;'P'
  2748  007EF8  61                 	db	97	;'a'
  2749  007EF9  73                 	db	115	;'s'
  2750  007EFA  73                 	db	115	;'s'
  2751  007EFB  63                 	db	99	;'c'
  2752  007EFC  6F                 	db	111	;'o'
  2753  007EFD  64                 	db	100	;'d'
  2754  007EFE  65                 	db	101	;'e'
  2755  007EFF  3A                 	db	58	;':'
  2756  007F00  00                 	db	0
  2757  007F01                     STR_38:
  2758  007F01  0A                 	db	10
  2759  007F02  0A                 	db	10
  2760  007F03  0A                 	db	10
  2761  007F04  0D                 	db	13
  2762  007F05  20                 	db	32
  2763  007F06  20                 	db	32
  2764  007F07  30                 	db	48	;'0'
  2765  007F08  2E                 	db	46
  2766  007F09  52                 	db	82	;'R'
  2767  007F0A  65                 	db	101	;'e'
  2768  007F0B  66                 	db	102	;'f'
  2769  007F0C  72                 	db	114	;'r'
  2770  007F0D  65                 	db	101	;'e'
  2771  007F0E  73                 	db	115	;'s'
  2772  007F0F  68                 	db	104	;'h'
  2773  007F10  20                 	db	32
  2774  007F11  4D                 	db	77	;'M'
  2775  007F12  61                 	db	97	;'a'
  2776  007F13  69                 	db	105	;'i'
  2777  007F14  6E                 	db	110	;'n'
  2778  007F15  20                 	db	32
  2779  007F16  4D                 	db	77	;'M'
  2780  007F17  65                 	db	101	;'e'
  2781  007F18  6E                 	db	110	;'n'
  2782  007F19  75                 	db	117	;'u'
  2783  007F1A  00                 	db	0
  2784  007F1B                     STR_92:
  2785  007F1B  0A                 	db	10
  2786  007F1C  0D                 	db	13
  2787  007F1D  49                 	db	73	;'I'
  2788  007F1E  6E                 	db	110	;'n'
  2789  007F1F  63                 	db	99	;'c'
  2790  007F20  6F                 	db	111	;'o'
  2791  007F21  72                 	db	114	;'r'
  2792  007F22  72                 	db	114	;'r'
  2793  007F23  65                 	db	101	;'e'
  2794  007F24  63                 	db	99	;'c'
  2795  007F25  74                 	db	116	;'t'
  2796  007F26  20                 	db	32
  2797  007F27  50                 	db	80	;'P'
  2798  007F28  61                 	db	97	;'a'
  2799  007F29  73                 	db	115	;'s'
  2800  007F2A  73                 	db	115	;'s'
  2801  007F2B  77                 	db	119	;'w'
  2802  007F2C  6F                 	db	111	;'o'
  2803  007F2D  72                 	db	114	;'r'
  2804  007F2E  64                 	db	100	;'d'
  2805  007F2F  2E                 	db	46
  2806  007F30  0A                 	db	10
  2807  007F31  0D                 	db	13
  2808  007F32  00                 	db	0
  2809  007F33                     STR_8:
  2810  007F33  0A                 	db	10
  2811  007F34  0D                 	db	13
  2812  007F35  50                 	db	80	;'P'
  2813  007F36  61                 	db	97	;'a'
  2814  007F37  73                 	db	115	;'s'
  2815  007F38  73                 	db	115	;'s'
  2816  007F39  77                 	db	119	;'w'
  2817  007F3A  6F                 	db	111	;'o'
  2818  007F3B  72                 	db	114	;'r'
  2819  007F3C  64                 	db	100	;'d'
  2820  007F3D  20                 	db	32
  2821  007F3E  52                 	db	82	;'R'
  2822  007F3F  65                 	db	101	;'e'
  2823  007F40  67                 	db	103	;'g'
  2824  007F41  69                 	db	105	;'i'
  2825  007F42  73                 	db	115	;'s'
  2826  007F43  74                 	db	116	;'t'
  2827  007F44  65                 	db	101	;'e'
  2828  007F45  72                 	db	114	;'r'
  2829  007F46  65                 	db	101	;'e'
  2830  007F47  64                 	db	100	;'d'
  2831  007F48  0A                 	db	10
  2832  007F49  0D                 	db	13
  2833  007F4A  00                 	db	0
  2834  007F4B                     STR_40:
  2835  007F4B  0A                 	db	10
  2836  007F4C  0D                 	db	13
  2837  007F4D  49                 	db	73	;'I'
  2838  007F4E  6E                 	db	110	;'n'
  2839  007F4F  76                 	db	118	;'v'
  2840  007F50  61                 	db	97	;'a'
  2841  007F51  6C                 	db	108	;'l'
  2842  007F52  69                 	db	105	;'i'
  2843  007F53  64                 	db	100	;'d'
  2844  007F54  20                 	db	32
  2845  007F55  53                 	db	83	;'S'
  2846  007F56  65                 	db	101	;'e'
  2847  007F57  6C                 	db	108	;'l'
  2848  007F58  65                 	db	101	;'e'
  2849  007F59  63                 	db	99	;'c'
  2850  007F5A  74                 	db	116	;'t'
  2851  007F5B  69                 	db	105	;'i'
  2852  007F5C  6F                 	db	111	;'o'
  2853  007F5D  6E                 	db	110	;'n'
  2854  007F5E  2E                 	db	46
  2855  007F5F  0A                 	db	10
  2856  007F60  0D                 	db	13
  2857  007F61  00                 	db	0
  2858  007F62                     STR_11:
  2859  007F62  0A                 	db	10
  2860  007F63  0D                 	db	13
  2861  007F64  49                 	db	73	;'I'
  2862  007F65  6E                 	db	110	;'n'
  2863  007F66  63                 	db	99	;'c'
  2864  007F67  6F                 	db	111	;'o'
  2865  007F68  72                 	db	114	;'r'
  2866  007F69  72                 	db	114	;'r'
  2867  007F6A  65                 	db	101	;'e'
  2868  007F6B  63                 	db	99	;'c'
  2869  007F6C  74                 	db	116	;'t'
  2870  007F6D  20                 	db	32
  2871  007F6E  50                 	db	80	;'P'
  2872  007F6F  61                 	db	97	;'a'
  2873  007F70  73                 	db	115	;'s'
  2874  007F71  73                 	db	115	;'s'
  2875  007F72  77                 	db	119	;'w'
  2876  007F73  6F                 	db	111	;'o'
  2877  007F74  72                 	db	114	;'r'
  2878  007F75  64                 	db	100	;'d'
  2879  007F76  0A                 	db	10
  2880  007F77  0D                 	db	13
  2881  007F78  00                 	db	0
  2882  007F79                     STR_9:
  2883  007F79  0D                 	db	13
  2884  007F7A  0A                 	db	10
  2885  007F7B  45                 	db	69	;'E'
  2886  007F7C  6E                 	db	110	;'n'
  2887  007F7D  74                 	db	116	;'t'
  2888  007F7E  65                 	db	101	;'e'
  2889  007F7F  72                 	db	114	;'r'
  2890  007F80  20                 	db	32
  2891  007F81  74                 	db	116	;'t'
  2892  007F82  68                 	db	104	;'h'
  2893  007F83  65                 	db	101	;'e'
  2894  007F84  20                 	db	32
  2895  007F85  70                 	db	112	;'p'
  2896  007F86  61                 	db	97	;'a'
  2897  007F87  73                 	db	115	;'s'
  2898  007F88  73                 	db	115	;'s'
  2899  007F89  77                 	db	119	;'w'
  2900  007F8A  6F                 	db	111	;'o'
  2901  007F8B  72                 	db	114	;'r'
  2902  007F8C  64                 	db	100	;'d'
  2903  007F8D  3A                 	db	58	;':'
  2904  007F8E  20                 	db	32
  2905  007F8F  00                 	db	0
  2906  007F90                     STR_97:
  2907  007F90  0A                 	db	10
  2908  007F91  0D                 	db	13
  2909  007F92  59                 	db	89	;'Y'
  2910  007F93  45                 	db	69	;'E'
  2911  007F94  53                 	db	83	;'S'
  2912  007F95  20                 	db	32
  2913  007F96  3D                 	db	61	;'='
  2914  007F97  20                 	db	32
  2915  007F98  31                 	db	49	;'1'
  2916  007F99  20                 	db	32
  2917  007F9A  61                 	db	97	;'a'
  2918  007F9B  6E                 	db	110	;'n'
  2919  007F9C  64                 	db	100	;'d'
  2920  007F9D  20                 	db	32
  2921  007F9E  4E                 	db	78	;'N'
  2922  007F9F  4F                 	db	79	;'O'
  2923  007FA0  20                 	db	32
  2924  007FA1  3D                 	db	61	;'='
  2925  007FA2  20                 	db	32
  2926  007FA3  30                 	db	48	;'0'
  2927  007FA4  00                 	db	0
  2928  007FA5                     STR_54:
  2929  007FA5  49                 	db	73	;'I'
  2930  007FA6  6E                 	db	110	;'n'
  2931  007FA7  76                 	db	118	;'v'
  2932  007FA8  61                 	db	97	;'a'
  2933  007FA9  6C                 	db	108	;'l'
  2934  007FAA  69                 	db	105	;'i'
  2935  007FAB  64                 	db	100	;'d'
  2936  007FAC  20                 	db	32
  2937  007FAD  53                 	db	83	;'S'
  2938  007FAE  65                 	db	101	;'e'
  2939  007FAF  6C                 	db	108	;'l'
  2940  007FB0  65                 	db	101	;'e'
  2941  007FB1  63                 	db	99	;'c'
  2942  007FB2  74                 	db	116	;'t'
  2943  007FB3  69                 	db	105	;'i'
  2944  007FB4  6F                 	db	111	;'o'
  2945  007FB5  6E                 	db	110	;'n'
  2946  007FB6  0A                 	db	10
  2947  007FB7  0D                 	db	13
  2948  007FB8  00                 	db	0
  2949  007FB9                     STR_87:
  2950  007FB9  0A                 	db	10
  2951  007FBA  0D                 	db	13
  2952  007FBB  49                 	db	73	;'I'
  2953  007FBC  6E                 	db	110	;'n'
  2954  007FBD  76                 	db	118	;'v'
  2955  007FBE  61                 	db	97	;'a'
  2956  007FBF  6C                 	db	108	;'l'
  2957  007FC0  69                 	db	105	;'i'
  2958  007FC1  64                 	db	100	;'d'
  2959  007FC2  20                 	db	32
  2960  007FC3  53                 	db	83	;'S'
  2961  007FC4  65                 	db	101	;'e'
  2962  007FC5  6C                 	db	108	;'l'
  2963  007FC6  65                 	db	101	;'e'
  2964  007FC7  63                 	db	99	;'c'
  2965  007FC8  74                 	db	116	;'t'
  2966  007FC9  69                 	db	105	;'i'
  2967  007FCA  6F                 	db	111	;'o'
  2968  007FCB  6E                 	db	110	;'n'
  2969  007FCC  00                 	db	0
  2970  007FCD                     STR_39:
  2971  007FCD  0A                 	db	10
  2972  007FCE  0D                 	db	13
  2973  007FCF  49                 	db	73	;'I'
  2974  007FD0  6E                 	db	110	;'n'
  2975  007FD1  70                 	db	112	;'p'
  2976  007FD2  75                 	db	117	;'u'
  2977  007FD3  74                 	db	116	;'t'
  2978  007FD4  3A                 	db	58	;':'
  2979  007FD5  20                 	db	32
  2980  007FD6  00                 	db	0
  2981  007FD7                     STR_3:
  2982  007FD7  4B                 	db	75	;'K'
  2983  007FD8  45                 	db	69	;'E'
  2984  007FD9  59                 	db	89	;'Y'
  2985  007FDA  42                 	db	66	;'B'
  2986  007FDB  4F                 	db	79	;'O'
  2987  007FDC  41                 	db	65	;'A'
  2988  007FDD  52                 	db	82	;'R'
  2989  007FDE  44                 	db	68	;'D'
  2990  007FDF  00                 	db	0
  2991  007FE0                     STR_1:
  2992  007FE0  49                 	db	73	;'I'
  2993  007FE1  4E                 	db	78	;'N'
  2994  007FE2  41                 	db	65	;'A'
  2995  007FE3  43                 	db	67	;'C'
  2996  007FE4  54                 	db	84	;'T'
  2997  007FE5  49                 	db	73	;'I'
  2998  007FE6  56                 	db	86	;'V'
  2999  007FE7  45                 	db	69	;'E'
  3000  007FE8  00                 	db	0
  3001  007FE9                     STR_79:
  3002  007FE9  4B                 	db	75	;'K'
  3003  007FEA  45                 	db	69	;'E'
  3004  007FEB  59                 	db	89	;'Y'
  3005  007FEC  50                 	db	80	;'P'
  3006  007FED  41                 	db	65	;'A'
  3007  007FEE  44                 	db	68	;'D'
  3008  007FEF  00                 	db	0
  3009  007FF0                     STR_24:
  3010  007FF0  25                 	db	37
  3011  007FF1  32                 	db	50	;'2'
  3012  007FF2  2E                 	db	46
  3013  007FF3  32                 	db	50	;'2'
  3014  007FF4  66                 	db	102	;'f'
  3015  007FF5  00                 	db	0
  3016  007FF6                     STR_12:
  3017  007FF6  1B                 	db	27
  3018  007FF7  5B                 	db	91	;'['
  3019  007FF8  32                 	db	50	;'2'
  3020  007FF9  4A                 	db	74	;'J'
  3021  007FFA  00                 	db	0
  3022  007FFB                     STR_26:
  3023  007FFB  25                 	db	37
  3024  007FFC  64                 	db	100	;'d'
  3025  007FFD  00                 	db	0
  3026  0000                     
  3027                           ; #config settings
  3028  007FFE  00                 	db	0	; dummy byte at the end
  3029  0000                     
  3030                           	psect	cinit
  3031  003EEA                     __pcinit:
  3032                           	opt stack 0
  3033  003EEA                     start_initialization:
  3034                           	opt stack 0
  3035  003EEA                     __initialization:
  3036                           	opt stack 0
  3037                           
  3038                           ; Initialize objects allocated to BANK0 (12 bytes)
  3039                           ; load TBLPTR registers with __pidataBANK0
  3040  003EEA  0E1C               	movlw	low __pidataBANK0
  3041  003EEC  6EF6               	movwf	tblptrl,c
  3042  003EEE  0E42               	movlw	high __pidataBANK0
  3043  003EF0  6EF7               	movwf	tblptrh,c
  3044  003EF2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3045  003EF4  6EF8               	movwf	tblptru,c
  3046  003EF6  EE00  F0EA         	lfsr	0,__pdataBANK0
  3047  003EFA  EE20 F00C          	lfsr	2,12
  3048  003EFE                     copy_data0:
  3049  003EFE  0009               	tblrd		*+
  3050  003F00  CFF5 FFEE          	movff	tablat,postinc0
  3051  003F04  50DD               	movf	postdec2,w,c
  3052  003F06  50D9               	movf	fsr2l,w,c
  3053  003F08  E1FA               	bnz	copy_data0
  3054                           
  3055                           ; Initialize objects allocated to COMRAM (4 bytes)
  3056                           ; load TBLPTR registers with __pidataCOMRAM
  3057  003F0A  0E2E               	movlw	low __pidataCOMRAM
  3058  003F0C  6EF6               	movwf	tblptrl,c
  3059  003F0E  0E42               	movlw	high __pidataCOMRAM
  3060  003F10  6EF7               	movwf	tblptrh,c
  3061  003F12  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3062  003F14  6EF8               	movwf	tblptru,c
  3063  003F16  EE00  F04E         	lfsr	0,__pdataCOMRAM
  3064  003F1A  EE20 F004          	lfsr	2,4
  3065  003F1E                     copy_data1:
  3066  003F1E  0009               	tblrd		*+
  3067  003F20  CFF5 FFEE          	movff	tablat,postinc0
  3068  003F24  50DD               	movf	postdec2,w,c
  3069  003F26  50D9               	movf	fsr2l,w,c
  3070  003F28  E1FA               	bnz	copy_data1
  3071                           
  3072                           ; Clear objects allocated to BANK0 (28 bytes)
  3073  003F2A  EE00  F0CE         	lfsr	0,__pbssBANK0
  3074  003F2E  0E1C               	movlw	28
  3075  003F30                     clear_0:
  3076  003F30  6AEE               	clrf	postinc0,c
  3077  003F32  06E8               	decf	wreg,f,c
  3078  003F34  E1FD               	bnz	clear_0
  3079                           
  3080                           ; Clear objects allocated to COMRAM (8 bytes)
  3081  003F36  EE00  F046         	lfsr	0,__pbssCOMRAM
  3082  003F3A  0E08               	movlw	8
  3083  003F3C                     clear_1:
  3084  003F3C  6AEE               	clrf	postinc0,c
  3085  003F3E  06E8               	decf	wreg,f,c
  3086  003F40  E1FD               	bnz	clear_1
  3087  003F42                     end_of_initialization:
  3088                           	opt stack 0
  3089  003F42                     __end_of__initialization:
  3090                           	opt stack 0
  3091  003F42  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3092  003F44  6EF8               	movwf	tblptru,c
  3093  003F46  0100               	movlb	0
  3094  003F48  EFD3  F01F         	goto	_main	;jump to C main() function
  3095                           tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           postinc0	equ	0xFEE
  3100                           wreg	equ	0xFE8
  3101                           postdec2	equ	0xFDD
  3102                           fsr2l	equ	0xFD9
  3103                           
  3104                           	psect	bssCOMRAM
  3105  000046                     __pbssCOMRAM:
  3106                           	opt stack 0
  3107  000046                     _check:
  3108                           	opt stack 0
  3109  000046                     	ds	2
  3110  000048                     _inReset:
  3111                           	opt stack 0
  3112  000048                     	ds	2
  3113  00004A                     _temp1:
  3114                           	opt stack 0
  3115  00004A                     	ds	2
  3116  00004C                     _tempIntSet:
  3117                           	opt stack 0
  3118  00004C                     	ds	2
  3119                           tblptru	equ	0xFF8
  3120                           tblptrh	equ	0xFF7
  3121                           tblptrl	equ	0xFF6
  3122                           tablat	equ	0xFF5
  3123                           postinc0	equ	0xFEE
  3124                           wreg	equ	0xFE8
  3125                           postdec2	equ	0xFDD
  3126                           fsr2l	equ	0xFD9
  3127                           
  3128                           	psect	dataCOMRAM
  3129  00004E                     __pdataCOMRAM:
  3130                           	opt stack 0
  3131  00004E                     _inputTypeAddr:
  3132                           	opt stack 0
  3133  00004E                     	ds	2
  3134  000050                     _tempStatusAddr:
  3135                           	opt stack 0
  3136  000050                     	ds	2
  3137                           tblptru	equ	0xFF8
  3138                           tblptrh	equ	0xFF7
  3139                           tblptrl	equ	0xFF6
  3140                           tablat	equ	0xFF5
  3141                           postinc0	equ	0xFEE
  3142                           wreg	equ	0xFE8
  3143                           postdec2	equ	0xFDD
  3144                           fsr2l	equ	0xFD9
  3145                           
  3146                           	psect	bssBANK0
  3147  0000CE                     __pbssBANK0:
  3148                           	opt stack 0
  3149  0000CE                     _pass:
  3150                           	opt stack 0
  3151  0000CE                     	ds	4
  3152  0000D2                     _tempPass:
  3153                           	opt stack 0
  3154  0000D2                     	ds	4
  3155  0000D6                     _temperature:
  3156                           	opt stack 0
  3157  0000D6                     	ds	3
  3158  0000D9                     _addr:
  3159                           	opt stack 0
  3160  0000D9                     	ds	2
  3161  0000DB                     _flag:
  3162                           	opt stack 0
  3163  0000DB                     	ds	2
  3164  0000DD                     _tempThreshold:
  3165                           	opt stack 0
  3166  0000DD                     	ds	2
  3167  0000DF                     _choice:
  3168                           	opt stack 0
  3169  0000DF                     	ds	1
  3170  0000E0                     _keypadValue:
  3171                           	opt stack 0
  3172  0000E0                     	ds	1
  3173  0000E1                     _tempArray:
  3174                           	opt stack 0
  3175  0000E1                     	ds	6
  3176  0000E7                     _thresholdArray:
  3177                           	opt stack 0
  3178  0000E7                     	ds	3
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           postdec2	equ	0xFDD
  3186                           fsr2l	equ	0xFD9
  3187                           
  3188                           	psect	dataBANK0
  3189  0000EA                     __pdataBANK0:
  3190                           	opt stack 0
  3191  0000EA                     _PIRStatusAddr:
  3192                           	opt stack 0
  3193  0000EA                     	ds	2
  3194  0000EC                     _correctPassword:
  3195                           	opt stack 0
  3196  0000EC                     	ds	2
  3197  0000EE                     _inputMethod:
  3198                           	opt stack 0
  3199  0000EE                     	ds	2
  3200  0000F0                     _statusOfPir:
  3201                           	opt stack 0
  3202  0000F0                     	ds	2
  3203  0000F2                     _statusOfTemp:
  3204                           	opt stack 0
  3205  0000F2                     	ds	2
  3206  0000F4                     _thresholdAddr:
  3207                           	opt stack 0
  3208  0000F4                     	ds	2
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           postinc0	equ	0xFEE
  3214                           wreg	equ	0xFE8
  3215                           postdec2	equ	0xFDD
  3216                           fsr2l	equ	0xFD9
  3217                           
  3218                           	psect	cstackBANK0
  3219  000080                     __pcstackBANK0:
  3220                           	opt stack 0
  3221  000080                     ?_changePassword:
  3222                           	opt stack 0
  3223  000080                     ?___awmod:
  3224                           	opt stack 0
  3225  000080                     ?___ftneg:
  3226                           	opt stack 0
  3227  000080                     ?___lltoft:
  3228                           	opt stack 0
  3229  000080                     ?__tdiv_to_l_:
  3230                           	opt stack 0
  3231  000080                     ?__div_to_l_:
  3232                           	opt stack 0
  3233  000080                     ?___lldiv:
  3234                           	opt stack 0
  3235  000080                     setUpPassword@i:
  3236                           	opt stack 0
  3237  000080                     ___awmod@dividend:
  3238                           	opt stack 0
  3239  000080                     __div_to_l_@f1:
  3240                           	opt stack 0
  3241  000080                     __tdiv_to_l_@f1:
  3242                           	opt stack 0
  3243  000080                     ___ftneg@f1:
  3244                           	opt stack 0
  3245  000080                     ___lldiv@dividend:
  3246                           	opt stack 0
  3247  000080                     ___lltoft@c:
  3248                           	opt stack 0
  3249                           
  3250                           ; 4 bytes @ 0x0
  3251  000080                     	ds	2
  3252  000082                     ___awmod@divisor:
  3253                           	opt stack 0
  3254                           
  3255                           ; 2 bytes @ 0x2
  3256  000082                     	ds	1
  3257  000083                     changePassword@a_correctPassword:
  3258                           	opt stack 0
  3259  000083                     __div_to_l_@f2:
  3260                           	opt stack 0
  3261  000083                     __tdiv_to_l_@f2:
  3262                           	opt stack 0
  3263                           
  3264                           ; 3 bytes @ 0x3
  3265  000083                     	ds	1
  3266  000084                     ??___lltoft:
  3267  000084                     ___awmod@counter:
  3268                           	opt stack 0
  3269  000084                     ___lldiv@divisor:
  3270                           	opt stack 0
  3271                           
  3272                           ; 4 bytes @ 0x4
  3273  000084                     	ds	1
  3274  000085                     ___awmod@sign:
  3275                           	opt stack 0
  3276  000085                     changePassword@i:
  3277                           	opt stack 0
  3278                           
  3279                           ; 2 bytes @ 0x5
  3280  000085                     	ds	1
  3281  000086                     ??__tdiv_to_l_:
  3282  000086                     ?___awdiv:
  3283                           	opt stack 0
  3284  000086                     ___awdiv@dividend:
  3285                           	opt stack 0
  3286  000086                     __div_to_l_@quot:
  3287                           	opt stack 0
  3288                           
  3289                           ; 4 bytes @ 0x6
  3290  000086                     	ds	1
  3291  000087                     option_passcode@my_correctPassword:
  3292                           	opt stack 0
  3293                           
  3294                           ; 2 bytes @ 0x7
  3295  000087                     	ds	1
  3296  000088                     ___lltoft@exp:
  3297                           	opt stack 0
  3298  000088                     ___awdiv@divisor:
  3299                           	opt stack 0
  3300  000088                     ___lldiv@quotient:
  3301                           	opt stack 0
  3302                           
  3303                           ; 4 bytes @ 0x8
  3304  000088                     	ds	1
  3305  000089                     ?___ftsub:
  3306                           	opt stack 0
  3307  000089                     option_passcode@i:
  3308                           	opt stack 0
  3309  000089                     ___ftsub@f1:
  3310                           	opt stack 0
  3311  000089                     __tdiv_to_l_@quot:
  3312                           	opt stack 0
  3313                           
  3314                           ; 4 bytes @ 0x9
  3315  000089                     	ds	1
  3316  00008A                     ___awdiv@counter:
  3317                           	opt stack 0
  3318  00008A                     __div_to_l_@cntr:
  3319                           	opt stack 0
  3320                           
  3321                           ; 1 bytes @ 0xA
  3322  00008A                     	ds	1
  3323  00008B                     ___awdiv@sign:
  3324                           	opt stack 0
  3325  00008B                     __div_to_l_@exp1:
  3326                           	opt stack 0
  3327  00008B                     option_passcode@i_1127:
  3328                           	opt stack 0
  3329                           
  3330                           ; 2 bytes @ 0xB
  3331  00008B                     	ds	1
  3332  00008C                     ___lldiv@counter:
  3333                           	opt stack 0
  3334  00008C                     ___awdiv@quotient:
  3335                           	opt stack 0
  3336  00008C                     ___ftsub@f2:
  3337                           	opt stack 0
  3338                           
  3339                           ; 3 bytes @ 0xC
  3340  00008C                     	ds	1
  3341  00008D                     ?___llmod:
  3342                           	opt stack 0
  3343  00008D                     __tdiv_to_l_@cntr:
  3344                           	opt stack 0
  3345  00008D                     ___llmod@dividend:
  3346                           	opt stack 0
  3347                           
  3348                           ; 4 bytes @ 0xD
  3349  00008D                     	ds	1
  3350  00008E                     ?_fround:
  3351                           	opt stack 0
  3352  00008E                     ?_scale:
  3353                           	opt stack 0
  3354  00008E                     __tdiv_to_l_@exp1:
  3355                           	opt stack 0
  3356                           
  3357                           ; 1 bytes @ 0xE
  3358  00008E                     	ds	1
  3359  00008F                     
  3360                           ; 1 bytes @ 0xF
  3361  00008F                     	ds	2
  3362  000091                     fround@prec:
  3363                           	opt stack 0
  3364  000091                     scale@scl:
  3365                           	opt stack 0
  3366  000091                     ___llmod@divisor:
  3367                           	opt stack 0
  3368                           
  3369                           ; 4 bytes @ 0x11
  3370  000091                     	ds	1
  3371  000092                     ?___fttol:
  3372                           	opt stack 0
  3373  000092                     ___fttol@f1:
  3374                           	opt stack 0
  3375                           
  3376                           ; 3 bytes @ 0x12
  3377  000092                     	ds	3
  3378  000095                     ___llmod@counter:
  3379                           	opt stack 0
  3380                           
  3381                           ; 1 bytes @ 0x15
  3382  000095                     	ds	1
  3383  000096                     ??___fttol:
  3384                           
  3385                           ; 1 bytes @ 0x16
  3386  000096                     	ds	5
  3387  00009B                     ___fttol@sign1:
  3388                           	opt stack 0
  3389                           
  3390                           ; 1 bytes @ 0x1B
  3391  00009B                     	ds	1
  3392  00009C                     ___fttol@lval:
  3393                           	opt stack 0
  3394                           
  3395                           ; 4 bytes @ 0x1C
  3396  00009C                     	ds	4
  3397  0000A0                     ___fttol@exp1:
  3398                           	opt stack 0
  3399                           
  3400                           ; 1 bytes @ 0x20
  3401  0000A0                     	ds	1
  3402  0000A1                     ?_sprintf:
  3403                           	opt stack 0
  3404  0000A1                     sprintf@sp:
  3405                           	opt stack 0
  3406                           
  3407                           ; 2 bytes @ 0x21
  3408  0000A1                     	ds	2
  3409  0000A3                     sprintf@f:
  3410                           	opt stack 0
  3411                           
  3412                           ; 2 bytes @ 0x23
  3413  0000A3                     	ds	5
  3414  0000A8                     ??_sprintf:
  3415                           
  3416                           ; 1 bytes @ 0x28
  3417  0000A8                     	ds	6
  3418  0000AE                     sprintf@ap:
  3419                           	opt stack 0
  3420                           
  3421                           ; 2 bytes @ 0x2E
  3422  0000AE                     	ds	2
  3423  0000B0                     sprintf@flag:
  3424                           	opt stack 0
  3425                           
  3426                           ; 2 bytes @ 0x30
  3427  0000B0                     	ds	2
  3428  0000B2                     sprintf@width:
  3429                           	opt stack 0
  3430                           
  3431                           ; 2 bytes @ 0x32
  3432  0000B2                     	ds	2
  3433  0000B4                     sprintf@tmpval:
  3434                           	opt stack 0
  3435                           
  3436                           ; 4 bytes @ 0x34
  3437  0000B4                     	ds	4
  3438  0000B8                     sprintf@val:
  3439                           	opt stack 0
  3440                           
  3441                           ; 4 bytes @ 0x38
  3442  0000B8                     	ds	4
  3443  0000BC                     sprintf@exp:
  3444                           	opt stack 0
  3445                           
  3446                           ; 2 bytes @ 0x3C
  3447  0000BC                     	ds	2
  3448  0000BE                     sprintf@fval:
  3449                           	opt stack 0
  3450                           
  3451                           ; 3 bytes @ 0x3E
  3452  0000BE                     	ds	3
  3453  0000C1                     sprintf@prec:
  3454                           	opt stack 0
  3455                           
  3456                           ; 2 bytes @ 0x41
  3457  0000C1                     	ds	2
  3458  0000C3                     sprintf@c:
  3459                           	opt stack 0
  3460                           
  3461                           ; 1 bytes @ 0x43
  3462  0000C3                     	ds	1
  3463  0000C4                     
  3464                           ; 1 bytes @ 0x44
  3465  0000C4                     	ds	6
  3466  0000CA                     verifyPassword@i_1033:
  3467                           	opt stack 0
  3468                           
  3469                           ; 2 bytes @ 0x4A
  3470  0000CA                     	ds	2
  3471  0000CC                     verifyPassword@i:
  3472                           	opt stack 0
  3473                           
  3474                           ; 2 bytes @ 0x4C
  3475  0000CC                     	ds	2
  3476                           tblptru	equ	0xFF8
  3477                           tblptrh	equ	0xFF7
  3478                           tblptrl	equ	0xFF6
  3479                           tablat	equ	0xFF5
  3480                           postinc0	equ	0xFEE
  3481                           wreg	equ	0xFE8
  3482                           postdec2	equ	0xFDD
  3483                           fsr2l	equ	0xFD9
  3484                           
  3485                           	psect	cstackCOMRAM
  3486  000001                     __pcstackCOMRAM:
  3487                           	opt stack 0
  3488  000001                     ?_PIR_reset:
  3489                           	opt stack 0
  3490                           
  3491                           ; 2 bytes @ 0x0
  3492  000001                     	ds	2
  3493  000003                     
  3494                           ; 1 bytes @ 0x2
  3495  000003                     	ds	1
  3496  000004                     PIR_reset@c_correctPassword:
  3497                           	opt stack 0
  3498                           
  3499                           ; 2 bytes @ 0x3
  3500  000004                     	ds	2
  3501  000006                     PIR_reset@i:
  3502                           	opt stack 0
  3503                           
  3504                           ; 2 bytes @ 0x5
  3505  000006                     	ds	2
  3506  000008                     ??_My_ISR_High:
  3507                           
  3508                           ; 1 bytes @ 0x7
  3509  000008                     	ds	11
  3510  000013                     My_ISR_High@check:
  3511                           	opt stack 0
  3512                           
  3513                           ; 2 bytes @ 0x12
  3514  000013                     	ds	2
  3515  000015                     My_ISR_High@sec_correctPassword:
  3516                           	opt stack 0
  3517                           
  3518                           ; 2 bytes @ 0x14
  3519  000015                     	ds	2
  3520  000017                     ?_temp_reset:
  3521                           	opt stack 0
  3522                           
  3523                           ; 2 bytes @ 0x16
  3524  000017                     	ds	2
  3525  000019                     
  3526                           ; 1 bytes @ 0x18
  3527  000019                     	ds	1
  3528  00001A                     temp_reset@b_correctPassword:
  3529                           	opt stack 0
  3530                           
  3531                           ; 2 bytes @ 0x19
  3532  00001A                     	ds	2
  3533  00001C                     temp_reset@i:
  3534                           	opt stack 0
  3535                           
  3536                           ; 2 bytes @ 0x1B
  3537  00001C                     	ds	2
  3538  00001E                     ??_My_ISR_Low_TempSensor:
  3539                           
  3540                           ; 1 bytes @ 0x1D
  3541  00001E                     	ds	20
  3542  000032                     My_ISR_Low_TempSensor@thirdCorrectPassword:
  3543                           	opt stack 0
  3544                           
  3545                           ; 2 bytes @ 0x31
  3546  000032                     	ds	2
  3547  000034                     My_ISR_Low_TempSensor@check:
  3548                           	opt stack 0
  3549                           
  3550                           ; 2 bytes @ 0x33
  3551  000034                     	ds	2
  3552  000036                     My_ISR_Low_TempSensor@third_correctPassword:
  3553                           	opt stack 0
  3554                           
  3555                           ; 2 bytes @ 0x35
  3556  000036                     	ds	2
  3557  000038                     My_ISR_Low_TempSensor@i_1196:
  3558                           	opt stack 0
  3559                           
  3560                           ; 2 bytes @ 0x37
  3561  000038                     	ds	2
  3562                           tblptru	equ	0xFF8
  3563                           tblptrh	equ	0xFF7
  3564                           tblptrl	equ	0xFF6
  3565                           tablat	equ	0xFF5
  3566                           postinc0	equ	0xFEE
  3567                           wreg	equ	0xFE8
  3568                           postdec2	equ	0xFDD
  3569                           fsr2l	equ	0xFD9
  3570                           
  3571 ;;
  3572 ;;Main: autosize = 0, tempsize = 0, incstack = 2, save=0
  3573 ;;
  3574 ;; *************** function _main *****************
  3575 ;; Defined at:
  3576 ;;		line 167 in file "FinalProject.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3590 ;;      Params:         0       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0
  3593 ;;      Totals:         0       0       0       0       0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels required when called:   18
  3596 ;; This function calls:
  3597 ;;		_FindCurrentTemp
  3598 ;;		_existingUserLogin
  3599 ;;		_halfSecDelay
  3600 ;;		_initialScreen
  3601 ;;		_initialize_PIR
  3602 ;;		_initialize_serial
  3603 ;;		_initialize_timer
  3604 ;;		_read_EEPROM
  3605 ;;		_setUpPassword
  3606 ;; This function is called by:
  3607 ;;		Startup code after reset
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text0
  3612  003FA6                     __ptext0:
  3613                           	opt stack 0
  3614  003FA6                     _main:
  3615                           	opt stack 13
  3616                           
  3617                           ;FinalProject.c: 169: tempIntSet = 0;
  3618                           
  3619                           ;incstack = 0
  3620  003FA6  0E00               	movlw	0
  3621  003FA8  6E4D               	movwf	_tempIntSet+1,c
  3622  003FAA  0E00               	movlw	0
  3623  003FAC  6E4C               	movwf	_tempIntSet,c
  3624                           
  3625                           ;FinalProject.c: 170: TRISBbits.RB4 = 0;
  3626  003FAE  9893               	bcf	3987,4,c	;volatile
  3627                           
  3628                           ;FinalProject.c: 171: PORTBbits.RB4 = 0;
  3629  003FB0  9881               	bcf	3969,4,c	;volatile
  3630                           
  3631                           ;FinalProject.c: 172: initialize_PIR();
  3632  003FB2  ECFE  F020         	call	_initialize_PIR	;wreg free
  3633                           
  3634                           ;FinalProject.c: 173: ADCON1 = 0b00001110;
  3635  003FB6  0E0E               	movlw	14
  3636  003FB8  6EC1               	movwf	4033,c	;volatile
  3637                           
  3638                           ;FinalProject.c: 174: TRISBbits.RB5 = 0;
  3639  003FBA  9A93               	bcf	3987,5,c	;volatile
  3640                           
  3641                           ;FinalProject.c: 175: initialize_serial();
  3642  003FBC  ECDC  F020         	call	_initialize_serial	;wreg free
  3643                           
  3644                           ;FinalProject.c: 176: PIR1bits.ADIF = 0;
  3645  003FC0  9C9E               	bcf	3998,6,c	;volatile
  3646                           
  3647                           ;FinalProject.c: 177: IPR1bits.ADIP = 0;
  3648  003FC2  9C9F               	bcf	3999,6,c	;volatile
  3649                           
  3650                           ;FinalProject.c: 178: PIE1bits.ADIE = 0;
  3651  003FC4  9C9D               	bcf	3997,6,c	;volatile
  3652                           
  3653                           ;FinalProject.c: 179: initialize_timer();
  3654  003FC6  ECCF  F020         	call	_initialize_timer	;wreg free
  3655                           
  3656                           ;FinalProject.c: 180: initialScreen();
  3657  003FCA  ECFC  F01F         	call	_initialScreen	;wreg free
  3658                           
  3659                           ;FinalProject.c: 181: FindCurrentTemp();
  3660  003FCE  EC12  F01A         	call	_FindCurrentTemp	;wreg free
  3661                           
  3662                           ;FinalProject.c: 185: halfSecDelay();
  3663  003FD2  ECA6  F01F         	call	_halfSecDelay	;wreg free
  3664                           
  3665                           ;FinalProject.c: 186: halfSecDelay();
  3666  003FD6  ECA6  F01F         	call	_halfSecDelay	;wreg free
  3667                           
  3668                           ;FinalProject.c: 188: if(read_EEPROM(0x00) ==(char)255)
  3669  003FDA  0E00               	movlw	0
  3670  003FDC  6EE6               	movwf	postinc1,c
  3671  003FDE  0E00               	movlw	0
  3672  003FE0  6EE6               	movwf	postinc1,c
  3673  003FE2  ECE8  F020         	call	_read_EEPROM	;wreg free
  3674  003FE6  283A               	incf	btemp,w,c
  3675  003FE8  A4D8               	btfss	status,2,c
  3676  003FEA  D003               	goto	l7445
  3677                           
  3678                           ;FinalProject.c: 189: {
  3679                           ;FinalProject.c: 190: setUpPassword();
  3680  003FEC  ECB6  F01B         	call	_setUpPassword	;wreg free
  3681                           
  3682                           ;FinalProject.c: 192: }
  3683  003FF0  D002               	goto	l175
  3684  003FF2                     l7445:
  3685                           
  3686                           ;FinalProject.c: 193: else
  3687                           ;FinalProject.c: 194: {
  3688                           ;FinalProject.c: 195: existingUserLogin();
  3689  003FF2  EC6E  F01E         	call	_existingUserLogin	;wreg free
  3690  003FF6                     l175:
  3691  003FF6  D7FF               	goto	l175
  3692  003FF8                     __end_of_main:
  3693                           	opt stack 0
  3694                           tblptru	equ	0xFF8
  3695                           tblptrh	equ	0xFF7
  3696                           tblptrl	equ	0xFF6
  3697                           tablat	equ	0xFF5
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           postinc1	equ	0xFE6
  3701                           postdec2	equ	0xFDD
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           
  3705 ;; *************** function _setUpPassword *****************
  3706 ;; Defined at:
  3707 ;;		line 225 in file "FinalProject.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  i               2    0[BANK0 ] int 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3721 ;;      Params:         0       0       0       0       0       0       0
  3722 ;;      Locals:         0       2       0       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0       0       0
  3724 ;;      Totals:         0       2       0       0       0       0       0
  3725 ;;Total ram usage:        2 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:   17
  3728 ;; This function calls:
  3729 ;;		_existingUserLogin
  3730 ;;		_halfSecDelay
  3731 ;;		_initialScreen
  3732 ;;		_my_print
  3733 ;;		_reception
  3734 ;;		_updateThreshold
  3735 ;;		_write_EEPROM
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text1
  3742  00376C                     __ptext1:
  3743                           	opt stack 0
  3744  00376C                     _setUpPassword:
  3745                           	opt stack 13
  3746                           
  3747                           ;FinalProject.c: 229: my_print("\n\rWelcome User. This is the first time you have logged
      +                           in");
  3748                           
  3749                           ;incstack = 0
  3750  00376C  0E04               	movlw	low STR_4
  3751  00376E  6EE6               	movwf	postinc1,c
  3752  003770  0E79               	movlw	high STR_4
  3753  003772  6EE6               	movwf	postinc1,c
  3754  003774  ECF8  F01E         	call	_my_print	;wreg free
  3755                           
  3756                           ;FinalProject.c: 230: my_print("\r\nLets set up your Password");
  3757  003778  0E95               	movlw	low STR_5
  3758  00377A  6EE6               	movwf	postinc1,c
  3759  00377C  0E7E               	movlw	high STR_5
  3760  00377E  6EE6               	movwf	postinc1,c
  3761  003780  ECF8  F01E         	call	_my_print	;wreg free
  3762                           
  3763                           ;FinalProject.c: 231: my_print("\r\nEnter 4 digit password: ");
  3764  003784  0EB1               	movlw	low STR_6
  3765  003786  6EE6               	movwf	postinc1,c
  3766  003788  0E7E               	movlw	high STR_6
  3767  00378A  6EE6               	movwf	postinc1,c
  3768  00378C  ECF8  F01E         	call	_my_print	;wreg free
  3769                           
  3770                           ;FinalProject.c: 232: halfSecDelay();
  3771  003790  ECA6  F01F         	call	_halfSecDelay	;wreg free
  3772                           
  3773                           ;FinalProject.c: 235: int i;
  3774                           ;FinalProject.c: 236: addr = 0x00;
  3775  003794  0E00               	movlw	0
  3776  003796  0100               	movlb	0	; () banked
  3777  003798  6FDA               	movwf	(_addr+1)& (0+255),b
  3778  00379A  0E00               	movlw	0
  3779  00379C  6FD9               	movwf	_addr& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;FinalProject.c: 237: for(i=0; i<4; i++)
  3783  00379E  0E00               	movlw	0
  3784  0037A0  0100               	movlb	0	; () banked
  3785  0037A2  6F81               	movwf	(setUpPassword@i+1)& (0+255),b
  3786  0037A4  0E00               	movlw	0
  3787  0037A6  6F80               	movwf	setUpPassword@i& (0+255),b
  3788  0037A8                     l7307:
  3789                           
  3790                           ; BSR set to: 0
  3791  0037A8  0100               	movlb	0	; () banked
  3792  0037AA  BF81               	btfsc	(setUpPassword@i+1)& (0+255),7,b
  3793  0037AC  D008               	goto	l7311
  3794  0037AE  0100               	movlb	0	; () banked
  3795  0037B0  5181               	movf	(setUpPassword@i+1)& (0+255),w,b
  3796  0037B2  E12E               	bnz	l7323
  3797  0037B4  0E04               	movlw	4
  3798  0037B6  0100               	movlb	0	; () banked
  3799  0037B8  5D80               	subwf	setUpPassword@i& (0+255),w,b
  3800  0037BA  B0D8               	btfsc	status,0,c
  3801  0037BC  D029               	goto	l7323
  3802  0037BE                     l7311:
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;FinalProject.c: 238: {
  3806                           ;FinalProject.c: 239: pass[i] = reception();
  3807  0037BE  0ECE               	movlw	low _pass
  3808  0037C0  0100               	movlb	0	; () banked
  3809  0037C2  2580               	addwf	setUpPassword@i& (0+255),w,b
  3810  0037C4  6ED9               	movwf	fsr2l,c
  3811  0037C6  0E00               	movlw	high _pass
  3812  0037C8  0100               	movlb	0	; () banked
  3813  0037CA  2181               	addwfc	(setUpPassword@i+1)& (0+255),w,b
  3814  0037CC  6EDA               	movwf	fsr2h,c
  3815  0037CE  ECF3  F020         	call	_reception	;wreg free
  3816  0037D2  503A               	movf	btemp,w,c
  3817  0037D4  6EDF               	movwf	indf2,c
  3818                           
  3819                           ;FinalProject.c: 240: my_print("*");
  3820  0037D6  0E49               	movlw	low (STR_16+61)
  3821  0037D8  6EE6               	movwf	postinc1,c
  3822  0037DA  0E77               	movlw	high (STR_16+61)
  3823  0037DC  6EE6               	movwf	postinc1,c
  3824  0037DE  ECF8  F01E         	call	_my_print	;wreg free
  3825                           
  3826                           ;FinalProject.c: 241: write_EEPROM(addr, pass[i]);
  3827  0037E2  0ECE               	movlw	low _pass
  3828  0037E4  0100               	movlb	0	; () banked
  3829  0037E6  2580               	addwf	setUpPassword@i& (0+255),w,b
  3830  0037E8  6ED9               	movwf	fsr2l,c
  3831  0037EA  0E00               	movlw	high _pass
  3832  0037EC  0100               	movlb	0	; () banked
  3833  0037EE  2181               	addwfc	(setUpPassword@i+1)& (0+255),w,b
  3834  0037F0  6EDA               	movwf	fsr2h,c
  3835  0037F2  50DF               	movf	indf2,w,c
  3836  0037F4  6EE6               	movwf	postinc1,c
  3837  0037F6  C0D9  FFE6         	movff	_addr,postinc1
  3838  0037FA  C0DA  FFE6         	movff	_addr+1,postinc1
  3839  0037FE  EC97  F020         	call	_write_EEPROM	;wreg free
  3840                           
  3841                           ;FinalProject.c: 242: addr++;
  3842  003802  0100               	movlb	0	; () banked
  3843  003804  4BD9               	infsnz	_addr& (0+255),f,b
  3844  003806  2BDA               	incf	(_addr+1)& (0+255),f,b
  3845                           
  3846                           ; BSR set to: 0
  3847  003808  0100               	movlb	0	; () banked
  3848  00380A  4B80               	infsnz	setUpPassword@i& (0+255),f,b
  3849  00380C  2B81               	incf	(setUpPassword@i+1)& (0+255),f,b
  3850  00380E  D7CC               	goto	l7307
  3851  003810                     l7323:
  3852  003810  0E0D               	movlw	13
  3853  003812  18AE               	xorwf	4014,w,c	;volatile
  3854  003814  A4D8               	btfss	status,2,c
  3855  003816  D7FC               	goto	l7323
  3856                           
  3857                           ;FinalProject.c: 248: my_print("\n\rPassword Registered\n\r");
  3858  003818  0E33               	movlw	low STR_8
  3859  00381A  6EE6               	movwf	postinc1,c
  3860  00381C  0E7F               	movlw	high STR_8
  3861  00381E  6EE6               	movwf	postinc1,c
  3862  003820  ECF8  F01E         	call	_my_print	;wreg free
  3863                           
  3864                           ;FinalProject.c: 251: halfSecDelay();
  3865  003824  ECA6  F01F         	call	_halfSecDelay	;wreg free
  3866                           
  3867                           ;FinalProject.c: 252: halfSecDelay();
  3868  003828  ECA6  F01F         	call	_halfSecDelay	;wreg free
  3869                           
  3870                           ;FinalProject.c: 254: initialScreen();
  3871  00382C  ECFC  F01F         	call	_initialScreen	;wreg free
  3872                           
  3873                           ;FinalProject.c: 255: updateThreshold();
  3874  003830  ECE2  F010         	call	_updateThreshold	;wreg free
  3875                           
  3876                           ;FinalProject.c: 256: halfSecDelay();
  3877  003834  ECA6  F01F         	call	_halfSecDelay	;wreg free
  3878                           
  3879                           ;FinalProject.c: 258: initialScreen();
  3880  003838  ECFC  F01F         	call	_initialScreen	;wreg free
  3881                           
  3882                           ;FinalProject.c: 259: existingUserLogin();
  3883  00383C  EC6E  F01E         	call	_existingUserLogin	;wreg free
  3884  003840  0012               	return		;funcret
  3885  003842                     __end_of_setUpPassword:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           postinc1	equ	0xFE6
  3894                           indf2	equ	0xFDF
  3895                           postdec2	equ	0xFDD
  3896                           fsr2h	equ	0xFDA
  3897                           fsr2l	equ	0xFD9
  3898                           status	equ	0xFD8
  3899                           
  3900 ;; *************** function _initialize_timer *****************
  3901 ;; Defined at:
  3902 ;;		line 322 in file "FinalProject.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3916 ;;      Params:         0       0       0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:   10
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_main
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text2
  3931  00419E                     __ptext2:
  3932                           	opt stack 0
  3933  00419E                     _initialize_timer:
  3934                           	opt stack 20
  3935                           
  3936                           ;FinalProject.c: 324: INTCONbits.PEIE = 1;
  3937                           
  3938                           ;incstack = 0
  3939  00419E  8CF2               	bsf	intcon,6,c	;volatile
  3940                           
  3941                           ;FinalProject.c: 325: INTCONbits.GIE = 1;
  3942  0041A0  8EF2               	bsf	intcon,7,c	;volatile
  3943                           
  3944                           ;FinalProject.c: 326: INTCONbits.TMR0IF=0;
  3945  0041A2  94F2               	bcf	intcon,2,c	;volatile
  3946                           
  3947                           ;FinalProject.c: 327: INTCONbits.TMR0IE=1;
  3948  0041A4  8AF2               	bsf	intcon,5,c	;volatile
  3949                           
  3950                           ;FinalProject.c: 328: INTCON2bits.TMR0IP =0;
  3951  0041A6  94F1               	bcf	intcon2,2,c	;volatile
  3952                           
  3953                           ;FinalProject.c: 329: T0CON = 0b00000110;
  3954  0041A8  0E06               	movlw	6
  3955  0041AA  6ED5               	movwf	4053,c	;volatile
  3956                           
  3957                           ;FinalProject.c: 331: TMR0H = 0x67;
  3958  0041AC  0E67               	movlw	103
  3959  0041AE  6ED7               	movwf	4055,c	;volatile
  3960                           
  3961                           ;FinalProject.c: 332: TMR0L = 0x6A;
  3962  0041B0  0E6A               	movlw	106
  3963  0041B2  6ED6               	movwf	4054,c	;volatile
  3964                           
  3965                           ;FinalProject.c: 334: PORTBbits.RB5 =0;
  3966  0041B4  9A81               	bcf	3969,5,c	;volatile
  3967  0041B6  0012               	return		;funcret
  3968  0041B8                     __end_of_initialize_timer:
  3969                           	opt stack 0
  3970                           tblptru	equ	0xFF8
  3971                           tblptrh	equ	0xFF7
  3972                           tblptrl	equ	0xFF6
  3973                           tablat	equ	0xFF5
  3974                           intcon	equ	0xFF2
  3975                           intcon2	equ	0xFF1
  3976                           postinc0	equ	0xFEE
  3977                           wreg	equ	0xFE8
  3978                           postinc1	equ	0xFE6
  3979                           indf2	equ	0xFDF
  3980                           postdec2	equ	0xFDD
  3981                           fsr2h	equ	0xFDA
  3982                           fsr2l	equ	0xFD9
  3983                           status	equ	0xFD8
  3984                           
  3985 ;; *************** function _initialize_serial *****************
  3986 ;; Defined at:
  3987 ;;		line 337 in file "FinalProject.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4001 ;;      Params:         0       0       0       0       0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0
  4004 ;;      Totals:         0       0       0       0       0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used:    1
  4007 ;; Hardware stack levels required when called:   10
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text3
  4016  0041B8                     __ptext3:
  4017                           	opt stack 0
  4018  0041B8                     _initialize_serial:
  4019                           	opt stack 20
  4020                           
  4021                           ;FinalProject.c: 343: SPBRG = 15;
  4022                           
  4023                           ;incstack = 0
  4024  0041B8  0E0F               	movlw	15
  4025  0041BA  6EAF               	movwf	4015,c	;volatile
  4026                           
  4027                           ;FinalProject.c: 345: TRISCbits.RC7 = 1;
  4028  0041BC  8E94               	bsf	3988,7,c	;volatile
  4029                           
  4030                           ;FinalProject.c: 346: TRISCbits.RC6 = 0;
  4031  0041BE  9C94               	bcf	3988,6,c	;volatile
  4032                           
  4033                           ;FinalProject.c: 348: TXSTAbits.SYNC = 0;
  4034  0041C0  98AC               	bcf	4012,4,c	;volatile
  4035                           
  4036                           ;FinalProject.c: 349: TXSTAbits.BRGH = 0;
  4037  0041C2  94AC               	bcf	4012,2,c	;volatile
  4038                           
  4039                           ;FinalProject.c: 350: RCSTAbits.RX9 = 0;
  4040  0041C4  9CAB               	bcf	4011,6,c	;volatile
  4041                           
  4042                           ;FinalProject.c: 351: TXSTAbits.TX9 = 0;
  4043  0041C6  9CAC               	bcf	4012,6,c	;volatile
  4044                           
  4045                           ;FinalProject.c: 352: RCSTAbits.SPEN = 1;
  4046  0041C8  8EAB               	bsf	4011,7,c	;volatile
  4047                           
  4048                           ;FinalProject.c: 355: TXSTAbits.TXEN = 1;
  4049  0041CA  8AAC               	bsf	4012,5,c	;volatile
  4050                           
  4051                           ;FinalProject.c: 356: RCSTAbits.CREN = 1;
  4052  0041CC  88AB               	bsf	4011,4,c	;volatile
  4053  0041CE  0012               	return		;funcret
  4054  0041D0                     __end_of_initialize_serial:
  4055                           	opt stack 0
  4056                           tblptru	equ	0xFF8
  4057                           tblptrh	equ	0xFF7
  4058                           tblptrl	equ	0xFF6
  4059                           tablat	equ	0xFF5
  4060                           intcon	equ	0xFF2
  4061                           intcon2	equ	0xFF1
  4062                           postinc0	equ	0xFEE
  4063                           wreg	equ	0xFE8
  4064                           postinc1	equ	0xFE6
  4065                           indf2	equ	0xFDF
  4066                           postdec2	equ	0xFDD
  4067                           fsr2h	equ	0xFDA
  4068                           fsr2l	equ	0xFD9
  4069                           status	equ	0xFD8
  4070                           
  4071 ;; *************** function _FindCurrentTemp *****************
  4072 ;; Defined at:
  4073 ;;		line 1363 in file "FinalProject.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;		None
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;		None
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1  [STACK] void 
  4080 ;; Registers used:
  4081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4087 ;;      Params:         0       0       0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:   12
  4094 ;; This function calls:
  4095 ;;		___ftadd
  4096 ;;		___ftdiv
  4097 ;;		___ftmul
  4098 ;;		___lwtoft
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;;		_My_ISR_Low_TempSensor
  4102 ;; This function uses a reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text4
  4106  003424                     __ptext4:
  4107                           	opt stack 0
  4108  003424                     _FindCurrentTemp:
  4109                           	opt stack 9
  4110                           
  4111                           ;FinalProject.c: 1365: ADCON0 = 0b00000001;
  4112                           
  4113                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  4114                           ;incstack = 0
  4115  003424  0E01               	movlw	1
  4116  003426  6EC2               	movwf	4034,c	;volatile
  4117                           
  4118                           ;FinalProject.c: 1367: ADCON1 = 0b00001110;
  4119  003428  0E0E               	movlw	14
  4120  00342A  6EC1               	movwf	4033,c	;volatile
  4121                           
  4122                           ;FinalProject.c: 1368: ADCON2 = 0b10101100;
  4123  00342C  0EAC               	movlw	172
  4124  00342E  6EC0               	movwf	4032,c	;volatile
  4125                           
  4126                           ;FinalProject.c: 1371: TRISAbits.TRISA0 = 1;
  4127  003430  8092               	bsf	3986,0,c	;volatile
  4128                           
  4129                           ;FinalProject.c: 1373: ADCON0bits.GO = 1;
  4130  003432  82C2               	bsf	4034,1,c	;volatile
  4131  003434                     l547:
  4132  003434  B2C2               	btfsc	4034,1,c	;volatile
  4133  003436  D7FE               	goto	l547
  4134                           
  4135                           ;FinalProject.c: 1375: temp1 = ADRESH;
  4136  003438  CFC4 F04A          	movff	4036,_temp1	;volatile
  4137  00343C  6A4B               	clrf	_temp1+1,c
  4138                           
  4139                           ;FinalProject.c: 1376: temp1 = temp1 << 8;
  4140  00343E  504A               	movf	_temp1,w,c
  4141  003440  6E4B               	movwf	_temp1+1,c
  4142  003442  6A4A               	clrf	_temp1,c
  4143                           
  4144                           ;FinalProject.c: 1377: temp1 += ADRESL;
  4145  003444  50C3               	movf	4035,w,c	;volatile
  4146  003446  264A               	addwf	_temp1,f,c
  4147  003448  0E00               	movlw	0
  4148  00344A  224B               	addwfc	_temp1+1,f,c
  4149                           
  4150                           ;FinalProject.c: 1379: temperature = temp1;
  4151  00344C  C04A  FFE6         	movff	_temp1,postinc1
  4152  003450  C04B  FFE6         	movff	_temp1+1,postinc1
  4153  003454  EC65  F020         	call	___lwtoft	;wreg free
  4154  003458  C03A  F0D6         	movff	btemp,_temperature
  4155  00345C  C03B  F0D7         	movff	btemp+1,_temperature+1
  4156  003460  C03C  F0D8         	movff	btemp+2,_temperature+2
  4157                           
  4158                           ;FinalProject.c: 1380: temperature = (double)((temperature/1023)*5000);
  4159  003464  0E40               	movlw	64
  4160  003466  6EE6               	movwf	postinc1,c
  4161  003468  0E9C               	movlw	156
  4162  00346A  6EE6               	movwf	postinc1,c
  4163  00346C  0E45               	movlw	69
  4164  00346E  6EE6               	movwf	postinc1,c
  4165  003470  0EC0               	movlw	192
  4166  003472  6EE6               	movwf	postinc1,c
  4167  003474  0E7F               	movlw	127
  4168  003476  6EE6               	movwf	postinc1,c
  4169  003478  0E44               	movlw	68
  4170  00347A  6EE6               	movwf	postinc1,c
  4171  00347C  C0D6  FFE6         	movff	_temperature,postinc1
  4172  003480  C0D7  FFE6         	movff	_temperature+1,postinc1
  4173  003484  C0D8  FFE6         	movff	_temperature+2,postinc1
  4174  003488  EC1D  F013         	call	___ftdiv	;wreg free
  4175  00348C  C03A  FFE6         	movff	btemp,postinc1
  4176  003490  C03B  FFE6         	movff	btemp+1,postinc1
  4177  003494  C03C  FFE6         	movff	btemp+2,postinc1
  4178  003498  EC10  F012         	call	___ftmul	;wreg free
  4179  00349C  C03A  F0D6         	movff	btemp,_temperature
  4180  0034A0  C03B  F0D7         	movff	btemp+1,_temperature+1
  4181  0034A4  C03C  F0D8         	movff	btemp+2,_temperature+2
  4182                           
  4183                           ;FinalProject.c: 1381: temperature = temperature - 500;
  4184  0034A8  0E00               	movlw	0
  4185  0034AA  6EE6               	movwf	postinc1,c
  4186  0034AC  0EFA               	movlw	250
  4187  0034AE  6EE6               	movwf	postinc1,c
  4188  0034B0  0EC3               	movlw	195
  4189  0034B2  6EE6               	movwf	postinc1,c
  4190  0034B4  C0D6  FFE6         	movff	_temperature,postinc1
  4191  0034B8  C0D7  FFE6         	movff	_temperature+1,postinc1
  4192  0034BC  C0D8  FFE6         	movff	_temperature+2,postinc1
  4193  0034C0  EC76  F00B         	call	___ftadd	;wreg free
  4194  0034C4  C03A  F0D6         	movff	btemp,_temperature
  4195  0034C8  C03B  F0D7         	movff	btemp+1,_temperature+1
  4196  0034CC  C03C  F0D8         	movff	btemp+2,_temperature+2
  4197                           
  4198                           ;FinalProject.c: 1382: temperature = temperature/10;
  4199  0034D0  0E00               	movlw	0
  4200  0034D2  6EE6               	movwf	postinc1,c
  4201  0034D4  0E20               	movlw	32
  4202  0034D6  6EE6               	movwf	postinc1,c
  4203  0034D8  0E41               	movlw	65
  4204  0034DA  6EE6               	movwf	postinc1,c
  4205  0034DC  C0D6  FFE6         	movff	_temperature,postinc1
  4206  0034E0  C0D7  FFE6         	movff	_temperature+1,postinc1
  4207  0034E4  C0D8  FFE6         	movff	_temperature+2,postinc1
  4208  0034E8  EC1D  F013         	call	___ftdiv	;wreg free
  4209  0034EC  C03A  F0D6         	movff	btemp,_temperature
  4210  0034F0  C03B  F0D7         	movff	btemp+1,_temperature+1
  4211  0034F4  C03C  F0D8         	movff	btemp+2,_temperature+2
  4212                           
  4213                           ;FinalProject.c: 1383: temperature = (temperature)*1.8+32;
  4214  0034F8  0E00               	movlw	0
  4215  0034FA  6EE6               	movwf	postinc1,c
  4216  0034FC  0E00               	movlw	0
  4217  0034FE  6EE6               	movwf	postinc1,c
  4218  003500  0E42               	movlw	66
  4219  003502  6EE6               	movwf	postinc1,c
  4220  003504  0E66               	movlw	102
  4221  003506  6EE6               	movwf	postinc1,c
  4222  003508  0EE6               	movlw	230
  4223  00350A  6EE6               	movwf	postinc1,c
  4224  00350C  0E3F               	movlw	63
  4225  00350E  6EE6               	movwf	postinc1,c
  4226  003510  C0D6  FFE6         	movff	_temperature,postinc1
  4227  003514  C0D7  FFE6         	movff	_temperature+1,postinc1
  4228  003518  C0D8  FFE6         	movff	_temperature+2,postinc1
  4229  00351C  EC10  F012         	call	___ftmul	;wreg free
  4230  003520  C03A  FFE6         	movff	btemp,postinc1
  4231  003524  C03B  FFE6         	movff	btemp+1,postinc1
  4232  003528  C03C  FFE6         	movff	btemp+2,postinc1
  4233  00352C  EC76  F00B         	call	___ftadd	;wreg free
  4234  003530  C03A  F0D6         	movff	btemp,_temperature
  4235  003534  C03B  F0D7         	movff	btemp+1,_temperature+1
  4236  003538  C03C  F0D8         	movff	btemp+2,_temperature+2
  4237                           
  4238                           ; _FindCurrentTemp: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
  4239  00353C  0012               	return		;funcret
  4240  00353E                     __end_of_FindCurrentTemp:
  4241                           	opt stack 0
  4242                           tblptru	equ	0xFF8
  4243                           tblptrh	equ	0xFF7
  4244                           tblptrl	equ	0xFF6
  4245                           tablat	equ	0xFF5
  4246                           intcon	equ	0xFF2
  4247                           intcon2	equ	0xFF1
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           postinc1	equ	0xFE6
  4251                           indf2	equ	0xFDF
  4252                           postdec2	equ	0xFDD
  4253                           fsr2h	equ	0xFDA
  4254                           fsr2l	equ	0xFD9
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function ___lwtoft *****************
  4258 ;; Defined at:
  4259 ;;		line 28 in file "/Applications/microchip/xc8/v1.38/sources/common/lwtoft.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  c               2  [STACK] unsigned int 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  3  [STACK] float 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4273 ;;      Params:         0       0       0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0
  4276 ;;      Totals:         0       0       0       0       0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:   11
  4280 ;; This function calls:
  4281 ;;		___ftpack
  4282 ;; This function is called by:
  4283 ;;		_My_ISR_Low_TempSensor
  4284 ;;		_FindCurrentTemp
  4285 ;; This function uses a reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text5
  4289  0040CA                     __ptext5:
  4290                           	opt stack 0
  4291  0040CA                     ___lwtoft:
  4292                           	opt stack 10
  4293                           
  4294                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  4295                           ;incstack = 0
  4296  0040CA  0E00               	movlw	0
  4297  0040CC  6EE6               	movwf	postinc1,c
  4298  0040CE  0E8E               	movlw	142
  4299  0040D0  6EE6               	movwf	postinc1,c
  4300                           
  4301                           ;stkvar	___lwtoft@c @ sp[(-2)+-2]
  4302  0040D2  0EFC               	movlw	-4
  4303  0040D4  CFE3 F044          	movff	plusw1,btemp+10
  4304  0040D8  0EFD               	movlw	-3
  4305  0040DA  CFE3 F045          	movff	plusw1,btemp+11
  4306  0040DE  C044  F040         	movff	btemp+10,btemp+6
  4307  0040E2  C045  F041         	movff	btemp+11,btemp+7
  4308  0040E6  6A42               	clrf	btemp+8,c
  4309  0040E8  C040  FFE6         	movff	btemp+6,postinc1
  4310  0040EC  C041  FFE6         	movff	btemp+7,postinc1
  4311  0040F0  C042  FFE6         	movff	btemp+8,postinc1
  4312  0040F4  EC9F  F01A         	call	___ftpack	;wreg free
  4313                           
  4314                           ; ___lwtoft: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  4315  0040F8  52E5               	movf	postdec1,f,c
  4316  0040FA  52E5               	movf	postdec1,f,c
  4317  0040FC  0012               	return		;funcret
  4318  0040FE                     __end_of___lwtoft:
  4319                           	opt stack 0
  4320                           tblptru	equ	0xFF8
  4321                           tblptrh	equ	0xFF7
  4322                           tblptrl	equ	0xFF6
  4323                           tablat	equ	0xFF5
  4324                           intcon	equ	0xFF2
  4325                           intcon2	equ	0xFF1
  4326                           postinc0	equ	0xFEE
  4327                           wreg	equ	0xFE8
  4328                           postinc1	equ	0xFE6
  4329                           postdec1	equ	0xFE5
  4330                           plusw1	equ	0xFE3
  4331                           indf2	equ	0xFDF
  4332                           postdec2	equ	0xFDD
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function ___ftdiv *****************
  4338 ;; Defined at:
  4339 ;;		line 54 in file "/Applications/microchip/xc8/v1.38/sources/common/ftdiv.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  f1              3  [STACK] float 
  4342 ;;  f2              3  [STACK] float 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;  f3              3  [STACK] float 
  4345 ;;  sign            1  [STACK] unsigned char 
  4346 ;;  exp             1  [STACK] unsigned char 
  4347 ;;  cntr            1  [STACK] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  3  [STACK] float 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4357 ;;      Params:         0       0       0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0
  4360 ;;      Totals:         0       0       0       0       0       0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:   11
  4364 ;; This function calls:
  4365 ;;		___ftpack
  4366 ;; This function is called by:
  4367 ;;		_FindCurrentTemp
  4368 ;; This function uses a reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text6
  4372  00263A                     __ptext6:
  4373                           	opt stack 0
  4374  00263A                     ___ftdiv:
  4375                           	opt stack 0
  4376                           
  4377                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
  4378  00263A  0E06               	movlw	6
  4379  00263C  26E1               	addwf	fsr1l,f,c
  4380  00263E  0E00               	movlw	0
  4381  002640  22E2               	addwfc	fsr1h,f,c
  4382                           
  4383                           ;incstack = 0
  4384  002642  0E0F               	movlw	15
  4385  002644  6E45               	movwf	btemp+11,c
  4386                           
  4387                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4388  002646  0EF7               	movlw	-9
  4389  002648  CFE3 F040          	movff	plusw1,btemp+6
  4390  00264C  0EF8               	movlw	-8
  4391  00264E  CFE3 F041          	movff	plusw1,btemp+7
  4392  002652  0EF9               	movlw	-7
  4393  002654  CFE3 F042          	movff	plusw1,btemp+8
  4394  002658  2845               	incf	btemp+11,w,c
  4395  00265A  6E3A               	movwf	btemp,c
  4396  00265C  D004               	goto	u8480
  4397  00265E                     u8485:
  4398  00265E  90D8               	bcf	status,0,c
  4399  002660  3242               	rrcf	btemp+8,f,c
  4400  002662  3241               	rrcf	btemp+7,f,c
  4401  002664  3240               	rrcf	btemp+6,f,c
  4402  002666                     u8480:
  4403  002666  2E3A               	decfsz	btemp,f,c
  4404  002668  D7FA               	goto	u8485
  4405  00266A  5040               	movf	btemp+6,w,c
  4406  00266C  6E45               	movwf	btemp+11,c
  4407                           
  4408                           ;stkvar	___ftdiv@exp @ sp[(-6)+4]
  4409  00266E  0EFE               	movlw	-2
  4410  002670  C045  FFE3         	movff	btemp+11,plusw1
  4411  002674  0EFE               	movlw	-2
  4412  002676  50E3               	movf	plusw1,w,c
  4413  002678  B4D8               	btfsc	status,2,c
  4414  00267A  D01D               	goto	l7159
  4415  00267C  0E0F               	movlw	15
  4416  00267E  6E45               	movwf	btemp+11,c
  4417                           
  4418                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4419  002680  0EF4               	movlw	-12
  4420  002682  CFE3 F040          	movff	plusw1,btemp+6
  4421  002686  0EF5               	movlw	-11
  4422  002688  CFE3 F041          	movff	plusw1,btemp+7
  4423  00268C  0EF6               	movlw	-10
  4424  00268E  CFE3 F042          	movff	plusw1,btemp+8
  4425  002692  2845               	incf	btemp+11,w,c
  4426  002694  6E3A               	movwf	btemp,c
  4427  002696  D004               	goto	u8500
  4428  002698                     u8505:
  4429  002698  90D8               	bcf	status,0,c
  4430  00269A  3242               	rrcf	btemp+8,f,c
  4431  00269C  3241               	rrcf	btemp+7,f,c
  4432  00269E  3240               	rrcf	btemp+6,f,c
  4433  0026A0                     u8500:
  4434  0026A0  2E3A               	decfsz	btemp,f,c
  4435  0026A2  D7FA               	goto	u8505
  4436  0026A4  5040               	movf	btemp+6,w,c
  4437  0026A6  6E45               	movwf	btemp+11,c
  4438                           
  4439                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4440  0026A8  0EFD               	movlw	-3
  4441  0026AA  C045  FFE3         	movff	btemp+11,plusw1
  4442  0026AE  0EFD               	movlw	-3
  4443  0026B0  50E3               	movf	plusw1,w,c
  4444  0026B2  A4D8               	btfss	status,2,c
  4445  0026B4  D007               	goto	l7163
  4446  0026B6                     l7159:
  4447  0026B6  0E00               	movlw	0
  4448  0026B8  6E3A               	movwf	btemp,c
  4449  0026BA  0E00               	movlw	0
  4450  0026BC  6E3B               	movwf	btemp+1,c
  4451  0026BE  0E00               	movlw	0
  4452  0026C0  6E3C               	movwf	btemp+2,c
  4453  0026C2  D096               	goto	l1039
  4454  0026C4                     l7163:
  4455                           
  4456                           ;stkvar	___ftdiv@f3 @ sp[(-6)+0]
  4457  0026C4  0EFA               	movlw	-6
  4458  0026C6  6AE3               	clrf	plusw1,c
  4459  0026C8  0EFB               	movlw	-5
  4460  0026CA  6AE3               	clrf	plusw1,c
  4461  0026CC  0EFC               	movlw	-4
  4462  0026CE  6AE3               	clrf	plusw1,c
  4463  0026D0  0E89               	movlw	137
  4464  0026D2  6E45               	movwf	btemp+11,c
  4465                           
  4466                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4467  0026D4  0EFD               	movlw	-3
  4468  0026D6  50E3               	movf	plusw1,w,c
  4469  0026D8  2445               	addwf	btemp+11,w,c
  4470  0026DA  6E44               	movwf	btemp+10,c
  4471                           
  4472                           ;stkvar	___ftdiv@exp @ sp[(-6)+4]
  4473  0026DC  50E1               	movf	fsr1l,w,c
  4474  0026DE  0FFE               	addlw	-2
  4475  0026E0  6ED9               	movwf	fsr2l,c
  4476  0026E2  50E2               	movf	fsr1h,w,c
  4477  0026E4  6EDA               	movwf	fsr2h,c
  4478  0026E6  0EFF               	movlw	255
  4479  0026E8  22DA               	addwfc	fsr2h,f,c
  4480  0026EA  5044               	movf	btemp+10,w,c
  4481  0026EC  5EDF               	subwf	indf2,f,c
  4482                           
  4483                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4484  0026EE  0EF9               	movlw	249
  4485  0026F0  24E1               	addwf	fsr1l,w,c
  4486  0026F2  6ED9               	movwf	fsr2l,c
  4487  0026F4  0EFF               	movlw	255
  4488  0026F6  20E2               	addwfc	fsr1h,w,c
  4489  0026F8  6EDA               	movwf	fsr2h,c
  4490  0026FA  50DF               	movf	indf2,w,c
  4491  0026FC  6E45               	movwf	btemp+11,c
  4492                           
  4493                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4494  0026FE  0EFD               	movlw	-3
  4495  002700  C045  FFE3         	movff	btemp+11,plusw1
  4496                           
  4497                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4498  002704  0EF6               	movlw	246
  4499  002706  24E1               	addwf	fsr1l,w,c
  4500  002708  6ED9               	movwf	fsr2l,c
  4501  00270A  0EFF               	movlw	255
  4502  00270C  20E2               	addwfc	fsr1h,w,c
  4503  00270E  6EDA               	movwf	fsr2h,c
  4504  002710  50DF               	movf	indf2,w,c
  4505  002712  6E45               	movwf	btemp+11,c
  4506                           
  4507                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4508  002714  50E1               	movf	fsr1l,w,c
  4509  002716  0FFD               	addlw	-3
  4510  002718  6ED9               	movwf	fsr2l,c
  4511  00271A  50E2               	movf	fsr1h,w,c
  4512  00271C  6EDA               	movwf	fsr2h,c
  4513  00271E  0EFF               	movlw	255
  4514  002720  22DA               	addwfc	fsr2h,f,c
  4515  002722  5045               	movf	btemp+11,w,c
  4516  002724  1ADF               	xorwf	indf2,f,c
  4517                           
  4518                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4519  002726  0EFD               	movlw	-3
  4520  002728  CFE3 F03A          	movff	plusw1,btemp
  4521  00272C  0E80               	movlw	128
  4522  00272E  163A               	andwf	btemp,f,c
  4523  002730  0EFD               	movlw	-3
  4524  002732  C03A  FFE3         	movff	btemp,plusw1
  4525                           
  4526                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4527  002736  0EF8               	movlw	-8
  4528  002738  8EE3               	bsf	plusw1,7,c
  4529                           
  4530                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4531  00273A  0EF9               	movlw	-7
  4532  00273C  6AE3               	clrf	plusw1,c
  4533                           
  4534                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4535  00273E  0EF5               	movlw	-11
  4536  002740  8EE3               	bsf	plusw1,7,c
  4537                           
  4538                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4539  002742  0EF6               	movlw	-10
  4540  002744  6AE3               	clrf	plusw1,c
  4541                           
  4542                           ;stkvar	___ftdiv@cntr @ sp[(-6)+5]
  4543  002746  0EFF               	movlw	-1
  4544  002748  6AE3               	clrf	plusw1,c
  4545  00274A  86E3               	bsf	plusw1,3,c
  4546  00274C  88E3               	bsf	plusw1,4,c	;indir
  4547  00274E                     l7183:
  4548                           
  4549                           ;stkvar	___ftdiv@f3 @ sp[(-6)+0]
  4550  00274E  90D8               	bcf	status,0,c
  4551  002750  0EFA               	movlw	-6
  4552  002752  36E3               	rlcf	plusw1,f,c
  4553  002754  0EFB               	movlw	-5
  4554  002756  36E3               	rlcf	plusw1,f,c
  4555  002758  0EFC               	movlw	-4
  4556  00275A  36E3               	rlcf	plusw1,f,c
  4557                           
  4558                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4559                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4560  00275C  50E1               	movf	fsr1l,w,c
  4561  00275E  0FF7               	addlw	-9
  4562  002760  6ED9               	movwf	fsr2l,c
  4563  002762  50E2               	movf	fsr1h,w,c
  4564  002764  6EDA               	movwf	fsr2h,c
  4565  002766  0EFF               	movlw	255
  4566  002768  22DA               	addwfc	fsr2h,f,c
  4567  00276A  0EF4               	movlw	-12
  4568  00276C  50E3               	movf	plusw1,w,c
  4569  00276E  5CDE               	subwf	postinc2,w,c
  4570  002770  0EF5               	movlw	-11
  4571  002772  50E3               	movf	plusw1,w,c
  4572  002774  58DE               	subwfb	postinc2,w,c
  4573  002776  0EF6               	movlw	-10
  4574  002778  50E3               	movf	plusw1,w,c
  4575  00277A  58DE               	subwfb	postinc2,w,c
  4576  00277C  A0D8               	btfss	status,0,c
  4577  00277E  D018               	goto	l7191
  4578                           
  4579                           ;stkvar	___ftdiv@f2 @ sp[(-6)+-6]
  4580  002780  0EF4               	movlw	-12
  4581  002782  CFE3 F043          	movff	plusw1,btemp+9
  4582  002786  0EF5               	movlw	-11
  4583  002788  CFE3 F044          	movff	plusw1,btemp+10
  4584  00278C  0EF6               	movlw	-10
  4585  00278E  CFE3 F045          	movff	plusw1,btemp+11
  4586                           
  4587                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4588  002792  50E1               	movf	fsr1l,w,c
  4589  002794  0FF7               	addlw	-9
  4590  002796  6ED9               	movwf	fsr2l,c
  4591  002798  50E2               	movf	fsr1h,w,c
  4592  00279A  6EDA               	movwf	fsr2h,c
  4593  00279C  0EFF               	movlw	255
  4594  00279E  22DA               	addwfc	fsr2h,f,c
  4595  0027A0  5043               	movf	btemp+9,w,c
  4596  0027A2  5EDE               	subwf	postinc2,f,c
  4597  0027A4  5044               	movf	btemp+10,w,c
  4598  0027A6  5ADE               	subwfb	postinc2,f,c
  4599  0027A8  5045               	movf	btemp+11,w,c
  4600  0027AA  5ADE               	subwfb	postinc2,f,c
  4601                           
  4602                           ;stkvar	___ftdiv@f3 @ sp[(-6)+0]
  4603  0027AC  0EFA               	movlw	-6
  4604  0027AE  80E3               	bsf	plusw1,0,c
  4605  0027B0                     l7191:
  4606                           
  4607                           ;stkvar	___ftdiv@f1 @ sp[(-6)+-3]
  4608  0027B0  90D8               	bcf	status,0,c
  4609  0027B2  0EF7               	movlw	-9
  4610  0027B4  36E3               	rlcf	plusw1,f,c
  4611  0027B6  0EF8               	movlw	-8
  4612  0027B8  36E3               	rlcf	plusw1,f,c
  4613  0027BA  0EF9               	movlw	-7
  4614  0027BC  36E3               	rlcf	plusw1,f,c
  4615                           
  4616                           ;stkvar	___ftdiv@cntr @ sp[(-6)+5]
  4617  0027BE  0EFF               	movlw	-1
  4618  0027C0  50E3               	movf	plusw1,w,c
  4619  0027C2  6E3A               	movwf	btemp,c
  4620  0027C4  0E01               	movlw	1
  4621  0027C6  5E3A               	subwf	btemp,f,c
  4622  0027C8  0EFF               	movlw	-1
  4623  0027CA  C03A  FFE3         	movff	btemp,plusw1
  4624  0027CE  A4D8               	btfss	status,2,c
  4625  0027D0  D7BE               	goto	l7183
  4626                           
  4627                           ;stkvar	___ftdiv@sign @ sp[(-6)+3]
  4628  0027D2  0EFD               	movlw	-3
  4629  0027D4  50E3               	movf	plusw1,w,c
  4630  0027D6  6EE6               	movwf	postinc1,c
  4631                           
  4632                           ;stkvar	___ftdiv@exp @ sp[(-7)+4]
  4633  0027D8  0EFD               	movlw	-3
  4634  0027DA  50E3               	movf	plusw1,w,c
  4635  0027DC  6EE6               	movwf	postinc1,c
  4636                           
  4637                           ;stkvar	___ftdiv@f3 @ sp[(-8)+0]
  4638  0027DE  0EF8               	movlw	-8
  4639  0027E0  CFE3 FFE6          	movff	plusw1,postinc1
  4640  0027E4  CFE3 FFE6          	movff	plusw1,postinc1
  4641  0027E8  CFE3 FFE6          	movff	plusw1,postinc1
  4642  0027EC  EC9F  F01A         	call	___ftpack	;wreg free
  4643  0027F0                     l1039:
  4644                           
  4645                           ; ___ftdiv: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  4646  0027F0  0EF4               	movlw	244
  4647  0027F2  26E1               	addwf	fsr1l,f,c
  4648  0027F4  0EFF               	movlw	255
  4649  0027F6  22E2               	addwfc	fsr1h,f,c
  4650  0027F8  0012               	return		;funcret
  4651  0027FA                     __end_of___ftdiv:
  4652                           	opt stack 0
  4653                           tblptru	equ	0xFF8
  4654                           tblptrh	equ	0xFF7
  4655                           tblptrl	equ	0xFF6
  4656                           tablat	equ	0xFF5
  4657                           intcon	equ	0xFF2
  4658                           intcon2	equ	0xFF1
  4659                           postinc0	equ	0xFEE
  4660                           wreg	equ	0xFE8
  4661                           postinc1	equ	0xFE6
  4662                           postdec1	equ	0xFE5
  4663                           plusw1	equ	0xFE3
  4664                           fsr1h	equ	0xFE2
  4665                           fsr1l	equ	0xFE1
  4666                           indf2	equ	0xFDF
  4667                           postinc2	equ	0xFDE
  4668                           postdec2	equ	0xFDD
  4669                           fsr2h	equ	0xFDA
  4670                           fsr2l	equ	0xFD9
  4671                           status	equ	0xFD8
  4672                           
  4673 ;; *************** function _verifyPassword *****************
  4674 ;; Defined at:
  4675 ;;		line 277 in file "FinalProject.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  i               2   74[BANK0 ] int 
  4680 ;;  i               2    0        int 
  4681 ;;  i               2   76[BANK0 ] int 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4691 ;;      Params:         0       0       0       0       0       0       0
  4692 ;;      Locals:         0       8       0       0       0       0       0
  4693 ;;      Temps:          0       2       0       0       0       0       0
  4694 ;;      Totals:         0      10       0       0       0       0       0
  4695 ;;Total ram usage:       10 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:   15
  4698 ;; This function calls:
  4699 ;;		_atoi
  4700 ;;		_checkStatus
  4701 ;;		_existingUserLogin
  4702 ;;		_halfSecDelay
  4703 ;;		_mainScreen
  4704 ;;		_my_print
  4705 ;;		_read_EEPROM
  4706 ;; This function is called by:
  4707 ;;		_existingUserLogin
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text7
  4712  003098                     __ptext7:
  4713                           	opt stack 0
  4714  003098                     _verifyPassword:
  4715                           	opt stack 13
  4716                           
  4717                           ;FinalProject.c: 279: correctPassword = 1;
  4718                           
  4719                           ;incstack = 0
  4720  003098  0E00               	movlw	0
  4721  00309A  0100               	movlb	0	; () banked
  4722  00309C  6FED               	movwf	(_correctPassword+1)& (0+255),b
  4723  00309E  0E01               	movlw	1
  4724  0030A0  6FEC               	movwf	_correctPassword& (0+255),b
  4725                           
  4726                           ;FinalProject.c: 280: int i;
  4727                           ;FinalProject.c: 281: for(i = 0, addr = 0x00; i < 4;addr++,i++)
  4728  0030A2  0E00               	movlw	0
  4729  0030A4  0100               	movlb	0	; () banked
  4730  0030A6  6FCD               	movwf	(verifyPassword@i+1)& (0+255),b
  4731  0030A8  0E00               	movlw	0
  4732  0030AA  6FCC               	movwf	verifyPassword@i& (0+255),b
  4733  0030AC  0E00               	movlw	0
  4734  0030AE  0100               	movlb	0	; () banked
  4735  0030B0  6FDA               	movwf	(_addr+1)& (0+255),b
  4736  0030B2  0E00               	movlw	0
  4737  0030B4  6FD9               	movwf	_addr& (0+255),b
  4738  0030B6                     l6925:
  4739                           
  4740                           ; BSR set to: 0
  4741  0030B6  0100               	movlb	0	; () banked
  4742  0030B8  BFCD               	btfsc	(verifyPassword@i+1)& (0+255),7,b
  4743  0030BA  D008               	goto	l6929
  4744  0030BC  0100               	movlb	0	; () banked
  4745  0030BE  51CD               	movf	(verifyPassword@i+1)& (0+255),w,b
  4746  0030C0  E135               	bnz	l6943
  4747  0030C2  0E04               	movlw	4
  4748  0030C4  0100               	movlb	0	; () banked
  4749  0030C6  5DCC               	subwf	verifyPassword@i& (0+255),w,b
  4750  0030C8  B0D8               	btfsc	status,0,c
  4751  0030CA  D030               	goto	l6943
  4752  0030CC                     l6929:
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;FinalProject.c: 282: {
  4756                           ;FinalProject.c: 283: pass[i] = read_EEPROM(addr);
  4757  0030CC  0ECE               	movlw	low _pass
  4758  0030CE  0100               	movlb	0	; () banked
  4759  0030D0  25CC               	addwf	verifyPassword@i& (0+255),w,b
  4760  0030D2  6ED9               	movwf	fsr2l,c
  4761  0030D4  0E00               	movlw	high _pass
  4762  0030D6  0100               	movlb	0	; () banked
  4763  0030D8  21CD               	addwfc	(verifyPassword@i+1)& (0+255),w,b
  4764  0030DA  6EDA               	movwf	fsr2h,c
  4765  0030DC  C0D9  FFE6         	movff	_addr,postinc1
  4766  0030E0  C0DA  FFE6         	movff	_addr+1,postinc1
  4767  0030E4  ECE8  F020         	call	_read_EEPROM	;wreg free
  4768  0030E8  503A               	movf	btemp,w,c
  4769  0030EA  6EDF               	movwf	indf2,c
  4770                           
  4771                           ;FinalProject.c: 285: if(pass[i] == tempPass[i])
  4772  0030EC  0ED2               	movlw	low _tempPass
  4773  0030EE  0100               	movlb	0	; () banked
  4774  0030F0  25CC               	addwf	verifyPassword@i& (0+255),w,b
  4775  0030F2  6ED9               	movwf	fsr2l,c
  4776  0030F4  0E00               	movlw	high _tempPass
  4777  0030F6  0100               	movlb	0	; () banked
  4778  0030F8  21CD               	addwfc	(verifyPassword@i+1)& (0+255),w,b
  4779  0030FA  6EDA               	movwf	fsr2h,c
  4780  0030FC  0ECE               	movlw	low _pass
  4781  0030FE  0100               	movlb	0	; () banked
  4782  003100  25CC               	addwf	verifyPassword@i& (0+255),w,b
  4783  003102  6EE9               	movwf	fsr0l,c
  4784  003104  0E00               	movlw	high _pass
  4785  003106  0100               	movlb	0	; () banked
  4786  003108  21CD               	addwfc	(verifyPassword@i+1)& (0+255),w,b
  4787  00310A  6EEA               	movwf	fsr0h,c
  4788  00310C  50DE               	movf	postinc2,w,c
  4789  00310E  18EE               	xorwf	postinc0,w,c
  4790  003110  B4D8               	btfsc	status,2,c
  4791  003112  D005               	goto	l6937
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;FinalProject.c: 289: else
  4795                           ;FinalProject.c: 290: {
  4796                           ;FinalProject.c: 291: correctPassword = 0;
  4797                           
  4798                           ; BSR set to: 0
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;FinalProject.c: 286: {
  4802                           ;FinalProject.c: 288: }
  4803  003114  0E00               	movlw	0
  4804  003116  0100               	movlb	0	; () banked
  4805  003118  6FED               	movwf	(_correctPassword+1)& (0+255),b
  4806  00311A  0E00               	movlw	0
  4807  00311C  6FEC               	movwf	_correctPassword& (0+255),b
  4808  00311E                     l6937:
  4809                           
  4810                           ; BSR set to: 0
  4811  00311E  0100               	movlb	0	; () banked
  4812  003120  4BD9               	infsnz	_addr& (0+255),f,b
  4813  003122  2BDA               	incf	(_addr+1)& (0+255),f,b
  4814                           
  4815                           ; BSR set to: 0
  4816  003124  0100               	movlb	0	; () banked
  4817  003126  4BCC               	infsnz	verifyPassword@i& (0+255),f,b
  4818  003128  2BCD               	incf	(verifyPassword@i+1)& (0+255),f,b
  4819  00312A  D7C5               	goto	l6925
  4820  00312C                     l6943:
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;FinalProject.c: 293: }
  4824                           ;FinalProject.c: 294: }
  4825                           ;FinalProject.c: 296: if(correctPassword == 1)
  4826  00312C  0100               	movlb	0	; () banked
  4827  00312E  05EC               	decf	_correctPassword& (0+255),w,b
  4828  003130  0100               	movlb	0	; () banked
  4829  003132  11ED               	iorwf	(_correctPassword+1)& (0+255),w,b
  4830  003134  A4D8               	btfss	status,2,c
  4831  003136  D037               	goto	l6967
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;FinalProject.c: 297: {
  4835                           ;FinalProject.c: 298: int i;
  4836                           ;FinalProject.c: 299: for(int i = 0; i < 2; i++)
  4837  003138  0E00               	movlw	0
  4838  00313A  0100               	movlb	0	; () banked
  4839  00313C  6FCB               	movwf	(verifyPassword@i_1033+1)& (0+255),b
  4840  00313E  0E00               	movlw	0
  4841  003140  6FCA               	movwf	verifyPassword@i_1033& (0+255),b
  4842  003142                     l6947:
  4843                           
  4844                           ; BSR set to: 0
  4845  003142  0100               	movlb	0	; () banked
  4846  003144  BFCB               	btfsc	(verifyPassword@i_1033+1)& (0+255),7,b
  4847  003146  D008               	goto	l6951
  4848  003148  0100               	movlb	0	; () banked
  4849  00314A  51CB               	movf	(verifyPassword@i_1033+1)& (0+255),w,b
  4850  00314C  E11C               	bnz	l6959
  4851  00314E  0E02               	movlw	2
  4852  003150  0100               	movlb	0	; () banked
  4853  003152  5DCA               	subwf	verifyPassword@i_1033& (0+255),w,b
  4854  003154  B0D8               	btfsc	status,0,c
  4855  003156  D017               	goto	l6959
  4856  003158                     l6951:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;FinalProject.c: 300: {
  4860                           ;FinalProject.c: 301: thresholdArray[i] = read_EEPROM(thresholdAddr);
  4861  003158  0EE7               	movlw	low _thresholdArray
  4862  00315A  0100               	movlb	0	; () banked
  4863  00315C  25CA               	addwf	verifyPassword@i_1033& (0+255),w,b
  4864  00315E  6ED9               	movwf	fsr2l,c
  4865  003160  0E00               	movlw	high _thresholdArray
  4866  003162  0100               	movlb	0	; () banked
  4867  003164  21CB               	addwfc	(verifyPassword@i_1033+1)& (0+255),w,b
  4868  003166  6EDA               	movwf	fsr2h,c
  4869  003168  C0F4  FFE6         	movff	_thresholdAddr,postinc1
  4870  00316C  C0F5  FFE6         	movff	_thresholdAddr+1,postinc1
  4871  003170  ECE8  F020         	call	_read_EEPROM	;wreg free
  4872  003174  503A               	movf	btemp,w,c
  4873  003176  6EDF               	movwf	indf2,c
  4874                           
  4875                           ;FinalProject.c: 302: thresholdAddr++;
  4876  003178  0100               	movlb	0	; () banked
  4877  00317A  4BF4               	infsnz	_thresholdAddr& (0+255),f,b
  4878  00317C  2BF5               	incf	(_thresholdAddr+1)& (0+255),f,b
  4879                           
  4880                           ; BSR set to: 0
  4881  00317E  0100               	movlb	0	; () banked
  4882  003180  4BCA               	infsnz	verifyPassword@i_1033& (0+255),f,b
  4883  003182  2BCB               	incf	(verifyPassword@i_1033+1)& (0+255),f,b
  4884  003184  D7DE               	goto	l6947
  4885  003186                     l6959:
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;FinalProject.c: 303: }
  4889                           ;FinalProject.c: 304: tempThreshold = atoi(thresholdArray);
  4890  003186  0EE7               	movlw	low _thresholdArray
  4891  003188  6EE6               	movwf	postinc1,c
  4892  00318A  0E00               	movlw	high _thresholdArray
  4893  00318C  6EE6               	movwf	postinc1,c
  4894  00318E  ECAD  F017         	call	_atoi	;wreg free
  4895  003192  C03A  F0DD         	movff	btemp,_tempThreshold
  4896  003196  C03B  F0DE         	movff	btemp+1,_tempThreshold+1
  4897                           
  4898                           ;FinalProject.c: 306: checkStatus();
  4899  00319A  EC2B  F01B         	call	_checkStatus	;wreg free
  4900                           
  4901                           ;FinalProject.c: 308: PORTBbits.RB3 = 1;
  4902  00319E  8681               	bsf	3969,3,c	;volatile
  4903                           
  4904                           ;FinalProject.c: 309: mainScreen();
  4905  0031A0  ECDA  F009         	call	_mainScreen	;wreg free
  4906                           
  4907                           ;FinalProject.c: 311: }
  4908  0031A4  0012               	return	
  4909  0031A6                     l6967:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;FinalProject.c: 312: else if(correctPassword == 0)
  4913  0031A6  0100               	movlb	0	; () banked
  4914  0031A8  51EC               	movf	_correctPassword& (0+255),w,b
  4915  0031AA  0100               	movlb	0	; () banked
  4916  0031AC  11ED               	iorwf	(_correctPassword+1)& (0+255),w,b
  4917  0031AE  A4D8               	btfss	status,2,c
  4918  0031B0  0012               	return	
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;FinalProject.c: 313: {
  4922                           ;FinalProject.c: 314: my_print("\n\rIncorrect Password\n\r");
  4923  0031B2  0E62               	movlw	low STR_11
  4924  0031B4  6EE6               	movwf	postinc1,c
  4925  0031B6  0E7F               	movlw	high STR_11
  4926  0031B8  6EE6               	movwf	postinc1,c
  4927  0031BA  ECF8  F01E         	call	_my_print	;wreg free
  4928                           
  4929                           ;FinalProject.c: 315: halfSecDelay();
  4930  0031BE  ECA6  F01F         	call	_halfSecDelay	;wreg free
  4931                           
  4932                           ;FinalProject.c: 316: halfSecDelay();
  4933  0031C2  ECA6  F01F         	call	_halfSecDelay	;wreg free
  4934                           
  4935                           ;FinalProject.c: 317: existingUserLogin();
  4936  0031C6  EC6E  F01E         	call	_existingUserLogin	;wreg free
  4937  0031CA  0012               	return	
  4938  0031CC                     __end_of_verifyPassword:
  4939                           	opt stack 0
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           intcon	equ	0xFF2
  4945                           intcon2	equ	0xFF1
  4946                           postinc0	equ	0xFEE
  4947                           fsr0h	equ	0xFEA
  4948                           fsr0l	equ	0xFE9
  4949                           wreg	equ	0xFE8
  4950                           postinc1	equ	0xFE6
  4951                           postdec1	equ	0xFE5
  4952                           plusw1	equ	0xFE3
  4953                           fsr1h	equ	0xFE2
  4954                           fsr1l	equ	0xFE1
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           postdec2	equ	0xFDD
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _existingUserLogin *****************
  4963 ;; Defined at:
  4964 ;;		line 262 in file "FinalProject.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  i               2  [STACK] int 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1  [STACK] void 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4978 ;;      Params:         0       0       0       0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0       0       0
  4981 ;;      Totals:         0       0       0       0       0       0       0
  4982 ;;Total ram usage:        0 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:   16
  4985 ;; This function calls:
  4986 ;;		_my_print
  4987 ;;		_reception
  4988 ;;		_verifyPassword
  4989 ;; This function is called by:
  4990 ;;		_main
  4991 ;;		_setUpPassword
  4992 ;;		_verifyPassword
  4993 ;; This function uses a recursive model
  4994 ;;
  4995                           
  4996                           	psect	text8
  4997  003CDC                     __ptext8:
  4998                           	opt stack 0
  4999  003CDC                     _existingUserLogin:
  5000                           	opt stack 0
  5001                           
  5002                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  5003  003CDC  52E6               	movf	postinc1,f,c
  5004  003CDE  52E6               	movf	postinc1,f,c
  5005                           
  5006                           ;FinalProject.c: 264: int i;
  5007                           ;FinalProject.c: 265: my_print("\r\nEnter the password: ");
  5008                           
  5009                           ;incstack = 0
  5010  003CE0  0E79               	movlw	low STR_9
  5011  003CE2  6EE6               	movwf	postinc1,c
  5012  003CE4  0E7F               	movlw	high STR_9
  5013  003CE6  6EE6               	movwf	postinc1,c
  5014  003CE8  ECF8  F01E         	call	_my_print	;wreg free
  5015                           
  5016                           ;FinalProject.c: 266: for(i = 0; i < 4; i ++)
  5017                           ;stkvar	existingUserLogin@i @ sp[(-2)+0]
  5018  003CEC  0EFE               	movlw	-2
  5019  003CEE  6AE3               	clrf	plusw1,c
  5020  003CF0  0EFF               	movlw	-1
  5021  003CF2  6AE3               	clrf	plusw1,c
  5022  003CF4                     l6861:
  5023                           
  5024                           ;FinalProject.c: 267: {
  5025                           ;FinalProject.c: 268: tempPass[i] = reception();
  5026                           ;stkvar	existingUserLogin@i @ sp[(-2)+0]
  5027  003CF4  0EFE               	movlw	-2
  5028  003CF6  CFE3 F03B          	movff	plusw1,btemp+1
  5029  003CFA  0EFF               	movlw	-1
  5030  003CFC  CFE3 F03C          	movff	plusw1,btemp+2
  5031  003D00  0ED2               	movlw	low _tempPass
  5032  003D02  243B               	addwf	btemp+1,w,c
  5033  003D04  6ED9               	movwf	fsr2l,c
  5034  003D06  0E00               	movlw	high _tempPass
  5035  003D08  203C               	addwfc	btemp+2,w,c
  5036  003D0A  6EDA               	movwf	fsr2h,c
  5037  003D0C  ECF3  F020         	call	_reception	;wreg free
  5038  003D10  503A               	movf	btemp,w,c
  5039  003D12  6EDF               	movwf	indf2,c
  5040                           
  5041                           ;FinalProject.c: 269: my_print("*");
  5042  003D14  0E49               	movlw	low (STR_16+61)
  5043  003D16  6EE6               	movwf	postinc1,c
  5044  003D18  0E77               	movlw	high (STR_16+61)
  5045  003D1A  6EE6               	movwf	postinc1,c
  5046  003D1C  ECF8  F01E         	call	_my_print	;wreg free
  5047                           
  5048                           ;stkvar	existingUserLogin@i @ sp[(-2)+0]
  5049  003D20  0EFE               	movlw	-2
  5050  003D22  50E3               	movf	plusw1,w,c
  5051  003D24  0F01               	addlw	1
  5052  003D26  6E3A               	movwf	btemp,c
  5053  003D28  0EFE               	movlw	-2
  5054  003D2A  C03A  FFE3         	movff	btemp,plusw1
  5055  003D2E  6A3A               	clrf	btemp,c
  5056  003D30  0EFF               	movlw	-1
  5057  003D32  50E3               	movf	plusw1,w,c
  5058  003D34  203A               	addwfc	btemp,w,c
  5059  003D36  6E3A               	movwf	btemp,c
  5060  003D38  0EFF               	movlw	-1
  5061  003D3A  C03A  FFE3         	movff	btemp,plusw1
  5062                           
  5063                           ;stkvar	existingUserLogin@i @ sp[(-2)+0]
  5064  003D3E  0EFF               	movlw	-1
  5065  003D40  BEE3               	btfsc	plusw1,7,c
  5066  003D42  D7D8               	goto	l6861
  5067  003D44  0EFF               	movlw	-1
  5068  003D46  50E3               	movf	plusw1,w,c
  5069  003D48  E107               	bnz	u7950
  5070  003D4A  0EFE               	movlw	-2
  5071  003D4C  CFE3 F03A          	movff	plusw1,btemp
  5072  003D50  0E04               	movlw	4
  5073  003D52  5E3A               	subwf	btemp,f,c
  5074  003D54  A0D8               	btfss	status,0,c
  5075  003D56  D7CE               	goto	l6861
  5076  003D58                     u7950:
  5077  003D58                     l6869:
  5078  003D58  0E0D               	movlw	13
  5079  003D5A  18AE               	xorwf	4014,w,c	;volatile
  5080  003D5C  A4D8               	btfss	status,2,c
  5081  003D5E  D7FC               	goto	l6869
  5082                           
  5083                           ;FinalProject.c: 273: verifyPassword();
  5084  003D60  EC4C  F018         	call	_verifyPassword	;wreg free
  5085                           
  5086                           ; _existingUserLogin: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  5087  003D64  52E5               	movf	postdec1,f,c
  5088  003D66  52E5               	movf	postdec1,f,c
  5089  003D68  0012               	return		;funcret
  5090  003D6A                     __end_of_existingUserLogin:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           intcon	equ	0xFF2
  5097                           intcon2	equ	0xFF1
  5098                           postinc0	equ	0xFEE
  5099                           fsr0h	equ	0xFEA
  5100                           fsr0l	equ	0xFE9
  5101                           wreg	equ	0xFE8
  5102                           postinc1	equ	0xFE6
  5103                           postdec1	equ	0xFE5
  5104                           plusw1	equ	0xFE3
  5105                           fsr1h	equ	0xFE2
  5106                           fsr1l	equ	0xFE1
  5107                           indf2	equ	0xFDF
  5108                           postinc2	equ	0xFDE
  5109                           postdec2	equ	0xFDD
  5110                           fsr2h	equ	0xFDA
  5111                           fsr2l	equ	0xFD9
  5112                           status	equ	0xFD8
  5113                           
  5114 ;; *************** function _atoi *****************
  5115 ;; Defined at:
  5116 ;;		line 5 in file "/Applications/microchip/xc8/v1.38/sources/common/atoi.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  s               2  [STACK] PTR const unsigned char 
  5119 ;;		 -> thresholdArray(3), 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  a               2  [STACK] int 
  5122 ;;  sign            1  [STACK] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  2  [STACK] int 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl, prodh
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5132 ;;      Params:         0       0       0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0
  5135 ;;      Totals:         0       0       0       0       0       0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:   11
  5139 ;; This function calls:
  5140 ;;		___wmul
  5141 ;;		_isdigit
  5142 ;; This function is called by:
  5143 ;;		_verifyPassword
  5144 ;;		_My_ISR_Low_TempSensor
  5145 ;;		_updateThreshold
  5146 ;; This function uses a reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text9
  5150  002F5A                     __ptext9:
  5151                           	opt stack 0
  5152  002F5A                     _atoi:
  5153                           	opt stack 0
  5154                           
  5155                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  5156  002F5A  52E6               	movf	postinc1,f,c
  5157  002F5C  52E6               	movf	postinc1,f,c
  5158  002F5E  52E6               	movf	postinc1,f,c
  5159                           
  5160                           ;incstack = 0
  5161  002F60  D00F               	goto	l7033
  5162  002F62                     l7031:
  5163                           
  5164                           ;stkvar	atoi@s @ sp[(-3)+-2]
  5165  002F62  0EFB               	movlw	-5
  5166  002F64  50E3               	movf	plusw1,w,c
  5167  002F66  0F01               	addlw	1
  5168  002F68  6E3A               	movwf	btemp,c
  5169  002F6A  0EFB               	movlw	-5
  5170  002F6C  C03A  FFE3         	movff	btemp,plusw1
  5171  002F70  6A3A               	clrf	btemp,c
  5172  002F72  0EFC               	movlw	-4
  5173  002F74  50E3               	movf	plusw1,w,c
  5174  002F76  203A               	addwfc	btemp,w,c
  5175  002F78  6E3A               	movwf	btemp,c
  5176  002F7A  0EFC               	movlw	-4
  5177  002F7C  C03A  FFE3         	movff	btemp,plusw1
  5178  002F80                     l7033:
  5179                           
  5180                           ;stkvar	atoi@s @ sp[(-3)+-2]
  5181  002F80  0EFB               	movlw	-5
  5182  002F82  CFE3 FFD9          	movff	plusw1,fsr2l
  5183  002F86  0EFC               	movlw	-4
  5184  002F88  CFE3 FFDA          	movff	plusw1,fsr2h
  5185  002F8C  50DF               	movf	indf2,w,c
  5186  002F8E  0A20               	xorlw	32
  5187  002F90  B4D8               	btfsc	status,2,c
  5188  002F92  D7E7               	goto	l7031
  5189                           
  5190                           ;stkvar	atoi@s @ sp[(-3)+-2]
  5191  002F94  0EFB               	movlw	-5
  5192  002F96  CFE3 FFD9          	movff	plusw1,fsr2l
  5193  002F9A  0EFC               	movlw	-4
  5194  002F9C  CFE3 FFDA          	movff	plusw1,fsr2h
  5195  002FA0  50DF               	movf	indf2,w,c
  5196  002FA2  0A09               	xorlw	9
  5197  002FA4  B4D8               	btfsc	status,2,c
  5198  002FA6  D7DD               	goto	l7031
  5199                           
  5200                           ;stkvar	atoi@a @ sp[(-3)+0]
  5201  002FA8  0EFD               	movlw	-3
  5202  002FAA  6AE3               	clrf	plusw1,c
  5203  002FAC  0EFE               	movlw	-2
  5204  002FAE  6AE3               	clrf	plusw1,c
  5205                           
  5206                           ;stkvar	atoi@sign @ sp[(-3)+2]
  5207  002FB0  0EFF               	movlw	-1
  5208  002FB2  6AE3               	clrf	plusw1,c
  5209                           
  5210                           ;stkvar	atoi@s @ sp[(-3)+-2]
  5211  002FB4  0EFB               	movlw	-5
  5212  002FB6  CFE3 FFD9          	movff	plusw1,fsr2l
  5213  002FBA  0EFC               	movlw	-4
  5214  002FBC  CFE3 FFDA          	movff	plusw1,fsr2h
  5215  002FC0  50DF               	movf	indf2,w,c
  5216  002FC2  0A2D               	xorlw	45
  5217  002FC4  A4D8               	btfss	status,2,c
  5218  002FC6  D012               	goto	l7047
  5219                           
  5220                           ;stkvar	atoi@sign @ sp[(-3)+2]
  5221  002FC8  0EFF               	movlw	-1
  5222  002FCA  2AE3               	incf	plusw1,f,c
  5223  002FCC                     l7045:
  5224                           
  5225                           ;stkvar	atoi@s @ sp[(-3)+-2]
  5226  002FCC  0EFB               	movlw	-5
  5227  002FCE  50E3               	movf	plusw1,w,c
  5228  002FD0  0F01               	addlw	1
  5229  002FD2  6E3A               	movwf	btemp,c
  5230  002FD4  0EFB               	movlw	-5
  5231  002FD6  C03A  FFE3         	movff	btemp,plusw1
  5232  002FDA  6A3A               	clrf	btemp,c
  5233  002FDC  0EFC               	movlw	-4
  5234  002FDE  50E3               	movf	plusw1,w,c
  5235  002FE0  203A               	addwfc	btemp,w,c
  5236  002FE2  6E3A               	movwf	btemp,c
  5237  002FE4  0EFC               	movlw	-4
  5238  002FE6  C03A  FFE3         	movff	btemp,plusw1
  5239  002FEA  D02F               	goto	l7055
  5240  002FEC                     l7047:
  5241                           
  5242                           ;stkvar	atoi@s @ sp[(-3)+-2]
  5243  002FEC  0EFB               	movlw	-5
  5244  002FEE  CFE3 FFD9          	movff	plusw1,fsr2l
  5245  002FF2  0EFC               	movlw	-4
  5246  002FF4  CFE3 FFDA          	movff	plusw1,fsr2h
  5247  002FF8  50DF               	movf	indf2,w,c
  5248  002FFA  0A2B               	xorlw	43
  5249  002FFC  B4D8               	btfsc	status,2,c
  5250  002FFE  D7E6               	goto	l7045
  5251  003000  D024               	goto	l7055
  5252  003002                     l7051:
  5253  003002  0E0A               	movlw	10
  5254  003004  6EE6               	movwf	postinc1,c
  5255  003006  0E00               	movlw	0
  5256  003008  6EE6               	movwf	postinc1,c
  5257                           
  5258                           ;stkvar	atoi@a @ sp[(-5)+0]
  5259  00300A  0EFB               	movlw	-5
  5260  00300C  CFE3 FFE6          	movff	plusw1,postinc1
  5261  003010  CFE3 FFE6          	movff	plusw1,postinc1
  5262  003014  EC23  F01E         	call	___wmul	;wreg free
  5263                           
  5264                           ;stkvar	atoi@s @ sp[(-3)+-2]
  5265  003018  0EFB               	movlw	-5
  5266  00301A  CFE3 FFD9          	movff	plusw1,fsr2l
  5267  00301E  0EFC               	movlw	-4
  5268  003020  CFE3 FFDA          	movff	plusw1,fsr2h
  5269  003024  50DF               	movf	indf2,w,c
  5270  003026  263A               	addwf	btemp,f,c
  5271  003028  0E00               	movlw	0
  5272  00302A  223B               	addwfc	btemp+1,f,c
  5273  00302C  0ED0               	movlw	208
  5274  00302E  6E44               	movwf	btemp+10,c
  5275  003030  0EFF               	movlw	255
  5276  003032  6E45               	movwf	btemp+11,c
  5277  003034  5044               	movf	btemp+10,w,c
  5278  003036  263A               	addwf	btemp,f,c
  5279  003038  5045               	movf	btemp+11,w,c
  5280  00303A  223B               	addwfc	btemp+1,f,c
  5281                           
  5282                           ;stkvar	atoi@a @ sp[(-3)+0]
  5283  00303C  0EFD               	movlw	-3
  5284  00303E  C03A  FFE3         	movff	btemp,plusw1
  5285  003042  0EFE               	movlw	-2
  5286  003044  C03B  FFE3         	movff	btemp+1,plusw1
  5287  003048  D7C1               	goto	l7045
  5288  00304A                     l7055:
  5289                           
  5290                           ;stkvar	atoi@s @ sp[(-3)+-2]
  5291  00304A  0EFB               	movlw	-5
  5292  00304C  CFE3 FFD9          	movff	plusw1,fsr2l
  5293  003050  0EFC               	movlw	-4
  5294  003052  CFE3 FFDA          	movff	plusw1,fsr2h
  5295  003056  50DF               	movf	indf2,w,c
  5296  003058  6EE6               	movwf	postinc1,c
  5297  00305A  EC49  F020         	call	_isdigit	;wreg free
  5298  00305E  B03A               	btfsc	btemp,0,c
  5299  003060  D7D0               	goto	l7051
  5300                           
  5301                           ;stkvar	atoi@sign @ sp[(-3)+2]
  5302  003062  0EFF               	movlw	-1
  5303  003064  50E3               	movf	plusw1,w,c
  5304  003066  B4D8               	btfsc	status,2,c
  5305  003068  D00C               	goto	l7063
  5306                           
  5307                           ;stkvar	atoi@a @ sp[(-3)+0]
  5308  00306A  0EFD               	movlw	-3
  5309  00306C  CFE3 F03A          	movff	plusw1,btemp
  5310  003070  1E3A               	comf	btemp,f,c
  5311  003072  0EFE               	movlw	-2
  5312  003074  CFE3 F03B          	movff	plusw1,btemp+1
  5313  003078  1E3B               	comf	btemp+1,f,c
  5314  00307A  2A3A               	incf	btemp,f,c
  5315  00307C  B4D8               	btfsc	status,2,c
  5316  00307E  2A3B               	incf	btemp+1,f,c
  5317  003080  D006               	goto	l901
  5318  003082                     l7063:
  5319                           
  5320                           ;stkvar	atoi@a @ sp[(-3)+0]
  5321  003082  0EFD               	movlw	-3
  5322  003084  CFE3 F03A          	movff	plusw1,btemp
  5323  003088  0EFE               	movlw	-2
  5324  00308A  CFE3 F03B          	movff	plusw1,btemp+1
  5325  00308E                     l901:
  5326                           
  5327                           ; _atoi: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5328  00308E  0EFB               	movlw	251
  5329  003090  26E1               	addwf	fsr1l,f,c
  5330  003092  0EFF               	movlw	255
  5331  003094  22E2               	addwfc	fsr1h,f,c
  5332  003096  0012               	return		;funcret
  5333  003098                     __end_of_atoi:
  5334                           	opt stack 0
  5335                           tblptru	equ	0xFF8
  5336                           tblptrh	equ	0xFF7
  5337                           tblptrl	equ	0xFF6
  5338                           tablat	equ	0xFF5
  5339                           intcon	equ	0xFF2
  5340                           intcon2	equ	0xFF1
  5341                           postinc0	equ	0xFEE
  5342                           fsr0h	equ	0xFEA
  5343                           fsr0l	equ	0xFE9
  5344                           wreg	equ	0xFE8
  5345                           postinc1	equ	0xFE6
  5346                           postdec1	equ	0xFE5
  5347                           plusw1	equ	0xFE3
  5348                           fsr1h	equ	0xFE2
  5349                           fsr1l	equ	0xFE1
  5350                           indf2	equ	0xFDF
  5351                           postinc2	equ	0xFDE
  5352                           postdec2	equ	0xFDD
  5353                           fsr2h	equ	0xFDA
  5354                           fsr2l	equ	0xFD9
  5355                           status	equ	0xFD8
  5356                           
  5357 ;; *************** function _checkStatus *****************
  5358 ;; Defined at:
  5359 ;;		line 1389 in file "FinalProject.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5373 ;;      Params:         0       0       0       0       0       0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0
  5376 ;;      Totals:         0       0       0       0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:   11
  5380 ;; This function calls:
  5381 ;;		_initialize_PIR
  5382 ;;		_initialize_tempSensor
  5383 ;;		_read_EEPROM
  5384 ;; This function is called by:
  5385 ;;		_verifyPassword
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text10
  5390  003656                     __ptext10:
  5391                           	opt stack 0
  5392  003656                     _checkStatus:
  5393                           	opt stack 16
  5394                           
  5395                           ;FinalProject.c: 1393: if(read_EEPROM(PIRStatusAddr) !=(char)255)
  5396                           
  5397                           ;incstack = 0
  5398  003656  C0EA  FFE6         	movff	_PIRStatusAddr,postinc1
  5399  00365A  C0EB  FFE6         	movff	_PIRStatusAddr+1,postinc1
  5400  00365E  ECE8  F020         	call	_read_EEPROM	;wreg free
  5401  003662  283A               	incf	btemp,w,c
  5402  003664  B4D8               	btfsc	status,2,c
  5403  003666  D025               	goto	l6889
  5404                           
  5405                           ;FinalProject.c: 1394: {
  5406                           ;FinalProject.c: 1396: if (read_EEPROM(PIRStatusAddr) == 'E')
  5407  003668  C0EA  FFE6         	movff	_PIRStatusAddr,postinc1
  5408  00366C  C0EB  FFE6         	movff	_PIRStatusAddr+1,postinc1
  5409  003670  ECE8  F020         	call	_read_EEPROM	;wreg free
  5410  003674  0E45               	movlw	69
  5411  003676  183A               	xorwf	btemp,w,c
  5412  003678  A4D8               	btfss	status,2,c
  5413  00367A  D00A               	goto	l6883
  5414                           
  5415                           ;FinalProject.c: 1397: {
  5416                           ;FinalProject.c: 1398: statusOfPir = "ACTIVE";
  5417  00367C  0EE2               	movlw	low (STR_1+2)
  5418  00367E  0100               	movlb	0	; () banked
  5419  003680  6FF0               	movwf	_statusOfPir& (0+255),b
  5420  003682  0E7F               	movlw	high (STR_1+2)
  5421  003684  0100               	movlb	0	; () banked
  5422  003686  6FF1               	movwf	(_statusOfPir+1)& (0+255),b
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;FinalProject.c: 1399: initialize_PIR();
  5426  003688  ECFE  F020         	call	_initialize_PIR	;wreg free
  5427                           
  5428                           ;FinalProject.c: 1400: INTCONbits.INT0IE = 1;
  5429  00368C  88F2               	bsf	intcon,4,c	;volatile
  5430                           
  5431                           ;FinalProject.c: 1402: }
  5432  00368E  D011               	goto	l6889
  5433  003690                     l6883:
  5434                           
  5435                           ;FinalProject.c: 1403: else if(read_EEPROM(PIRStatusAddr) == 'D')
  5436  003690  C0EA  FFE6         	movff	_PIRStatusAddr,postinc1
  5437  003694  C0EB  FFE6         	movff	_PIRStatusAddr+1,postinc1
  5438  003698  ECE8  F020         	call	_read_EEPROM	;wreg free
  5439  00369C  0E44               	movlw	68
  5440  00369E  183A               	xorwf	btemp,w,c
  5441  0036A0  A4D8               	btfss	status,2,c
  5442  0036A2  D007               	goto	l6889
  5443                           
  5444                           ;FinalProject.c: 1404: {
  5445                           ;FinalProject.c: 1405: INTCONbits.INT0IE = 0;
  5446  0036A4  98F2               	bcf	intcon,4,c	;volatile
  5447                           
  5448                           ;FinalProject.c: 1406: statusOfPir = "INACTIVE";
  5449  0036A6  0EE0               	movlw	low STR_1
  5450  0036A8  0100               	movlb	0	; () banked
  5451  0036AA  6FF0               	movwf	_statusOfPir& (0+255),b
  5452  0036AC  0E7F               	movlw	high STR_1
  5453  0036AE  0100               	movlb	0	; () banked
  5454  0036B0  6FF1               	movwf	(_statusOfPir+1)& (0+255),b
  5455  0036B2                     l6889:
  5456                           
  5457                           ;FinalProject.c: 1407: }
  5458                           ;FinalProject.c: 1408: }
  5459                           ;FinalProject.c: 1410: if(read_EEPROM(tempStatusAddr) !=(char)255)
  5460  0036B2  C050  FFE6         	movff	_tempStatusAddr,postinc1
  5461  0036B6  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
  5462  0036BA  ECE8  F020         	call	_read_EEPROM	;wreg free
  5463  0036BE  283A               	incf	btemp,w,c
  5464  0036C0  B4D8               	btfsc	status,2,c
  5465  0036C2  D027               	goto	l6909
  5466                           
  5467                           ;FinalProject.c: 1411: {
  5468                           ;FinalProject.c: 1412: if (read_EEPROM(tempStatusAddr) == 'E')
  5469  0036C4  C050  FFE6         	movff	_tempStatusAddr,postinc1
  5470  0036C8  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
  5471  0036CC  ECE8  F020         	call	_read_EEPROM	;wreg free
  5472  0036D0  0E45               	movlw	69
  5473  0036D2  183A               	xorwf	btemp,w,c
  5474  0036D4  A4D8               	btfss	status,2,c
  5475  0036D6  D00A               	goto	l6899
  5476                           
  5477                           ;FinalProject.c: 1413: {
  5478                           ;FinalProject.c: 1414: statusOfTemp = "ACTIVE";
  5479  0036D8  0EE2               	movlw	low (STR_1+2)
  5480  0036DA  0100               	movlb	0	; () banked
  5481  0036DC  6FF2               	movwf	_statusOfTemp& (0+255),b
  5482  0036DE  0E7F               	movlw	high (STR_1+2)
  5483  0036E0  0100               	movlb	0	; () banked
  5484  0036E2  6FF3               	movwf	(_statusOfTemp+1)& (0+255),b
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;FinalProject.c: 1415: initialize_tempSensor();
  5488  0036E4  EC14  F021         	call	_initialize_tempSensor	;wreg free
  5489                           
  5490                           ;FinalProject.c: 1416: T0CONbits.TMR0ON = 1;
  5491  0036E8  8ED5               	bsf	4053,7,c	;volatile
  5492                           
  5493                           ;FinalProject.c: 1417: }
  5494  0036EA  D013               	goto	l6909
  5495  0036EC                     l6899:
  5496                           
  5497                           ;FinalProject.c: 1418: else if(read_EEPROM(tempStatusAddr) == 'D')
  5498  0036EC  C050  FFE6         	movff	_tempStatusAddr,postinc1
  5499  0036F0  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
  5500  0036F4  ECE8  F020         	call	_read_EEPROM	;wreg free
  5501  0036F8  0E44               	movlw	68
  5502  0036FA  183A               	xorwf	btemp,w,c
  5503  0036FC  A4D8               	btfss	status,2,c
  5504  0036FE  D009               	goto	l6909
  5505                           
  5506                           ;FinalProject.c: 1419: {
  5507                           ;FinalProject.c: 1420: statusOfTemp = "INACTIVE";
  5508  003700  0EE0               	movlw	low STR_1
  5509  003702  0100               	movlb	0	; () banked
  5510  003704  6FF2               	movwf	_statusOfTemp& (0+255),b
  5511  003706  0E7F               	movlw	high STR_1
  5512  003708  0100               	movlb	0	; () banked
  5513  00370A  6FF3               	movwf	(_statusOfTemp+1)& (0+255),b
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;FinalProject.c: 1421: T0CONbits.TMR0ON = 0;
  5517  00370C  9ED5               	bcf	4053,7,c	;volatile
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;FinalProject.c: 1422: PIE1bits.ADIE = 0;
  5521  00370E  9C9D               	bcf	3997,6,c	;volatile
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;FinalProject.c: 1423: PORTBbits.RB5 =0;
  5525  003710  9A81               	bcf	3969,5,c	;volatile
  5526  003712                     l6909:
  5527                           
  5528                           ;FinalProject.c: 1424: }
  5529                           ;FinalProject.c: 1425: }
  5530                           ;FinalProject.c: 1427: if(read_EEPROM(inputTypeAddr) !=(char)255)
  5531  003712  C04E  FFE6         	movff	_inputTypeAddr,postinc1
  5532  003716  C04F  FFE6         	movff	_inputTypeAddr+1,postinc1
  5533  00371A  ECE8  F020         	call	_read_EEPROM	;wreg free
  5534  00371E  283A               	incf	btemp,w,c
  5535  003720  B4D8               	btfsc	status,2,c
  5536  003722  0012               	return	
  5537                           
  5538                           ;FinalProject.c: 1428: {
  5539                           ;FinalProject.c: 1429: if (read_EEPROM(inputTypeAddr) == 'B')
  5540  003724  C04E  FFE6         	movff	_inputTypeAddr,postinc1
  5541  003728  C04F  FFE6         	movff	_inputTypeAddr+1,postinc1
  5542  00372C  ECE8  F020         	call	_read_EEPROM	;wreg free
  5543  003730  0E42               	movlw	66
  5544  003732  183A               	xorwf	btemp,w,c
  5545  003734  A4D8               	btfss	status,2,c
  5546  003736  D008               	goto	l6917
  5547                           
  5548                           ;FinalProject.c: 1430: {
  5549                           ;FinalProject.c: 1431: inputMethod = "KEYPAD";
  5550  003738  0EE9               	movlw	low STR_79
  5551  00373A  0100               	movlb	0	; () banked
  5552  00373C  6FEE               	movwf	_inputMethod& (0+255),b
  5553  00373E  0E7F               	movlw	high STR_79
  5554  003740  0100               	movlb	0	; () banked
  5555  003742  6FEF               	movwf	(_inputMethod+1)& (0+255),b
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;FinalProject.c: 1432: PORTBbits.RB4=1;
  5559  003744  8881               	bsf	3969,4,c	;volatile
  5560                           
  5561                           ;FinalProject.c: 1433: }
  5562  003746  0012               	return	
  5563  003748                     l6917:
  5564                           
  5565                           ;FinalProject.c: 1434: else if (read_EEPROM(inputTypeAddr) == 'K')
  5566  003748  C04E  FFE6         	movff	_inputTypeAddr,postinc1
  5567  00374C  C04F  FFE6         	movff	_inputTypeAddr+1,postinc1
  5568  003750  ECE8  F020         	call	_read_EEPROM	;wreg free
  5569  003754  0E4B               	movlw	75
  5570  003756  183A               	xorwf	btemp,w,c
  5571  003758  A4D8               	btfss	status,2,c
  5572  00375A  0012               	return	
  5573                           
  5574                           ;FinalProject.c: 1435: {
  5575                           ;FinalProject.c: 1436: inputMethod = "KEYBOARD";
  5576  00375C  0ED7               	movlw	low STR_3
  5577  00375E  0100               	movlb	0	; () banked
  5578  003760  6FEE               	movwf	_inputMethod& (0+255),b
  5579  003762  0E7F               	movlw	high STR_3
  5580  003764  0100               	movlb	0	; () banked
  5581  003766  6FEF               	movwf	(_inputMethod+1)& (0+255),b
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;FinalProject.c: 1437: PORTBbits.RB4=0;
  5585  003768  9881               	bcf	3969,4,c	;volatile
  5586                           
  5587                           ; BSR set to: 0
  5588                           
  5589                           ; BSR set to: 0
  5590  00376A  0012               	return	
  5591  00376C                     __end_of_checkStatus:
  5592                           	opt stack 0
  5593                           tblptru	equ	0xFF8
  5594                           tblptrh	equ	0xFF7
  5595                           tblptrl	equ	0xFF6
  5596                           tablat	equ	0xFF5
  5597                           intcon	equ	0xFF2
  5598                           intcon2	equ	0xFF1
  5599                           postinc0	equ	0xFEE
  5600                           fsr0h	equ	0xFEA
  5601                           fsr0l	equ	0xFE9
  5602                           wreg	equ	0xFE8
  5603                           postinc1	equ	0xFE6
  5604                           postdec1	equ	0xFE5
  5605                           plusw1	equ	0xFE3
  5606                           fsr1h	equ	0xFE2
  5607                           fsr1l	equ	0xFE1
  5608                           indf2	equ	0xFDF
  5609                           postinc2	equ	0xFDE
  5610                           postdec2	equ	0xFDD
  5611                           fsr2h	equ	0xFDA
  5612                           fsr2l	equ	0xFD9
  5613                           status	equ	0xFD8
  5614                           
  5615 ;; *************** function _isdigit *****************
  5616 ;; Defined at:
  5617 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/isdigit.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  c               1  [STACK] unsigned char 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;		None               void
  5624 ;; Registers used:
  5625 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+11
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5631 ;;      Params:         0       0       0       0       0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0
  5634 ;;      Totals:         0       0       0       0       0       0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:   10
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_sprintf
  5642 ;;		_atoi
  5643 ;; This function uses a reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text11
  5647  004092                     __ptext11:
  5648                           	opt stack 0
  5649  004092                     _isdigit:
  5650                           	opt stack 0
  5651                           
  5652                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  5653  004092  52E6               	movf	postinc1,f,c
  5654                           
  5655                           ;stkvar	_isdigit$1567 @ sp[(-1)+0]
  5656                           
  5657                           ;incstack = 0
  5658  004094  0EFF               	movlw	-1
  5659  004096  6AE3               	clrf	plusw1,c
  5660                           
  5661                           ;stkvar	isdigit@c @ sp[(-1)+-1]
  5662  004098  0EFE               	movlw	-2
  5663  00409A  CFE3 F03A          	movff	plusw1,btemp
  5664  00409E  0E3A               	movlw	58
  5665  0040A0  603A               	cpfslt	btemp,c
  5666  0040A2  D009               	goto	l4857
  5667                           
  5668                           ;stkvar	isdigit@c @ sp[(-1)+-1]
  5669  0040A4  0EFE               	movlw	-2
  5670  0040A6  CFE3 F03A          	movff	plusw1,btemp
  5671  0040AA  0E2F               	movlw	47
  5672  0040AC  643A               	cpfsgt	btemp,c
  5673  0040AE  D003               	goto	l4857
  5674                           
  5675                           ;stkvar	_isdigit$1567 @ sp[(-1)+0]
  5676  0040B0  0EFF               	movlw	-1
  5677  0040B2  6AE3               	clrf	plusw1,c
  5678  0040B4  2AE3               	incf	plusw1,f,c
  5679  0040B6                     l4857:
  5680                           
  5681                           ;stkvar	_isdigit$1567 @ sp[(-1)+0]
  5682  0040B6  0EFF               	movlw	-1
  5683  0040B8  CFE3 F045          	movff	plusw1,btemp+11
  5684  0040BC  3045               	rrcf	btemp+11,w,c
  5685  0040BE  903A               	bcf	btemp,0,c
  5686  0040C0  B0D8               	btfsc	status,0,c
  5687  0040C2  803A               	bsf	btemp,0,c
  5688                           
  5689                           ; _isdigit: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsi
      +                          ze = 1, vargsize = 0
  5690  0040C4  52E5               	movf	postdec1,f,c
  5691  0040C6  52E5               	movf	postdec1,f,c
  5692  0040C8  0012               	return		;funcret
  5693  0040CA                     __end_of_isdigit:
  5694                           	opt stack 0
  5695                           tblptru	equ	0xFF8
  5696                           tblptrh	equ	0xFF7
  5697                           tblptrl	equ	0xFF6
  5698                           tablat	equ	0xFF5
  5699                           intcon	equ	0xFF2
  5700                           intcon2	equ	0xFF1
  5701                           postinc0	equ	0xFEE
  5702                           fsr0h	equ	0xFEA
  5703                           fsr0l	equ	0xFE9
  5704                           wreg	equ	0xFE8
  5705                           postinc1	equ	0xFE6
  5706                           postdec1	equ	0xFE5
  5707                           plusw1	equ	0xFE3
  5708                           fsr1h	equ	0xFE2
  5709                           fsr1l	equ	0xFE1
  5710                           indf2	equ	0xFDF
  5711                           postinc2	equ	0xFDE
  5712                           postdec2	equ	0xFDD
  5713                           fsr2h	equ	0xFDA
  5714                           fsr2l	equ	0xFD9
  5715                           status	equ	0xFD8
  5716                           
  5717 ;; *************** function _read_EEPROM *****************
  5718 ;; Defined at:
  5719 ;;		line 1455 in file "FinalProject.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  add             2  [STACK] int 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;		None
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1  [STACK] unsigned char 
  5726 ;; Registers used:
  5727 ;;		fsr1l, fsr1h, btemp
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5733 ;;      Params:         0       0       0       0       0       0       0
  5734 ;;      Locals:         0       0       0       0       0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0
  5736 ;;      Totals:         0       0       0       0       0       0       0
  5737 ;;Total ram usage:        0 bytes
  5738 ;; Hardware stack levels used:    1
  5739 ;; Hardware stack levels required when called:   10
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_main
  5744 ;;		_verifyPassword
  5745 ;;		_My_ISR_High
  5746 ;;		_My_ISR_Low_TempSensor
  5747 ;;		_PIR_reset
  5748 ;;		_temp_reset
  5749 ;;		_updateThreshold
  5750 ;;		_changePassword
  5751 ;;		_checkStatus
  5752 ;; This function uses a reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text12
  5756  0041D0                     __ptext12:
  5757                           	opt stack 0
  5758  0041D0                     _read_EEPROM:
  5759                           	opt stack 6
  5760                           
  5761                           ;FinalProject.c: 1457: EEADR = add;
  5762                           ;stkvar	read_EEPROM@add @ sp[(0)+-2]
  5763                           
  5764                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
  5765                           ;incstack = 0
  5766  0041D0  0EFE               	movlw	-2
  5767  0041D2  CFE3 FFA9          	movff	plusw1,4009	;volatile
  5768                           
  5769                           ;FinalProject.c: 1458: EEPGD = 0;
  5770  0041D6  9EA6               	bcf	4006,7,c	;volatile
  5771                           
  5772                           ;FinalProject.c: 1459: CFGS = 0;
  5773  0041D8  9CA6               	bcf	4006,6,c	;volatile
  5774                           
  5775                           ;FinalProject.c: 1460: RD = 1;
  5776  0041DA  80A6               	bsf	4006,0,c	;volatile
  5777                           
  5778                           ;FinalProject.c: 1461: return EEDATA;
  5779  0041DC  CFA8 F03A          	movff	4008,btemp	;volatile
  5780                           
  5781                           ; _read_EEPROM: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, a
      +                          rgsize = 2, vargsize = 0
  5782  0041E0  52E5               	movf	postdec1,f,c
  5783  0041E2  52E5               	movf	postdec1,f,c
  5784  0041E4  0012               	return		;funcret
  5785  0041E6                     __end_of_read_EEPROM:
  5786                           	opt stack 0
  5787                           tblptru	equ	0xFF8
  5788                           tblptrh	equ	0xFF7
  5789                           tblptrl	equ	0xFF6
  5790                           tablat	equ	0xFF5
  5791                           intcon	equ	0xFF2
  5792                           intcon2	equ	0xFF1
  5793                           postinc0	equ	0xFEE
  5794                           fsr0h	equ	0xFEA
  5795                           fsr0l	equ	0xFE9
  5796                           wreg	equ	0xFE8
  5797                           postinc1	equ	0xFE6
  5798                           postdec1	equ	0xFE5
  5799                           plusw1	equ	0xFE3
  5800                           fsr1h	equ	0xFE2
  5801                           fsr1l	equ	0xFE1
  5802                           indf2	equ	0xFDF
  5803                           postinc2	equ	0xFDE
  5804                           postdec2	equ	0xFDD
  5805                           fsr2h	equ	0xFDA
  5806                           fsr2l	equ	0xFD9
  5807                           status	equ	0xFD8
  5808                           
  5809 ;; *************** function _initialize_tempSensor *****************
  5810 ;; Defined at:
  5811 ;;		line 375 in file "FinalProject.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1  [STACK] void 
  5818 ;; Registers used:
  5819 ;;		None
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5825 ;;      Params:         0       0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0
  5828 ;;      Totals:         0       0       0       0       0       0       0
  5829 ;;Total ram usage:        0 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:   10
  5832 ;; This function calls:
  5833 ;;		Nothing
  5834 ;; This function is called by:
  5835 ;;		_option_TempSensor
  5836 ;;		_My_ISR_High
  5837 ;;		_My_ISR_Low_TempSensor
  5838 ;;		_checkStatus
  5839 ;; This function uses a reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text13
  5843  004228                     __ptext13:
  5844                           	opt stack 0
  5845  004228                     _initialize_tempSensor:
  5846                           	opt stack 6
  5847                           
  5848                           ;FinalProject.c: 378: PIR1bits.ADIF = 0;
  5849                           
  5850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  5851                           ;incstack = 0
  5852  004228  9C9E               	bcf	3998,6,c	;volatile
  5853                           
  5854                           ;FinalProject.c: 380: PIE1bits.ADIE = 1;
  5855  00422A  8C9D               	bsf	3997,6,c	;volatile
  5856                           
  5857                           ; _initialize_tempSensor: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 0, argsize = 0, vargsize = 0
  5858  00422C  0012               	return		;funcret
  5859  00422E                     __end_of_initialize_tempSensor:
  5860                           	opt stack 0
  5861                           tblptru	equ	0xFF8
  5862                           tblptrh	equ	0xFF7
  5863                           tblptrl	equ	0xFF6
  5864                           tablat	equ	0xFF5
  5865                           intcon	equ	0xFF2
  5866                           intcon2	equ	0xFF1
  5867                           postinc0	equ	0xFEE
  5868                           fsr0h	equ	0xFEA
  5869                           fsr0l	equ	0xFE9
  5870                           wreg	equ	0xFE8
  5871                           postinc1	equ	0xFE6
  5872                           postdec1	equ	0xFE5
  5873                           plusw1	equ	0xFE3
  5874                           fsr1h	equ	0xFE2
  5875                           fsr1l	equ	0xFE1
  5876                           indf2	equ	0xFDF
  5877                           postinc2	equ	0xFDE
  5878                           postdec2	equ	0xFDD
  5879                           fsr2h	equ	0xFDA
  5880                           fsr2l	equ	0xFD9
  5881                           status	equ	0xFD8
  5882                           
  5883 ;; *************** function _initialize_PIR *****************
  5884 ;; Defined at:
  5885 ;;		line 360 in file "FinalProject.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1  [STACK] void 
  5892 ;; Registers used:
  5893 ;;		None
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5899 ;;      Params:         0       0       0       0       0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0
  5902 ;;      Totals:         0       0       0       0       0       0       0
  5903 ;;Total ram usage:        0 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:   10
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_main
  5910 ;;		_option_PIR
  5911 ;;		_My_ISR_High
  5912 ;;		_checkStatus
  5913 ;; This function uses a reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text14
  5917  0041FC                     __ptext14:
  5918                           	opt stack 0
  5919  0041FC                     _initialize_PIR:
  5920                           	opt stack 6
  5921                           
  5922                           ;FinalProject.c: 364: RCONbits.IPEN = 1;
  5923                           
  5924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  5925                           ;incstack = 0
  5926  0041FC  8ED0               	bsf	4048,7,c	;volatile
  5927                           
  5928                           ;FinalProject.c: 365: INTCONbits.INT0IE = 0;
  5929  0041FE  98F2               	bcf	intcon,4,c	;volatile
  5930                           
  5931                           ;FinalProject.c: 366: INTCON2bits.INTEDG0 = 0;
  5932  004200  9CF1               	bcf	intcon2,6,c	;volatile
  5933                           
  5934                           ;FinalProject.c: 367: INTCONbits.INT0IF = 0;
  5935  004202  92F2               	bcf	intcon,1,c	;volatile
  5936                           
  5937                           ;FinalProject.c: 368: TRISBbits.RB2 = 0;
  5938  004204  9493               	bcf	3987,2,c	;volatile
  5939                           
  5940                           ;FinalProject.c: 369: TRISBbits.RB0 = 1;
  5941  004206  8093               	bsf	3987,0,c	;volatile
  5942                           
  5943                           ;FinalProject.c: 370: PORTBbits.RB2 = 0;
  5944  004208  9481               	bcf	3969,2,c	;volatile
  5945                           
  5946                           ;FinalProject.c: 372: TRISBbits.RB3 = 0;
  5947  00420A  9693               	bcf	3987,3,c	;volatile
  5948                           
  5949                           ; _initialize_PIR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  5950  00420C  0012               	return		;funcret
  5951  00420E                     __end_of_initialize_PIR:
  5952                           	opt stack 0
  5953                           tblptru	equ	0xFF8
  5954                           tblptrh	equ	0xFF7
  5955                           tblptrl	equ	0xFF6
  5956                           tablat	equ	0xFF5
  5957                           intcon	equ	0xFF2
  5958                           intcon2	equ	0xFF1
  5959                           postinc0	equ	0xFEE
  5960                           fsr0h	equ	0xFEA
  5961                           fsr0l	equ	0xFE9
  5962                           wreg	equ	0xFE8
  5963                           postinc1	equ	0xFE6
  5964                           postdec1	equ	0xFE5
  5965                           plusw1	equ	0xFE3
  5966                           fsr1h	equ	0xFE2
  5967                           fsr1l	equ	0xFE1
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function _mainScreen *****************
  5976 ;; Defined at:
  5977 ;;		line 403 in file "FinalProject.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  tempTemperat    3  [STACK] unsigned char [3]
  5982 ;;  tempThreshol    2  [STACK] unsigned char [2]
  5983 ;;  i               2  [STACK] int 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1  [STACK] void 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : F/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5993 ;;      Params:         0       0       0       0       0       0       0
  5994 ;;      Locals:         0       0       0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0
  5996 ;;      Totals:         0       0       0       0       0       0       0
  5997 ;;Total ram usage:        0 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:   14
  6000 ;; This function calls:
  6001 ;;		_choiceKeypad
  6002 ;;		_halfSecDelay
  6003 ;;		_initialScreen
  6004 ;;		_mainScreen
  6005 ;;		_my_print
  6006 ;;		_option_Keyboard
  6007 ;;		_option_Keypad
  6008 ;;		_option_PIR
  6009 ;;		_option_Refresh
  6010 ;;		_option_TempSensor
  6011 ;;		_option_passcode
  6012 ;;		_reception
  6013 ;;		_sprintf
  6014 ;; This function is called by:
  6015 ;;		_verifyPassword
  6016 ;;		_option_PIR
  6017 ;; This function uses a recursive model
  6018 ;;
  6019                           
  6020                           	psect	text15
  6021  0013B4                     __ptext15:
  6022                           	opt stack 0
  6023  0013B4                     _mainScreen:
  6024                           	opt stack 0
  6025                           
  6026                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
  6027  0013B4  0E07               	movlw	7
  6028  0013B6  26E1               	addwf	fsr1l,f,c
  6029  0013B8  0E00               	movlw	0
  6030  0013BA  22E2               	addwfc	fsr1h,f,c
  6031  0013BC                     
  6032                           ;FinalProject.c: 406: initialScreen();
  6033  0013BC  ECFC  F01F         	call	_initialScreen	;wreg free
  6034                           
  6035                           ;FinalProject.c: 407: tempIntSet = 0;
  6036  0013C0  6A4C               	clrf	_tempIntSet,c
  6037  0013C2  6A4D               	clrf	_tempIntSet+1,c
  6038                           
  6039                           ;FinalProject.c: 408: my_print("\n\r");
  6040  0013C4  0E38               	movlw	low (STR_94+41)
  6041  0013C6  6EE6               	movwf	postinc1,c
  6042  0013C8  0E7B               	movlw	high (STR_94+41)
  6043  0013CA  6EE6               	movwf	postinc1,c
  6044  0013CC  ECF8  F01E         	call	_my_print	;wreg free
  6045                           
  6046                           ;FinalProject.c: 409: my_print("\n\rCURRENT STATUS OF COMPONENTS");
  6047  0013D0  0E3D               	movlw	low STR_20
  6048  0013D2  6EE6               	movwf	postinc1,c
  6049  0013D4  0E7E               	movlw	high STR_20
  6050  0013D6  6EE6               	movwf	postinc1,c
  6051  0013D8  ECF8  F01E         	call	_my_print	;wreg free
  6052                           
  6053                           ;FinalProject.c: 410: my_print("\n\r****************************************************
      +                          ********");
  6054  0013DC  0E86               	movlw	low STR_13
  6055  0013DE  6EE6               	movwf	postinc1,c
  6056  0013E0  0E78               	movlw	high STR_13
  6057  0013E2  6EE6               	movwf	postinc1,c
  6058  0013E4  ECF8  F01E         	call	_my_print	;wreg free
  6059                           
  6060                           ;FinalProject.c: 411: my_print("\n\rTemperature Alarm State:         ");
  6061  0013E8  0EED               	movlw	low STR_22
  6062  0013EA  6EE6               	movwf	postinc1,c
  6063  0013EC  0E7C               	movlw	high STR_22
  6064  0013EE  6EE6               	movwf	postinc1,c
  6065  0013F0  ECF8  F01E         	call	_my_print	;wreg free
  6066                           
  6067                           ;FinalProject.c: 412: my_print(statusOfTemp);
  6068  0013F4  C0F2  FFE6         	movff	_statusOfTemp,postinc1
  6069  0013F8  C0F3  FFE6         	movff	_statusOfTemp+1,postinc1
  6070  0013FC  ECF8  F01E         	call	_my_print	;wreg free
  6071                           
  6072                           ;FinalProject.c: 413: my_print("\n\rCurrent Temperature Reading:     ");
  6073  001400  0E35               	movlw	low STR_23
  6074  001402  6EE6               	movwf	postinc1,c
  6075  001404  0E7D               	movlw	high STR_23
  6076  001406  6EE6               	movwf	postinc1,c
  6077  001408  ECF8  F01E         	call	_my_print	;wreg free
  6078                           
  6079                           ;FinalProject.c: 414: char tempTemperatureArray[sizeof(temperature)];
  6080                           ;FinalProject.c: 415: int i;
  6081                           ;FinalProject.c: 416: for(i = 0; i < 6; i++)
  6082                           ;stkvar	mainScreen@i @ sp[(-7)+5]
  6083  00140C  0EFE               	movlw	-2
  6084  00140E  6AE3               	clrf	plusw1,c
  6085  001410  0EFF               	movlw	-1
  6086  001412  6AE3               	clrf	plusw1,c
  6087  001414                     l6649:
  6088                           
  6089                           ;FinalProject.c: 417: {
  6090                           ;FinalProject.c: 418: if (i<5)
  6091                           ;stkvar	mainScreen@i @ sp[(-7)+5]
  6092  001414  0EFF               	movlw	-1
  6093  001416  BEE3               	btfsc	plusw1,7,c
  6094  001418  D00A               	goto	l6651
  6095  00141A  0EFF               	movlw	-1
  6096  00141C  50E3               	movf	plusw1,w,c
  6097  00141E  E128               	bnz	l6653
  6098  001420  0EFE               	movlw	-2
  6099  001422  CFE3 F03A          	movff	plusw1,btemp
  6100  001426  0E05               	movlw	5
  6101  001428  5E3A               	subwf	btemp,f,c
  6102  00142A  B0D8               	btfsc	status,0,c
  6103  00142C  D021               	goto	l6653
  6104  00142E                     l6651:
  6105                           
  6106                           ;FinalProject.c: 419: {
  6107                           ;FinalProject.c: 420: tempArray[i] = tempTemperatureArray[i];
  6108                           ;stkvar	mainScreen@i @ sp[(-7)+5]
  6109  00142E  0EFE               	movlw	-2
  6110  001430  CFE3 F03B          	movff	plusw1,btemp+1
  6111  001434  0EFF               	movlw	-1
  6112  001436  CFE3 F03C          	movff	plusw1,btemp+2
  6113                           
  6114                           ;stkvar	mainScreen@tempTemperatureArray @ sp[(-7)+0]
  6115  00143A  0EF9               	movlw	249
  6116  00143C  24E1               	addwf	fsr1l,w,c
  6117  00143E  6E44               	movwf	btemp+10,c
  6118  001440  0EFF               	movlw	255
  6119  001442  20E2               	addwfc	fsr1h,w,c
  6120  001444  6E45               	movwf	btemp+11,c
  6121  001446  503B               	movf	btemp+1,w,c
  6122  001448  2444               	addwf	btemp+10,w,c
  6123  00144A  6ED9               	movwf	fsr2l,c
  6124  00144C  503C               	movf	btemp+2,w,c
  6125  00144E  2045               	addwfc	btemp+11,w,c
  6126  001450  6EDA               	movwf	fsr2h,c
  6127                           
  6128                           ;stkvar	mainScreen@i @ sp[(-7)+5]
  6129  001452  0EFE               	movlw	-2
  6130  001454  CFE3 F03B          	movff	plusw1,btemp+1
  6131  001458  0EFF               	movlw	-1
  6132  00145A  CFE3 F03C          	movff	plusw1,btemp+2
  6133  00145E  0EE1               	movlw	low _tempArray
  6134  001460  243B               	addwf	btemp+1,w,c
  6135  001462  6EE9               	movwf	fsr0l,c
  6136  001464  0E00               	movlw	high _tempArray
  6137  001466  203C               	addwfc	btemp+2,w,c
  6138  001468  6EEA               	movwf	fsr0h,c
  6139  00146A  CFDF FFEF          	movff	indf2,indf0
  6140                           
  6141                           ;FinalProject.c: 421: }
  6142  00146E  D00E               	goto	l6655
  6143  001470                     l6653:
  6144                           
  6145                           ;FinalProject.c: 422: else
  6146                           ;FinalProject.c: 423: {
  6147                           ;FinalProject.c: 424: tempArray[i] = '\0';
  6148                           ;stkvar	mainScreen@i @ sp[(-7)+5]
  6149  001470  0EFE               	movlw	-2
  6150  001472  CFE3 F03B          	movff	plusw1,btemp+1
  6151  001476  0EFF               	movlw	-1
  6152  001478  CFE3 F03C          	movff	plusw1,btemp+2
  6153  00147C  0EE1               	movlw	low _tempArray
  6154  00147E  243B               	addwf	btemp+1,w,c
  6155  001480  6ED9               	movwf	fsr2l,c
  6156  001482  0E00               	movlw	high _tempArray
  6157  001484  203C               	addwfc	btemp+2,w,c
  6158  001486  6EDA               	movwf	fsr2h,c
  6159  001488  0E00               	movlw	0
  6160  00148A  6EDF               	movwf	indf2,c
  6161  00148C                     l6655:
  6162                           
  6163                           ;stkvar	mainScreen@i @ sp[(-7)+5]
  6164  00148C  0EFE               	movlw	-2
  6165  00148E  50E3               	movf	plusw1,w,c
  6166  001490  0F01               	addlw	1
  6167  001492  6E3A               	movwf	btemp,c
  6168  001494  0EFE               	movlw	-2
  6169  001496  C03A  FFE3         	movff	btemp,plusw1
  6170  00149A  6A3A               	clrf	btemp,c
  6171  00149C  0EFF               	movlw	-1
  6172  00149E  50E3               	movf	plusw1,w,c
  6173  0014A0  203A               	addwfc	btemp,w,c
  6174  0014A2  6E3A               	movwf	btemp,c
  6175  0014A4  0EFF               	movlw	-1
  6176  0014A6  C03A  FFE3         	movff	btemp,plusw1
  6177                           
  6178                           ;stkvar	mainScreen@i @ sp[(-7)+5]
  6179  0014AA  0EFF               	movlw	-1
  6180  0014AC  BEE3               	btfsc	plusw1,7,c
  6181  0014AE  D7B2               	goto	l6649
  6182  0014B0  0EFF               	movlw	-1
  6183  0014B2  50E3               	movf	plusw1,w,c
  6184  0014B4  E107               	bnz	u7750
  6185  0014B6  0EFE               	movlw	-2
  6186  0014B8  CFE3 F03A          	movff	plusw1,btemp
  6187  0014BC  0E06               	movlw	6
  6188  0014BE  5E3A               	subwf	btemp,f,c
  6189  0014C0  A0D8               	btfss	status,0,c
  6190  0014C2  D7A8               	goto	l6649
  6191  0014C4                     u7750:
  6192                           
  6193                           ;FinalProject.c: 425: }
  6194                           ;FinalProject.c: 426: }
  6195                           ;FinalProject.c: 429: sprintf(tempArray, "%2.2f", temperature);
  6196  0014C4  0EE1               	movlw	low _tempArray
  6197  0014C6  0100               	movlb	0	; () banked
  6198  0014C8  6FA1               	movwf	sprintf@sp& (0+255),b
  6199  0014CA  0E00               	movlw	high _tempArray
  6200  0014CC  0100               	movlb	0	; () banked
  6201  0014CE  6FA2               	movwf	(sprintf@sp+1)& (0+255),b
  6202  0014D0  0EF0               	movlw	low STR_24
  6203  0014D2  0100               	movlb	0	; () banked
  6204  0014D4  6FA3               	movwf	sprintf@f& (0+255),b
  6205  0014D6  0E7F               	movlw	high STR_24
  6206  0014D8  0100               	movlb	0	; () banked
  6207  0014DA  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  6208  0014DC  C0D6  F0A5         	movff	_temperature,?_sprintf+4
  6209  0014E0  C0D7  F0A6         	movff	_temperature+1,?_sprintf+5
  6210  0014E4  C0D8  F0A7         	movff	_temperature+2,?_sprintf+6
  6211  0014E8  ECE0  F001         	call	_sprintf	;wreg free
  6212                           
  6213                           ;FinalProject.c: 430: my_print(tempArray);
  6214  0014EC  0EE1               	movlw	low _tempArray
  6215  0014EE  6EE6               	movwf	postinc1,c
  6216  0014F0  0E00               	movlw	high _tempArray
  6217  0014F2  6EE6               	movwf	postinc1,c
  6218  0014F4  ECF8  F01E         	call	_my_print	;wreg free
  6219  0014F8                     l250:
  6220  0014F8  A2AC               	btfss	4012,1,c	;volatile
  6221  0014FA  D7FE               	goto	l250
  6222                           
  6223                           ;FinalProject.c: 432: TXREG = 167;
  6224  0014FC  0EA7               	movlw	167
  6225  0014FE  6EAD               	movwf	4013,c	;volatile
  6226  001500                     l253:
  6227  001500  A2AC               	btfss	4012,1,c	;volatile
  6228  001502  D7FE               	goto	l253
  6229                           
  6230                           ;FinalProject.c: 434: TXREG = 'F';
  6231  001504  0E46               	movlw	70
  6232  001506  6EAD               	movwf	4013,c	;volatile
  6233                           
  6234                           ;FinalProject.c: 435: my_print("\n\rTemperature Alarm Threshold:     ");
  6235  001508  0E11               	movlw	low STR_25
  6236  00150A  6EE6               	movwf	postinc1,c
  6237  00150C  0E7D               	movlw	high STR_25
  6238  00150E  6EE6               	movwf	postinc1,c
  6239  001510  ECF8  F01E         	call	_my_print	;wreg free
  6240                           
  6241                           ;FinalProject.c: 436: char tempThresholdArray[sizeof(tempThreshold)];
  6242                           ;FinalProject.c: 437: sprintf(tempThresholdArray, "%d", tempThreshold);
  6243                           ;stkvar	mainScreen@tempThresholdArray @ sp[(-7)+3]
  6244  001514  0EFC               	movlw	252
  6245  001516  24E1               	addwf	fsr1l,w,c
  6246  001518  6E3B               	movwf	btemp+1,c
  6247  00151A  0EFF               	movlw	255
  6248  00151C  20E2               	addwfc	fsr1h,w,c
  6249  00151E  6E3C               	movwf	btemp+2,c
  6250  001520  C03B  F0A1         	movff	btemp+1,sprintf@sp
  6251  001524  C03C  F0A2         	movff	btemp+2,sprintf@sp+1
  6252  001528  0EFB               	movlw	low STR_26
  6253  00152A  0100               	movlb	0	; () banked
  6254  00152C  6FA3               	movwf	sprintf@f& (0+255),b
  6255  00152E  0E7F               	movlw	high STR_26
  6256  001530  0100               	movlb	0	; () banked
  6257  001532  6FA4               	movwf	(sprintf@f+1)& (0+255),b
  6258  001534  C0DD  F0A5         	movff	_tempThreshold,?_sprintf+4
  6259  001538  C0DE  F0A6         	movff	_tempThreshold+1,?_sprintf+5
  6260  00153C  ECE0  F001         	call	_sprintf	;wreg free
  6261                           
  6262                           ;FinalProject.c: 438: my_print(tempThresholdArray);
  6263                           ;stkvar	mainScreen@tempThresholdArray @ sp[(-7)+3]
  6264  001540  0EFC               	movlw	252
  6265  001542  24E1               	addwf	fsr1l,w,c
  6266  001544  6EE6               	movwf	postinc1,c
  6267  001546  0EFF               	movlw	255
  6268  001548  20E2               	addwfc	fsr1h,w,c
  6269  00154A  6EE6               	movwf	postinc1,c
  6270  00154C  ECF8  F01E         	call	_my_print	;wreg free
  6271  001550                     l256:
  6272  001550  A2AC               	btfss	4012,1,c	;volatile
  6273  001552  D7FE               	goto	l256
  6274                           
  6275                           ;FinalProject.c: 440: TXREG = 167;
  6276  001554  0EA7               	movlw	167
  6277  001556  6EAD               	movwf	4013,c	;volatile
  6278  001558                     l259:
  6279  001558  A2AC               	btfss	4012,1,c	;volatile
  6280  00155A  D7FE               	goto	l259
  6281                           
  6282                           ;FinalProject.c: 442: TXREG = 'F';
  6283  00155C  0E46               	movlw	70
  6284  00155E  6EAD               	movwf	4013,c	;volatile
  6285                           
  6286                           ;FinalProject.c: 443: my_print("\n\rPIR Sensor Alarm State:          ");
  6287  001560  0EC9               	movlw	low STR_27
  6288  001562  6EE6               	movwf	postinc1,c
  6289  001564  0E7C               	movlw	high STR_27
  6290  001566  6EE6               	movwf	postinc1,c
  6291  001568  ECF8  F01E         	call	_my_print	;wreg free
  6292                           
  6293                           ;FinalProject.c: 444: my_print(statusOfPir);
  6294  00156C  C0F0  FFE6         	movff	_statusOfPir,postinc1
  6295  001570  C0F1  FFE6         	movff	_statusOfPir+1,postinc1
  6296  001574  ECF8  F01E         	call	_my_print	;wreg free
  6297                           
  6298                           ;FinalProject.c: 445: my_print("\n\rCurrent Input Method:            ");
  6299  001578  0EA5               	movlw	low STR_28
  6300  00157A  6EE6               	movwf	postinc1,c
  6301  00157C  0E7C               	movlw	high STR_28
  6302  00157E  6EE6               	movwf	postinc1,c
  6303  001580  ECF8  F01E         	call	_my_print	;wreg free
  6304                           
  6305                           ;FinalProject.c: 446: my_print(inputMethod);
  6306  001584  C0EE  FFE6         	movff	_inputMethod,postinc1
  6307  001588  C0EF  FFE6         	movff	_inputMethod+1,postinc1
  6308  00158C  ECF8  F01E         	call	_my_print	;wreg free
  6309                           
  6310                           ;FinalProject.c: 447: my_print("\n\r");
  6311  001590  0E38               	movlw	low (STR_94+41)
  6312  001592  6EE6               	movwf	postinc1,c
  6313  001594  0E7B               	movlw	high (STR_94+41)
  6314  001596  6EE6               	movwf	postinc1,c
  6315  001598  ECF8  F01E         	call	_my_print	;wreg free
  6316                           
  6317                           ;FinalProject.c: 448: my_print("\n\r****************************************************
      +                          ********\n\r");
  6318  00159C  0ECB               	movlw	low STR_30
  6319  00159E  6EE6               	movwf	postinc1,c
  6320  0015A0  0E75               	movlw	high STR_30
  6321  0015A2  6EE6               	movwf	postinc1,c
  6322  0015A4  ECF8  F01E         	call	_my_print	;wreg free
  6323                           
  6324                           ;FinalProject.c: 451: my_print("\n\r*********            Main Menu                ******
      +                          ********");
  6325  0015A8  0E08               	movlw	low STR_31
  6326  0015AA  6EE6               	movwf	postinc1,c
  6327  0015AC  0E78               	movlw	high STR_31
  6328  0015AE  6EE6               	movwf	postinc1,c
  6329  0015B0  ECF8  F01E         	call	_my_print	;wreg free
  6330                           
  6331                           ;FinalProject.c: 452: my_print("\n\rSelect One of the Following:");
  6332  0015B4  0E1E               	movlw	low STR_32
  6333  0015B6  6EE6               	movwf	postinc1,c
  6334  0015B8  0E7E               	movlw	high STR_32
  6335  0015BA  6EE6               	movwf	postinc1,c
  6336  0015BC  ECF8  F01E         	call	_my_print	;wreg free
  6337                           
  6338                           ;FinalProject.c: 453: my_print("\n\r      1.Passcode Options");
  6339  0015C0  0ECC               	movlw	low STR_33
  6340  0015C2  6EE6               	movwf	postinc1,c
  6341  0015C4  0E7E               	movlw	high STR_33
  6342  0015C6  6EE6               	movwf	postinc1,c
  6343  0015C8  ECF8  F01E         	call	_my_print	;wreg free
  6344                           
  6345                           ;FinalProject.c: 454: my_print("\n\r      2.PIR Sensor Alarm Options");
  6346  0015CC  0E7D               	movlw	low STR_34
  6347  0015CE  6EE6               	movwf	postinc1,c
  6348  0015D0  0E7D               	movlw	high STR_34
  6349  0015D2  6EE6               	movwf	postinc1,c
  6350  0015D4  ECF8  F01E         	call	_my_print	;wreg free
  6351                           
  6352                           ;FinalProject.c: 455: my_print("\n\r      3.Temperature Sensor Alarm Options");
  6353  0015D8  0E67               	movlw	low STR_35
  6354  0015DA  6EE6               	movwf	postinc1,c
  6355  0015DC  0E7B               	movlw	high STR_35
  6356  0015DE  6EE6               	movwf	postinc1,c
  6357  0015E0  ECF8  F01E         	call	_my_print	;wreg free
  6358                           
  6359                           ;FinalProject.c: 456: my_print("\n\r      4.Use Keyboard(Terminal) as the only input");
  6360  0015E4  0E51               	movlw	low STR_36
  6361  0015E6  6EE6               	movwf	postinc1,c
  6362  0015E8  0E7A               	movlw	high STR_36
  6363  0015EA  6EE6               	movwf	postinc1,c
  6364  0015EC  ECF8  F01E         	call	_my_print	;wreg free
  6365                           
  6366                           ;FinalProject.c: 457: my_print("\n\r      5.Use Keypad as the only input ('A' = Enter Ke
      +                          y)");
  6367  0015F0  0E77               	movlw	low STR_37
  6368  0015F2  6EE6               	movwf	postinc1,c
  6369  0015F4  0E79               	movlw	high STR_37
  6370  0015F6  6EE6               	movwf	postinc1,c
  6371  0015F8  ECF8  F01E         	call	_my_print	;wreg free
  6372                           
  6373                           ;FinalProject.c: 458: my_print("\n\n\n\r  0.Refresh Main Menu");
  6374  0015FC  0E01               	movlw	low STR_38
  6375  0015FE  6EE6               	movwf	postinc1,c
  6376  001600  0E7F               	movlw	high STR_38
  6377  001602  6EE6               	movwf	postinc1,c
  6378  001604  ECF8  F01E         	call	_my_print	;wreg free
  6379                           
  6380                           ;FinalProject.c: 460: my_print("\n\rInput: ");
  6381  001608  0ECD               	movlw	low STR_39
  6382  00160A  6EE6               	movwf	postinc1,c
  6383  00160C  0E7F               	movlw	high STR_39
  6384  00160E  6EE6               	movwf	postinc1,c
  6385  001610  ECF8  F01E         	call	_my_print	;wreg free
  6386                           
  6387                           ;FinalProject.c: 463: halfSecDelay();
  6388  001614  ECA6  F01F         	call	_halfSecDelay	;wreg free
  6389                           
  6390                           ;FinalProject.c: 466: if(PORTBbits.RB4 == 1)
  6391  001618  A881               	btfss	3969,4,c	;volatile
  6392  00161A  D013               	goto	l6719
  6393                           
  6394                           ;FinalProject.c: 467: {
  6395                           ;FinalProject.c: 468: choiceKeypad();
  6396  00161C  EC85  F01D         	call	_choiceKeypad	;wreg free
  6397  001620                     l263:
  6398  001620  A2AC               	btfss	4012,1,c	;volatile
  6399  001622  D7FE               	goto	l263
  6400                           
  6401                           ;FinalProject.c: 470: TXREG = keypadValue;
  6402  001624  C0E0  FFAD         	movff	_keypadValue,4013	;volatile
  6403                           
  6404                           ;FinalProject.c: 471: choice = keypadValue;
  6405  001628  C0E0  F0DF         	movff	_keypadValue,_choice
  6406                           
  6407                           ;FinalProject.c: 472: halfSecDelay();
  6408  00162C  ECA6  F01F         	call	_halfSecDelay	;wreg free
  6409                           
  6410                           ;FinalProject.c: 473: while(keypadValue != 'A'){
  6411  001630  D002               	goto	l6717
  6412  001632                     l6715:
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;FinalProject.c: 474: choiceKeypad();
  6416  001632  EC85  F01D         	call	_choiceKeypad	;wreg free
  6417  001636                     l6717:
  6418  001636  0E41               	movlw	65
  6419  001638  0100               	movlb	0	; () banked
  6420  00163A  19E0               	xorwf	_keypadValue& (0+255),w,b
  6421  00163C  B4D8               	btfsc	status,2,c
  6422  00163E  D00E               	goto	l269
  6423  001640  D7F8               	goto	l6715
  6424  001642                     l6719:
  6425                           
  6426                           ;FinalProject.c: 477: else
  6427                           ;FinalProject.c: 478: {
  6428                           ;FinalProject.c: 479: choice = reception();
  6429  001642  ECF3  F020         	call	_reception	;wreg free
  6430  001646  503A               	movf	btemp,w,c
  6431  001648  0100               	movlb	0	; () banked
  6432  00164A  6FDF               	movwf	_choice& (0+255),b
  6433  00164C                     l270:
  6434  00164C  A2AC               	btfss	4012,1,c	;volatile
  6435  00164E  D7FE               	goto	l270
  6436                           
  6437                           ;FinalProject.c: 481: TXREG = choice;
  6438  001650  C0DF  FFAD         	movff	_choice,4013	;volatile
  6439  001654                     l6721:
  6440  001654  0E0D               	movlw	13
  6441  001656  18AE               	xorwf	4014,w,c	;volatile
  6442  001658  A4D8               	btfss	status,2,c
  6443  00165A  D7FC               	goto	l6721
  6444  00165C                     l269:
  6445                           
  6446                           ;FinalProject.c: 483: }
  6447                           ;FinalProject.c: 485: flag = 0;
  6448  00165C  0100               	movlb	0	; () banked
  6449  00165E  6BDB               	clrf	_flag& (0+255),b
  6450  001660  6BDC               	clrf	(_flag+1)& (0+255),b
  6451                           
  6452                           ;FinalProject.c: 487: switch(choice)
  6453  001662  D024               	goto	l6753
  6454  001664                     l6723:
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;FinalProject.c: 490: option_passcode();
  6458  001664  ECFC  F00C         	call	_option_passcode	;wreg free
  6459  001668                     l6725:
  6460                           
  6461                           ;FinalProject.c: 491: mainScreen();
  6462  001668  DEA5               	call	_mainScreen	;wreg free
  6463                           
  6464                           ;FinalProject.c: 492: break;
  6465  00166A  D035               	goto	l6755
  6466  00166C                     l6727:
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;FinalProject.c: 494: option_PIR();
  6470  00166C  EC4E  F016         	call	_option_PIR	;wreg free
  6471                           
  6472                           ;FinalProject.c: 495: mainScreen();
  6473  001670  DEA1               	call	_mainScreen	;wreg free
  6474                           
  6475                           ;FinalProject.c: 496: break;
  6476  001672  D031               	goto	l6755
  6477  001674                     l6729:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;FinalProject.c: 498: option_TempSensor();
  6481  001674  EC90  F015         	call	_option_TempSensor	;wreg free
  6482  001678  D7F7               	goto	l6725
  6483  00167A                     l6733:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;FinalProject.c: 502: option_Keyboard();
  6487  00167A  ECBD  F020         	call	_option_Keyboard	;wreg free
  6488  00167E  D7F4               	goto	l6725
  6489  001680                     l6737:
  6490                           
  6491                           ; BSR set to: 0
  6492                           ;FinalProject.c: 506: option_Keypad();
  6493  001680  ECAB  F020         	call	_option_Keypad	;wreg free
  6494  001684  D7F1               	goto	l6725
  6495  001686                     l6741:
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;FinalProject.c: 510: option_Refresh();
  6499  001686  EC19  F021         	call	_option_Refresh	;wreg free
  6500  00168A  D7EE               	goto	l6725
  6501  00168C                     l6745:
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;FinalProject.c: 514: {
  6505                           ;FinalProject.c: 515: my_print("\n\rInvalid Selection.\n\r");
  6506  00168C  0E4B               	movlw	low STR_40
  6507  00168E  6EE6               	movwf	postinc1,c
  6508  001690  0E7F               	movlw	high STR_40
  6509  001692  6EE6               	movwf	postinc1,c
  6510  001694  ECF8  F01E         	call	_my_print	;wreg free
  6511                           
  6512                           ;FinalProject.c: 516: halfSecDelay();
  6513  001698  ECA6  F01F         	call	_halfSecDelay	;wreg free
  6514                           
  6515                           ;FinalProject.c: 517: halfSecDelay();
  6516  00169C  ECA6  F01F         	call	_halfSecDelay	;wreg free
  6517                           
  6518                           ;FinalProject.c: 518: flag = 1;
  6519  0016A0  0E00               	movlw	0
  6520  0016A2  0100               	movlb	0	; () banked
  6521  0016A4  6FDC               	movwf	(_flag+1)& (0+255),b
  6522  0016A6  0E01               	movlw	1
  6523  0016A8  6FDB               	movwf	_flag& (0+255),b
  6524                           
  6525                           ;FinalProject.c: 519: }
  6526                           ;FinalProject.c: 520: }
  6527  0016AA  D015               	goto	l6755
  6528  0016AC                     l6753:
  6529                           
  6530                           ; BSR set to: 0
  6531  0016AC  0100               	movlb	0	; () banked
  6532  0016AE  51DF               	movf	_choice& (0+255),w,b
  6533                           
  6534                           ; Switch size 1, requested type "space"
  6535                           ; Number of cases is 6, Range of values is 48 to 53
  6536                           ; switch strategies available:
  6537                           ; Name         Instructions Cycles
  6538                           ; simple_byte           19    10 (average)
  6539                           ;	Chosen strategy is simple_byte
  6540  0016B0  0A30               	xorlw	48	; case 48
  6541  0016B2  B4D8               	btfsc	status,2,c
  6542  0016B4  D7E8               	goto	l6741
  6543  0016B6  0A01               	xorlw	1	; case 49
  6544  0016B8  B4D8               	btfsc	status,2,c
  6545  0016BA  D7D4               	goto	l6723
  6546  0016BC  0A03               	xorlw	3	; case 50
  6547  0016BE  B4D8               	btfsc	status,2,c
  6548  0016C0  D7D5               	goto	l6727
  6549  0016C2  0A01               	xorlw	1	; case 51
  6550  0016C4  B4D8               	btfsc	status,2,c
  6551  0016C6  D7D6               	goto	l6729
  6552  0016C8  0A07               	xorlw	7	; case 52
  6553  0016CA  B4D8               	btfsc	status,2,c
  6554  0016CC  D7D6               	goto	l6733
  6555  0016CE  0A01               	xorlw	1	; case 53
  6556  0016D0  B4D8               	btfsc	status,2,c
  6557  0016D2  D7D6               	goto	l6737
  6558  0016D4  D7DB               	goto	l6745
  6559  0016D6                     l6755:
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;FinalProject.c: 522: } while(flag == 1);
  6563  0016D6  0100               	movlb	0	; () banked
  6564  0016D8  05DB               	decf	_flag& (0+255),w,b
  6565  0016DA  0100               	movlb	0	; () banked
  6566  0016DC  11DC               	iorwf	(_flag+1)& (0+255),w,b
  6567  0016DE  B4D8               	btfsc	status,2,c
  6568  0016E0  D66D               	goto	l6639
  6569                           
  6570                           ; BSR set to: 0
  6571                           ; _mainScreen: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6572  0016E2  0EF9               	movlw	249
  6573  0016E4  26E1               	addwf	fsr1l,f,c
  6574  0016E6  0EFF               	movlw	255
  6575  0016E8  22E2               	addwfc	fsr1h,f,c
  6576  0016EA  0012               	return		;funcret
  6577  0016EC                     __end_of_mainScreen:
  6578                           	opt stack 0
  6579                           tblptru	equ	0xFF8
  6580                           tblptrh	equ	0xFF7
  6581                           tblptrl	equ	0xFF6
  6582                           tablat	equ	0xFF5
  6583                           intcon	equ	0xFF2
  6584                           intcon2	equ	0xFF1
  6585                           indf0	equ	0xFEF
  6586                           postinc0	equ	0xFEE
  6587                           fsr0h	equ	0xFEA
  6588                           fsr0l	equ	0xFE9
  6589                           wreg	equ	0xFE8
  6590                           postinc1	equ	0xFE6
  6591                           postdec1	equ	0xFE5
  6592                           plusw1	equ	0xFE3
  6593                           fsr1h	equ	0xFE2
  6594                           fsr1l	equ	0xFE1
  6595                           indf2	equ	0xFDF
  6596                           postinc2	equ	0xFDE
  6597                           postdec2	equ	0xFDD
  6598                           fsr2h	equ	0xFDA
  6599                           fsr2l	equ	0xFD9
  6600                           status	equ	0xFD8
  6601                           
  6602 ;; *************** function _sprintf *****************
  6603 ;; Defined at:
  6604 ;;		line 492 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  sp              2   33[BANK0 ] PTR unsigned char 
  6607 ;;		 -> mainScreen@tempThresholdArray(2), tempArray(6), 
  6608 ;;  f               2   35[BANK0 ] PTR const unsigned char 
  6609 ;;		 -> STR_26(3), STR_24(6), 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;  val             4   56[BANK0 ] unsigned long 
  6612 ;;  tmpval          4   52[BANK0 ] struct .
  6613 ;;  fval            3   62[BANK0 ] struct .
  6614 ;;  cp              3    0        PTR const unsigned char 
  6615 ;;  prec            2   65[BANK0 ] int 
  6616 ;;  exp             2   60[BANK0 ] int 
  6617 ;;  width           2   50[BANK0 ] int 
  6618 ;;  flag            2   48[BANK0 ] unsigned short 
  6619 ;;  ap              2   46[BANK0 ] PTR void [1]
  6620 ;;		 -> ?_sprintf(2), 
  6621 ;;  len             2    0        unsigned int 
  6622 ;;  c               1   67[BANK0 ] char 
  6623 ;;  d               1    0        unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  2   33[BANK0 ] int 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6633 ;;      Params:         0       7       0       0       0       0       0
  6634 ;;      Locals:         0      22       0       0       0       0       0
  6635 ;;      Temps:          0       6       0       0       0       0       0
  6636 ;;      Totals:         0      35       0       0       0       0       0
  6637 ;;Total ram usage:       35 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:   13
  6640 ;; This function calls:
  6641 ;;		___awdiv
  6642 ;;		___ftadd
  6643 ;;		___ftge
  6644 ;;		___ftmul
  6645 ;;		___ftneg
  6646 ;;		___ftsub
  6647 ;;		___fttol
  6648 ;;		___lldiv
  6649 ;;		___llmod
  6650 ;;		___lltoft
  6651 ;;		___wmul
  6652 ;;		__div_to_l_
  6653 ;;		__tdiv_to_l_
  6654 ;;		_fround
  6655 ;;		_isdigit
  6656 ;;		_scale
  6657 ;; This function is called by:
  6658 ;;		_mainScreen
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text16
  6663  0003C0                     __ptext16:
  6664                           	opt stack 0
  6665  0003C0                     _sprintf:
  6666                           	opt stack 13
  6667                           
  6668                           ;doprnt.c: 494: va_list ap;
  6669                           ;doprnt.c: 499: signed char c;
  6670                           ;doprnt.c: 501: int width;
  6671                           ;doprnt.c: 504: int prec;
  6672                           ;doprnt.c: 508: unsigned short flag;
  6673                           ;doprnt.c: 515: char d;
  6674                           ;doprnt.c: 516: double fval;
  6675                           ;doprnt.c: 517: int exp;
  6676                           ;doprnt.c: 523: union {
  6677                           ;doprnt.c: 524: unsigned long vd;
  6678                           ;doprnt.c: 525: double integ;
  6679                           ;doprnt.c: 526: } tmpval;
  6680                           ;doprnt.c: 528: unsigned long val;
  6681                           ;doprnt.c: 529: unsigned len;
  6682                           ;doprnt.c: 530: const char * cp;
  6683                           ;doprnt.c: 533: *ap = __va_start();
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;incstack = 0
  6687  0003C0  0EA5               	movlw	low (?_sprintf+4)
  6688  0003C2  0100               	movlb	0	; () banked
  6689  0003C4  6FAE               	movwf	sprintf@ap& (0+255),b
  6690  0003C6  0E00               	movlw	high (?_sprintf+4)
  6691  0003C8  0100               	movlb	0	; () banked
  6692  0003CA  6FAF               	movwf	(sprintf@ap+1)& (0+255),b
  6693                           
  6694                           ;doprnt.c: 536: while(c = *f++) {
  6695  0003CC  EF83  F007         	goto	l6409
  6696  0003D0                     l6123:
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;doprnt.c: 538: if(c != '%')
  6700  0003D0  0E25               	movlw	37
  6701  0003D2  0100               	movlb	0	; () banked
  6702  0003D4  19C3               	xorwf	sprintf@c& (0+255),w,b
  6703  0003D6  B4D8               	btfsc	status,2,c
  6704  0003D8  D00B               	goto	l6129
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;doprnt.c: 540: {
  6708                           ;doprnt.c: 541: ((*sp++ = (c)));
  6709  0003DA  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  6710  0003DE  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  6711  0003E2  C0C3  FFDF         	movff	sprintf@c,indf2
  6712                           
  6713                           ; BSR set to: 0
  6714  0003E6  0100               	movlb	0	; () banked
  6715  0003E8  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  6716  0003EA  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  6717                           
  6718                           ;doprnt.c: 542: continue;
  6719  0003EC  EF83  F007         	goto	l6409
  6720  0003F0                     l6129:
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;doprnt.c: 543: }
  6724                           ;doprnt.c: 546: width = 0;
  6725  0003F0  0E00               	movlw	0
  6726  0003F2  0100               	movlb	0	; () banked
  6727  0003F4  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  6728  0003F6  0E00               	movlw	0
  6729  0003F8  6FB2               	movwf	sprintf@width& (0+255),b
  6730                           
  6731                           ;doprnt.c: 548: flag = 0;
  6732  0003FA  0E00               	movlw	0
  6733  0003FC  0100               	movlb	0	; () banked
  6734  0003FE  6FB1               	movwf	(sprintf@flag+1)& (0+255),b
  6735  000400  0E00               	movlw	0
  6736  000402  6FB0               	movwf	sprintf@flag& (0+255),b
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6740  000404  C0A3  FFF6         	movff	sprintf@f,tblptrl
  6741  000408  C0A4  FFF7         	movff	sprintf@f+1,tblptrh
  6742  00040C                     	if	0	;tblptru may be non-zero
  6743  00040C                     	endif
  6744  00040C                     	if	0	;tblptru may be non-zero
  6745  00040C                     	endif
  6746  00040C  0008               	tblrd		*
  6747  00040E  50F5               	movf	tablat,w,c
  6748  000410  6EE6               	movwf	postinc1,c
  6749  000412  EC49  F020         	call	_isdigit	;wreg free
  6750  000416  A03A               	btfss	btemp,0,c
  6751  000418  D040               	goto	l6143
  6752                           
  6753                           ;doprnt.c: 598: width = 0;
  6754  00041A  0E00               	movlw	0
  6755  00041C  0100               	movlb	0	; () banked
  6756  00041E  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  6757  000420  0E00               	movlw	0
  6758  000422  6FB2               	movwf	sprintf@width& (0+255),b
  6759  000424                     l6135:
  6760                           
  6761                           ;doprnt.c: 600: width *= 10;
  6762  000424  0E0A               	movlw	10
  6763  000426  6EE6               	movwf	postinc1,c
  6764  000428  0E00               	movlw	0
  6765  00042A  6EE6               	movwf	postinc1,c
  6766  00042C  C0B2  FFE6         	movff	sprintf@width,postinc1
  6767  000430  C0B3  FFE6         	movff	sprintf@width+1,postinc1
  6768  000434  EC23  F01E         	call	___wmul	;wreg free
  6769  000438  C03A  F0B2         	movff	btemp,sprintf@width
  6770  00043C  C03B  F0B3         	movff	btemp+1,sprintf@width+1
  6771                           
  6772                           ;doprnt.c: 601: width += *f++ - '0';
  6773  000440  0ED0               	movlw	208
  6774  000442  0100               	movlb	0	; () banked
  6775  000444  6FA8               	movwf	??_sprintf& (0+255),b
  6776  000446  0EFF               	movlw	255
  6777  000448  0100               	movlb	0	; () banked
  6778  00044A  6FA9               	movwf	(??_sprintf+1)& (0+255),b
  6779  00044C  C0A3  FFF6         	movff	sprintf@f,tblptrl
  6780  000450  C0A4  FFF7         	movff	sprintf@f+1,tblptrh
  6781  000454                     	if	0	;tblptru may be non-zero
  6782  000454                     	endif
  6783  000454                     	if	0	;tblptru may be non-zero
  6784  000454                     	endif
  6785  000454  0008               	tblrd		*
  6786  000456  50F5               	movf	tablat,w,c
  6787  000458  0100               	movlb	0	; () banked
  6788  00045A  6FAA               	movwf	(??_sprintf+2)& (0+255),b
  6789  00045C  6BAB               	clrf	(??_sprintf+3)& (0+255),b
  6790  00045E  0100               	movlb	0	; () banked
  6791  000460  51A8               	movf	??_sprintf& (0+255),w,b
  6792  000462  0100               	movlb	0	; () banked
  6793  000464  27AA               	addwf	(??_sprintf+2)& (0+255),f,b
  6794  000466  0100               	movlb	0	; () banked
  6795  000468  51A9               	movf	(??_sprintf+1)& (0+255),w,b
  6796  00046A  0100               	movlb	0	; () banked
  6797  00046C  23AB               	addwfc	(??_sprintf+3)& (0+255),f,b
  6798  00046E  0100               	movlb	0	; () banked
  6799  000470  51AA               	movf	(??_sprintf+2)& (0+255),w,b
  6800  000472  0100               	movlb	0	; () banked
  6801  000474  27B2               	addwf	sprintf@width& (0+255),f,b
  6802  000476  0100               	movlb	0	; () banked
  6803  000478  51AB               	movf	(??_sprintf+3)& (0+255),w,b
  6804  00047A  0100               	movlb	0	; () banked
  6805  00047C  23B3               	addwfc	(sprintf@width+1)& (0+255),f,b
  6806                           
  6807                           ; BSR set to: 0
  6808  00047E  0100               	movlb	0	; () banked
  6809  000480  4BA3               	infsnz	sprintf@f& (0+255),f,b
  6810  000482  2BA4               	incf	(sprintf@f+1)& (0+255),f,b
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6814  000484  C0A3  FFF6         	movff	sprintf@f,tblptrl
  6815  000488  C0A4  FFF7         	movff	sprintf@f+1,tblptrh
  6816  00048C                     	if	0	;tblptru may be non-zero
  6817  00048C                     	endif
  6818  00048C                     	if	0	;tblptru may be non-zero
  6819  00048C                     	endif
  6820  00048C  0008               	tblrd		*
  6821  00048E  50F5               	movf	tablat,w,c
  6822  000490  6EE6               	movwf	postinc1,c
  6823  000492  EC49  F020         	call	_isdigit	;wreg free
  6824  000496  B03A               	btfsc	btemp,0,c
  6825  000498  D7C5               	goto	l6135
  6826  00049A                     l6143:
  6827                           
  6828                           ;doprnt.c: 608: }
  6829                           ;doprnt.c: 611: if(*f == '.') {
  6830  00049A  C0A3  FFF6         	movff	sprintf@f,tblptrl
  6831  00049E  C0A4  FFF7         	movff	sprintf@f+1,tblptrh
  6832  0004A2                     	if	0	;tblptru may be non-zero
  6833  0004A2                     	endif
  6834  0004A2                     	if	0	;tblptru may be non-zero
  6835  0004A2                     	endif
  6836  0004A2  0008               	tblrd		*
  6837  0004A4  50F5               	movf	tablat,w,c
  6838  0004A6  0A2E               	xorlw	46
  6839  0004A8  A4D8               	btfss	status,2,c
  6840  0004AA  D035               	goto	l6155
  6841                           
  6842                           ;doprnt.c: 612: flag |= 0x4000;
  6843  0004AC  0100               	movlb	0	; () banked
  6844  0004AE  8DB1               	bsf	(sprintf@flag+1)& (0+255),6,b
  6845                           
  6846                           ;doprnt.c: 613: f++;
  6847  0004B0  0100               	movlb	0	; () banked
  6848  0004B2  4BA3               	infsnz	sprintf@f& (0+255),f,b
  6849  0004B4  2BA4               	incf	(sprintf@f+1)& (0+255),f,b
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;doprnt.c: 620: {
  6853                           ;doprnt.c: 621: prec = 0;
  6854  0004B6  0E00               	movlw	0
  6855  0004B8  0100               	movlb	0	; () banked
  6856  0004BA  6FC2               	movwf	(sprintf@prec+1)& (0+255),b
  6857  0004BC  0E00               	movlw	0
  6858  0004BE  6FC1               	movwf	sprintf@prec& (0+255),b
  6859                           
  6860                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6861  0004C0  D01E               	goto	l6153
  6862  0004C2                     l6149:
  6863                           
  6864                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6865  0004C2  0E0A               	movlw	10
  6866  0004C4  6EE6               	movwf	postinc1,c
  6867  0004C6  0E00               	movlw	0
  6868  0004C8  6EE6               	movwf	postinc1,c
  6869  0004CA  C0C1  FFE6         	movff	sprintf@prec,postinc1
  6870  0004CE  C0C2  FFE6         	movff	sprintf@prec+1,postinc1
  6871  0004D2  EC23  F01E         	call	___wmul	;wreg free
  6872  0004D6  C0A3  FFF6         	movff	sprintf@f,tblptrl
  6873  0004DA  C0A4  FFF7         	movff	sprintf@f+1,tblptrh
  6874  0004DE                     	if	0	;tblptru may be non-zero
  6875  0004DE                     	endif
  6876  0004DE                     	if	0	;tblptru may be non-zero
  6877  0004DE                     	endif
  6878  0004DE  0008               	tblrd		*
  6879  0004E0  50F5               	movf	tablat,w,c
  6880  0004E2  263A               	addwf	btemp,f,c
  6881  0004E4  0E00               	movlw	0
  6882  0004E6  223B               	addwfc	btemp+1,f,c
  6883  0004E8  0ED0               	movlw	208
  6884  0004EA  243A               	addwf	btemp,w,c
  6885  0004EC  0100               	movlb	0	; () banked
  6886  0004EE  6FC1               	movwf	sprintf@prec& (0+255),b
  6887  0004F0  0EFF               	movlw	255
  6888  0004F2  203B               	addwfc	btemp+1,w,c
  6889  0004F4  0100               	movlb	0	; () banked
  6890  0004F6  6FC2               	movwf	(sprintf@prec+1)& (0+255),b
  6891                           
  6892                           ; BSR set to: 0
  6893  0004F8  0100               	movlb	0	; () banked
  6894  0004FA  4BA3               	infsnz	sprintf@f& (0+255),f,b
  6895  0004FC  2BA4               	incf	(sprintf@f+1)& (0+255),f,b
  6896  0004FE                     l6153:
  6897                           
  6898                           ; BSR set to: 0
  6899  0004FE  C0A3  FFF6         	movff	sprintf@f,tblptrl
  6900  000502  C0A4  FFF7         	movff	sprintf@f+1,tblptrh
  6901  000506                     	if	0	;tblptru may be non-zero
  6902  000506                     	endif
  6903  000506                     	if	0	;tblptru may be non-zero
  6904  000506                     	endif
  6905  000506  0008               	tblrd		*
  6906  000508  50F5               	movf	tablat,w,c
  6907  00050A  6EE6               	movwf	postinc1,c
  6908  00050C  EC49  F020         	call	_isdigit	;wreg free
  6909  000510  A03A               	btfss	btemp,0,c
  6910  000512  D00C               	goto	l6163
  6911  000514  D7D6               	goto	l6149
  6912  000516                     l6155:
  6913                           
  6914                           ;doprnt.c: 626: prec = 0;
  6915  000516  0E00               	movlw	0
  6916  000518  0100               	movlb	0	; () banked
  6917  00051A  6FC2               	movwf	(sprintf@prec+1)& (0+255),b
  6918  00051C  0E00               	movlw	0
  6919  00051E  6FC1               	movwf	sprintf@prec& (0+255),b
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;doprnt.c: 628: flag |= 0x1000;
  6923  000520  0100               	movlb	0	; () banked
  6924  000522  89B1               	bsf	(sprintf@flag+1)& (0+255),4,b
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;doprnt.c: 630: }
  6928                           ;doprnt.c: 635: switch(c = *f++) {
  6929  000524  D003               	goto	l6163
  6930  000526                     l6159:
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;doprnt.c: 663: flag |= 0x400;
  6934  000526  0100               	movlb	0	; () banked
  6935  000528  85B1               	bsf	(sprintf@flag+1)& (0+255),2,b
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;doprnt.c: 698: case 'i':
  6939                           ;doprnt.c: 699: break;
  6940                           
  6941                           ; BSR set to: 0
  6942                           
  6943                           ;doprnt.c: 697: case 'd':
  6944                           
  6945                           ;doprnt.c: 664: break;
  6946  00052A  D01A               	goto	l6165
  6947  00052C                     l6163:
  6948  00052C  C0A3  FFF6         	movff	sprintf@f,tblptrl
  6949  000530  C0A4  FFF7         	movff	sprintf@f+1,tblptrh
  6950  000534  0100               	movlb	0	; () banked
  6951  000536  4BA3               	infsnz	sprintf@f& (0+255),f,b
  6952  000538  2BA4               	incf	(sprintf@f+1)& (0+255),f,b
  6953  00053A                     	if	0	;tblptru may be non-zero
  6954  00053A                     	endif
  6955  00053A                     	if	0	;tblptru may be non-zero
  6956  00053A                     	endif
  6957  00053A  0008               	tblrd		*
  6958  00053C  CFF5 F0C3          	movff	tablat,sprintf@c
  6959  000540  0100               	movlb	0	; () banked
  6960  000542  51C3               	movf	sprintf@c& (0+255),w,b
  6961                           
  6962                           ; Switch size 1, requested type "space"
  6963                           ; Number of cases is 4, Range of values is 0 to 105
  6964                           ; switch strategies available:
  6965                           ; Name         Instructions Cycles
  6966                           ; simple_byte           13     7 (average)
  6967                           ;	Chosen strategy is simple_byte
  6968  000544  0A00               	xorlw	0	; case 0
  6969  000546  B4D8               	btfsc	status,2,c
  6970  000548  EF92  F007         	goto	l6411
  6971  00054C  0A64               	xorlw	100	; case 100
  6972  00054E  B4D8               	btfsc	status,2,c
  6973  000550  D007               	goto	l6165
  6974  000552  0A02               	xorlw	2	; case 102
  6975  000554  B4D8               	btfsc	status,2,c
  6976  000556  D7E7               	goto	l6159
  6977  000558  0A0F               	xorlw	15	; case 105
  6978  00055A  A4D8               	btfss	status,2,c
  6979  00055C  EF83  F007         	goto	l6409
  6980  000560                     l6165:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;doprnt.c: 825: if(flag & (0x700)) {
  6984  000560  0E07               	movlw	7
  6985  000562  0100               	movlb	0	; () banked
  6986  000564  15B1               	andwf	(sprintf@flag+1)& (0+255),w,b
  6987  000566  B4D8               	btfsc	status,2,c
  6988  000568  D366               	goto	l6329
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;doprnt.c: 827: if(flag & 0x1000)
  6992  00056A  0100               	movlb	0	; () banked
  6993  00056C  A9B1               	btfss	(sprintf@flag+1)& (0+255),4,b
  6994  00056E  D005               	goto	l6171
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;doprnt.c: 829: prec = 6;
  6998  000570  0E00               	movlw	0
  6999  000572  0100               	movlb	0	; () banked
  7000  000574  6FC2               	movwf	(sprintf@prec+1)& (0+255),b
  7001  000576  0E06               	movlw	6
  7002  000578  6FC1               	movwf	sprintf@prec& (0+255),b
  7003  00057A                     l6171:
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7007  00057A  C0AE  FFD9         	movff	sprintf@ap,fsr2l
  7008  00057E  C0AF  FFDA         	movff	sprintf@ap+1,fsr2h
  7009  000582  CFDE F0BE          	movff	postinc2,sprintf@fval
  7010  000586  CFDE F0BF          	movff	postinc2,sprintf@fval+1
  7011  00058A  CFDD F0C0          	movff	postdec2,sprintf@fval+2
  7012                           
  7013                           ; BSR set to: 0
  7014  00058E  0E03               	movlw	3
  7015  000590  0100               	movlb	0	; () banked
  7016  000592  27AE               	addwf	sprintf@ap& (0+255),f,b
  7017  000594  0E00               	movlw	0
  7018  000596  23AF               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;doprnt.c: 831: if(fval < 0.0) {
  7022  000598  0100               	movlb	0	; () banked
  7023  00059A  AFC0               	btfss	(sprintf@fval+2)& (0+255),7,b
  7024  00059C  D011               	goto	l6181
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;doprnt.c: 832: fval = -fval;
  7028  00059E  C0BE  F080         	movff	sprintf@fval,___ftneg@f1
  7029  0005A2  C0BF  F081         	movff	sprintf@fval+1,___ftneg@f1+1
  7030  0005A6  C0C0  F082         	movff	sprintf@fval+2,___ftneg@f1+2
  7031  0005AA  EC7F  F020         	call	___ftneg	;wreg free
  7032  0005AE  C080  F0BE         	movff	?___ftneg,sprintf@fval
  7033  0005B2  C081  F0BF         	movff	?___ftneg+1,sprintf@fval+1
  7034  0005B6  C082  F0C0         	movff	?___ftneg+2,sprintf@fval+2
  7035                           
  7036                           ;doprnt.c: 833: flag |= 0x03;
  7037  0005BA  0E03               	movlw	3
  7038  0005BC  0100               	movlb	0	; () banked
  7039  0005BE  13B0               	iorwf	sprintf@flag& (0+255),f,b
  7040  0005C0                     l6181:
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;doprnt.c: 834: }
  7044                           ;doprnt.c: 835: exp = 0;
  7045  0005C0  0E00               	movlw	0
  7046  0005C2  0100               	movlb	0	; () banked
  7047  0005C4  6FBD               	movwf	(sprintf@exp+1)& (0+255),b
  7048  0005C6  0E00               	movlw	0
  7049  0005C8  6FBC               	movwf	sprintf@exp& (0+255),b
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;doprnt.c: 836: if( fval!=0) {
  7053  0005CA  0100               	movlb	0	; () banked
  7054  0005CC  51BE               	movf	sprintf@fval& (0+255),w,b
  7055  0005CE  0100               	movlb	0	; () banked
  7056  0005D0  11BF               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7057  0005D2  0100               	movlb	0	; () banked
  7058  0005D4  11C0               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7059  0005D6  B4D8               	btfsc	status,2,c
  7060  0005D8  D092               	goto	l6209
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7064  0005DA  0E82               	movlw	130
  7065  0005DC  0100               	movlb	0	; () banked
  7066  0005DE  6FA8               	movwf	??_sprintf& (0+255),b
  7067  0005E0  0EFF               	movlw	255
  7068  0005E2  0100               	movlb	0	; () banked
  7069  0005E4  6FA9               	movwf	(??_sprintf+1)& (0+255),b
  7070  0005E6  C0BE  F0AA         	movff	sprintf@fval,??_sprintf+2
  7071  0005EA  C0BF  F0AB         	movff	sprintf@fval+1,??_sprintf+3
  7072  0005EE  C0C0  F0AC         	movff	sprintf@fval+2,??_sprintf+4
  7073  0005F2  C0C1  F0AD         	movff	sprintf@fval+3,??_sprintf+5
  7074  0005F6  0E10               	movlw	16
  7075  0005F8  D006               	goto	u7000
  7076  0005FA                     u7005:
  7077  0005FA  0100               	movlb	0	; () banked
  7078  0005FC  90D8               	bcf	status,0,c
  7079  0005FE  33AD               	rrcf	(??_sprintf+5)& (0+255),f,b
  7080  000600  33AC               	rrcf	(??_sprintf+4)& (0+255),f,b
  7081  000602  33AB               	rrcf	(??_sprintf+3)& (0+255),f,b
  7082  000604  33AA               	rrcf	(??_sprintf+2)& (0+255),f,b
  7083  000606                     u7000:
  7084  000606  2EE8               	decfsz	wreg,f,c
  7085  000608  D7F8               	goto	u7005
  7086  00060A  0100               	movlb	0	; () banked
  7087  00060C  51AA               	movf	(??_sprintf+2)& (0+255),w,b
  7088  00060E  0100               	movlb	0	; () banked
  7089  000610  25A8               	addwf	??_sprintf& (0+255),w,b
  7090  000612  0100               	movlb	0	; () banked
  7091  000614  6FBC               	movwf	sprintf@exp& (0+255),b
  7092  000616  0E00               	movlw	0
  7093  000618  0100               	movlb	0	; () banked
  7094  00061A  21A9               	addwfc	(??_sprintf+1)& (0+255),w,b
  7095  00061C  0100               	movlb	0	; () banked
  7096  00061E  6FBD               	movwf	(sprintf@exp+1)& (0+255),b
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;doprnt.c: 838: exp--;
  7100  000620  0100               	movlb	0	; () banked
  7101  000622  07BC               	decf	sprintf@exp& (0+255),f,b
  7102  000624  A0D8               	btfss	status,0,c
  7103  000626  07BD               	decf	(sprintf@exp+1)& (0+255),f,b
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;doprnt.c: 839: exp *= 3;
  7107  000628  0E03               	movlw	3
  7108  00062A  6EE6               	movwf	postinc1,c
  7109  00062C  0E00               	movlw	0
  7110  00062E  6EE6               	movwf	postinc1,c
  7111  000630  C0BC  FFE6         	movff	sprintf@exp,postinc1
  7112  000634  C0BD  FFE6         	movff	sprintf@exp+1,postinc1
  7113  000638  EC23  F01E         	call	___wmul	;wreg free
  7114  00063C  C03A  F0BC         	movff	btemp,sprintf@exp
  7115  000640  C03B  F0BD         	movff	btemp+1,sprintf@exp+1
  7116                           
  7117                           ;doprnt.c: 840: exp /= 10;
  7118  000644  C0BC  F086         	movff	sprintf@exp,___awdiv@dividend
  7119  000648  C0BD  F087         	movff	sprintf@exp+1,___awdiv@dividend+1
  7120  00064C  0E00               	movlw	0
  7121  00064E  0100               	movlb	0	; () banked
  7122  000650  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  7123  000652  0E0A               	movlw	10
  7124  000654  6F88               	movwf	___awdiv@divisor& (0+255),b
  7125  000656  EC21  F01C         	call	___awdiv	;wreg free
  7126  00065A  C086  F0BC         	movff	?___awdiv,sprintf@exp
  7127  00065E  C087  F0BD         	movff	?___awdiv+1,sprintf@exp+1
  7128                           
  7129                           ;doprnt.c: 841: if(exp < 0)
  7130  000662  0100               	movlb	0	; () banked
  7131  000664  AFBD               	btfss	(sprintf@exp+1)& (0+255),7,b
  7132  000666  D004               	goto	l6197
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;doprnt.c: 842: exp--;
  7136  000668  0100               	movlb	0	; () banked
  7137  00066A  07BC               	decf	sprintf@exp& (0+255),f,b
  7138  00066C  A0D8               	btfss	status,0,c
  7139  00066E  07BD               	decf	(sprintf@exp+1)& (0+255),f,b
  7140  000670                     l6197:
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  7144  000670  0100               	movlb	0	; () banked
  7145  000672  51BC               	movf	sprintf@exp& (0+255),w,b
  7146  000674  0800               	sublw	0
  7147  000676  EC99  F007         	call	_scale
  7148  00067A  C08E  F0B4         	movff	?_scale,sprintf@tmpval
  7149  00067E  C08F  F0B5         	movff	?_scale+1,sprintf@tmpval+1
  7150  000682  C090  F0B6         	movff	?_scale+2,sprintf@tmpval+2
  7151                           
  7152                           ;doprnt.c: 847: tmpval.integ *= fval;
  7153  000686  C0BE  FFE6         	movff	sprintf@fval,postinc1
  7154  00068A  C0BF  FFE6         	movff	sprintf@fval+1,postinc1
  7155  00068E  C0C0  FFE6         	movff	sprintf@fval+2,postinc1
  7156  000692  C0B4  FFE6         	movff	sprintf@tmpval,postinc1
  7157  000696  C0B5  FFE6         	movff	sprintf@tmpval+1,postinc1
  7158  00069A  C0B6  FFE6         	movff	sprintf@tmpval+2,postinc1
  7159  00069E  EC10  F012         	call	___ftmul	;wreg free
  7160  0006A2  C03A  F0B4         	movff	btemp,sprintf@tmpval
  7161  0006A6  C03B  F0B5         	movff	btemp+1,sprintf@tmpval+1
  7162  0006AA  C03C  F0B6         	movff	btemp+2,sprintf@tmpval+2
  7163                           
  7164                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  7165  0006AE  0E00               	movlw	0
  7166  0006B0  6EE6               	movwf	postinc1,c
  7167  0006B2  0E80               	movlw	128
  7168  0006B4  6EE6               	movwf	postinc1,c
  7169  0006B6  0E3F               	movlw	63
  7170  0006B8  6EE6               	movwf	postinc1,c
  7171  0006BA  C0B4  FFE6         	movff	sprintf@tmpval,postinc1
  7172  0006BE  C0B5  FFE6         	movff	sprintf@tmpval+1,postinc1
  7173  0006C2  C0B6  FFE6         	movff	sprintf@tmpval+2,postinc1
  7174  0006C6  ECDE  F01C         	call	___ftge	;wreg free
  7175  0006CA  B03A               	btfsc	btemp,0,c
  7176  0006CC  D005               	goto	l6205
  7177                           
  7178                           ;doprnt.c: 849: exp--;
  7179  0006CE  0100               	movlb	0	; () banked
  7180  0006D0  07BC               	decf	sprintf@exp& (0+255),f,b
  7181  0006D2  A0D8               	btfss	status,0,c
  7182  0006D4  07BD               	decf	(sprintf@exp+1)& (0+255),f,b
  7183  0006D6  D013               	goto	l6209
  7184  0006D8                     l6205:
  7185                           
  7186                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7187  0006D8  0E00               	movlw	0
  7188  0006DA  6EE6               	movwf	postinc1,c
  7189  0006DC  0E20               	movlw	32
  7190  0006DE  6EE6               	movwf	postinc1,c
  7191  0006E0  0E41               	movlw	65
  7192  0006E2  6EE6               	movwf	postinc1,c
  7193  0006E4  C0B4  FFE6         	movff	sprintf@tmpval,postinc1
  7194  0006E8  C0B5  FFE6         	movff	sprintf@tmpval+1,postinc1
  7195  0006EC  C0B6  FFE6         	movff	sprintf@tmpval+2,postinc1
  7196  0006F0  ECDE  F01C         	call	___ftge	;wreg free
  7197  0006F4  A03A               	btfss	btemp,0,c
  7198  0006F6  D003               	goto	l6209
  7199                           
  7200                           ;doprnt.c: 851: exp++;
  7201  0006F8  0100               	movlb	0	; () banked
  7202  0006FA  4BBC               	infsnz	sprintf@exp& (0+255),f,b
  7203  0006FC  2BBD               	incf	(sprintf@exp+1)& (0+255),f,b
  7204  0006FE                     l6209:
  7205                           
  7206                           ;doprnt.c: 852: }
  7207                           ;doprnt.c: 1112: if(prec <= 12)
  7208  0006FE  0100               	movlb	0	; () banked
  7209  000700  BFC2               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7210  000702  D008               	goto	l6211
  7211  000704  0100               	movlb	0	; () banked
  7212  000706  51C2               	movf	(sprintf@prec+1)& (0+255),w,b
  7213  000708  E11D               	bnz	l6213
  7214  00070A  0E0D               	movlw	13
  7215  00070C  0100               	movlb	0	; () banked
  7216  00070E  5DC1               	subwf	sprintf@prec& (0+255),w,b
  7217  000710  B0D8               	btfsc	status,0,c
  7218  000712  D018               	goto	l6213
  7219  000714                     l6211:
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;doprnt.c: 1113: fval += fround(prec);
  7223  000714  0100               	movlb	0	; () banked
  7224  000716  51C1               	movf	sprintf@prec& (0+255),w,b
  7225  000718  EC7A  F00E         	call	_fround
  7226  00071C  C08E  FFE6         	movff	?_fround,postinc1
  7227  000720  C08F  FFE6         	movff	?_fround+1,postinc1
  7228  000724  C090  FFE6         	movff	?_fround+2,postinc1
  7229  000728  C0BE  FFE6         	movff	sprintf@fval,postinc1
  7230  00072C  C0BF  FFE6         	movff	sprintf@fval+1,postinc1
  7231  000730  C0C0  FFE6         	movff	sprintf@fval+2,postinc1
  7232  000734  EC76  F00B         	call	___ftadd	;wreg free
  7233  000738  C03A  F0BE         	movff	btemp,sprintf@fval
  7234  00073C  C03B  F0BF         	movff	btemp+1,sprintf@fval+1
  7235  000740  C03C  F0C0         	movff	btemp+2,sprintf@fval+2
  7236  000744                     l6213:
  7237                           
  7238                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7239  000744  0100               	movlb	0	; () banked
  7240  000746  BFBD               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7241  000748  D008               	goto	l6215
  7242  00074A  0100               	movlb	0	; () banked
  7243  00074C  51BD               	movf	(sprintf@exp+1)& (0+255),w,b
  7244  00074E  E12A               	bnz	l6221
  7245  000750  0E0A               	movlw	10
  7246  000752  0100               	movlb	0	; () banked
  7247  000754  5DBC               	subwf	sprintf@exp& (0+255),w,b
  7248  000756  B0D8               	btfsc	status,0,c
  7249  000758  D025               	goto	l6221
  7250  00075A                     l6215:
  7251                           
  7252                           ; BSR set to: 0
  7253  00075A  0100               	movlb	0	; () banked
  7254  00075C  51BE               	movf	sprintf@fval& (0+255),w,b
  7255  00075E  0100               	movlb	0	; () banked
  7256  000760  11BF               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7257  000762  0100               	movlb	0	; () banked
  7258  000764  11C0               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7259  000766  B4D8               	btfsc	status,2,c
  7260  000768  D05F               	goto	l6235
  7261                           
  7262                           ; BSR set to: 0
  7263  00076A  C0BE  F092         	movff	sprintf@fval,___fttol@f1
  7264  00076E  C0BF  F093         	movff	sprintf@fval+1,___fttol@f1+1
  7265  000772  C0C0  F094         	movff	sprintf@fval+2,___fttol@f1+2
  7266  000776  EC0B  F017         	call	___fttol	;wreg free
  7267  00077A  0100               	movlb	0	; () banked
  7268  00077C  5192               	movf	?___fttol& (0+255),w,b
  7269  00077E  0100               	movlb	0	; () banked
  7270  000780  1193               	iorwf	(?___fttol+1)& (0+255),w,b
  7271  000782  0100               	movlb	0	; () banked
  7272  000784  1194               	iorwf	(?___fttol+2)& (0+255),w,b
  7273  000786  0100               	movlb	0	; () banked
  7274  000788  1195               	iorwf	(?___fttol+3)& (0+255),w,b
  7275  00078A  A4D8               	btfss	status,2,c
  7276  00078C  D04D               	goto	l6235
  7277                           
  7278                           ; BSR set to: 0
  7279  00078E  0100               	movlb	0	; () banked
  7280  000790  BFBD               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7281  000792  D04A               	goto	l6235
  7282  000794  0100               	movlb	0	; () banked
  7283  000796  51BD               	movf	(sprintf@exp+1)& (0+255),w,b
  7284  000798  E105               	bnz	l6221
  7285  00079A  0E02               	movlw	2
  7286  00079C  0100               	movlb	0	; () banked
  7287  00079E  5DBC               	subwf	sprintf@exp& (0+255),w,b
  7288  0007A0  A0D8               	btfss	status,0,c
  7289  0007A2  D042               	goto	l6235
  7290  0007A4                     l6221:
  7291                           
  7292                           ; BSR set to: 0
  7293                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7294  0007A4  0E70               	movlw	112
  7295  0007A6  6EE6               	movwf	postinc1,c
  7296  0007A8  0E89               	movlw	137
  7297  0007AA  6EE6               	movwf	postinc1,c
  7298  0007AC  0E40               	movlw	64
  7299  0007AE  6EE6               	movwf	postinc1,c
  7300  0007B0  C0B4  FFE6         	movff	sprintf@tmpval,postinc1
  7301  0007B4  C0B5  FFE6         	movff	sprintf@tmpval+1,postinc1
  7302  0007B8  C0B6  FFE6         	movff	sprintf@tmpval+2,postinc1
  7303  0007BC  ECDE  F01C         	call	___ftge	;wreg free
  7304  0007C0  B03A               	btfsc	btemp,0,c
  7305  0007C2  D003               	goto	l6225
  7306                           
  7307                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7308  0007C4  0100               	movlb	0	; () banked
  7309  0007C6  0EF7               	movlw	247
  7310  0007C8  D002               	goto	L1
  7311  0007CA                     l6225:
  7312                           
  7313                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7314  0007CA  0100               	movlb	0	; () banked
  7315  0007CC  0EF8               	movlw	248
  7316  0007CE                     L1:
  7317  0007CE  27BC               	addwf	sprintf@exp& (0+255),f,b
  7318  0007D0  0EFF               	movlw	255
  7319  0007D2  23BD               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7320                           
  7321                           ; BSR set to: 0
  7322                           ;doprnt.c: 1124: }
  7323                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7324                           
  7325                           ; BSR set to: 0
  7326  0007D4  0100               	movlb	0	; () banked
  7327  0007D6  51BC               	movf	sprintf@exp& (0+255),w,b
  7328  0007D8  EC99  F007         	call	_scale
  7329  0007DC  C08E  F0B4         	movff	?_scale,sprintf@tmpval
  7330  0007E0  C08F  F0B5         	movff	?_scale+1,sprintf@tmpval+1
  7331  0007E4  C090  F0B6         	movff	?_scale+2,sprintf@tmpval+2
  7332                           
  7333                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7334  0007E8  C0BE  F080         	movff	sprintf@fval,__tdiv_to_l_@f1
  7335  0007EC  C0BF  F081         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  7336  0007F0  C0C0  F082         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  7337  0007F4  C0B4  F083         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  7338  0007F8  C0B5  F084         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  7339  0007FC  C0B6  F085         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  7340  000800  ECFD  F013         	call	__tdiv_to_l_	;wreg free
  7341  000804  C080  F0B8         	movff	?__tdiv_to_l_,sprintf@val
  7342  000808  C081  F0B9         	movff	?__tdiv_to_l_+1,sprintf@val+1
  7343  00080C  C082  F0BA         	movff	?__tdiv_to_l_+2,sprintf@val+2
  7344  000810  C083  F0BB         	movff	?__tdiv_to_l_+3,sprintf@val+3
  7345                           
  7346                           ;doprnt.c: 1129: fval = 0.0;
  7347  000814  0E00               	movlw	0
  7348  000816  0100               	movlb	0	; () banked
  7349  000818  6FBE               	movwf	sprintf@fval& (0+255),b
  7350  00081A  0E00               	movlw	0
  7351  00081C  0100               	movlb	0	; () banked
  7352  00081E  6FBF               	movwf	(sprintf@fval+1)& (0+255),b
  7353  000820  0E00               	movlw	0
  7354  000822  0100               	movlb	0	; () banked
  7355  000824  6FC0               	movwf	(sprintf@fval+2)& (0+255),b
  7356                           
  7357                           ;doprnt.c: 1130: } else {
  7358  000826  D033               	goto	l6241
  7359  000828                     l6235:
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7363  000828  C0BE  F092         	movff	sprintf@fval,___fttol@f1
  7364  00082C  C0BF  F093         	movff	sprintf@fval+1,___fttol@f1+1
  7365  000830  C0C0  F094         	movff	sprintf@fval+2,___fttol@f1+2
  7366  000834  EC0B  F017         	call	___fttol	;wreg free
  7367  000838  C092  F0B8         	movff	?___fttol,sprintf@val
  7368  00083C  C093  F0B9         	movff	?___fttol+1,sprintf@val+1
  7369  000840  C094  F0BA         	movff	?___fttol+2,sprintf@val+2
  7370  000844  C095  F0BB         	movff	?___fttol+3,sprintf@val+3
  7371                           
  7372                           ;doprnt.c: 1132: fval -= (double)val;
  7373  000848  C0BE  F089         	movff	sprintf@fval,___ftsub@f1
  7374  00084C  C0BF  F08A         	movff	sprintf@fval+1,___ftsub@f1+1
  7375  000850  C0C0  F08B         	movff	sprintf@fval+2,___ftsub@f1+2
  7376  000854  C0B8  F080         	movff	sprintf@val,___lltoft@c
  7377  000858  C0B9  F081         	movff	sprintf@val+1,___lltoft@c+1
  7378  00085C  C0BA  F082         	movff	sprintf@val+2,___lltoft@c+2
  7379  000860  C0BB  F083         	movff	sprintf@val+3,___lltoft@c+3
  7380  000864  EC37  F01F         	call	___lltoft	;wreg free
  7381  000868  C080  F08C         	movff	?___lltoft,___ftsub@f2
  7382  00086C  C081  F08D         	movff	?___lltoft+1,___ftsub@f2+1
  7383  000870  C082  F08E         	movff	?___lltoft+2,___ftsub@f2+2
  7384  000874  EC23  F020         	call	___ftsub	;wreg free
  7385  000878  C089  F0BE         	movff	?___ftsub,sprintf@fval
  7386  00087C  C08A  F0BF         	movff	?___ftsub+1,sprintf@fval+1
  7387  000880  C08B  F0C0         	movff	?___ftsub+2,sprintf@fval+2
  7388                           
  7389                           ;doprnt.c: 1133: exp = 0;
  7390  000884  0E00               	movlw	0
  7391  000886  0100               	movlb	0	; () banked
  7392  000888  6FBD               	movwf	(sprintf@exp+1)& (0+255),b
  7393  00088A  0E00               	movlw	0
  7394  00088C  6FBC               	movwf	sprintf@exp& (0+255),b
  7395  00088E                     l6241:
  7396                           
  7397                           ; BSR set to: 0
  7398                           ;doprnt.c: 1134: }
  7399                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7400  00088E  0E01               	movlw	1
  7401  000890  0100               	movlb	0	; () banked
  7402  000892  6FC3               	movwf	sprintf@c& (0+255),b
  7403  000894                     l6243:
  7404                           
  7405                           ; BSR set to: 0
  7406  000894  0E0A               	movlw	10
  7407  000896  0100               	movlb	0	; () banked
  7408  000898  19C3               	xorwf	sprintf@c& (0+255),w,b
  7409  00089A  B4D8               	btfsc	status,2,c
  7410  00089C  D01E               	goto	l6255
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;doprnt.c: 1137: if(val < dpowers[c])
  7414                           
  7415                           ; BSR set to: 0
  7416                           
  7417                           ; BSR set to: 0
  7418  00089E  0100               	movlb	0	; () banked
  7419  0008A0  51C3               	movf	sprintf@c& (0+255),w,b
  7420  0008A2  0D04               	mullw	4
  7421  0008A4  0E55               	movlw	low _dpowers
  7422  0008A6  24F3               	addwf	prodl,w,c
  7423  0008A8  6EF6               	movwf	tblptrl,c
  7424  0008AA  0E75               	movlw	high _dpowers
  7425  0008AC  20F4               	addwfc	prodh,w,c
  7426  0008AE  6EF7               	movwf	tblptrh,c
  7427  0008B0                     	if	0	;There are less than 3 active tblptr bytes
  7428  0008B0                     	endif
  7429  0008B0  0009               	tblrd		*+
  7430  0008B2  50F5               	movf	tablat,w,c
  7431  0008B4  0100               	movlb	0	; () banked
  7432  0008B6  5DB8               	subwf	sprintf@val& (0+255),w,b
  7433  0008B8  0009               	tblrd		*+
  7434  0008BA  50F5               	movf	tablat,w,c
  7435  0008BC  0100               	movlb	0	; () banked
  7436  0008BE  59B9               	subwfb	(sprintf@val+1)& (0+255),w,b
  7437  0008C0  0009               	tblrd		*+
  7438  0008C2  50F5               	movf	tablat,w,c
  7439  0008C4  0100               	movlb	0	; () banked
  7440  0008C6  59BA               	subwfb	(sprintf@val+2)& (0+255),w,b
  7441  0008C8  0009               	tblrd		*+
  7442  0008CA  50F5               	movf	tablat,w,c
  7443  0008CC  0100               	movlb	0	; () banked
  7444  0008CE  59BB               	subwfb	(sprintf@val+3)& (0+255),w,b
  7445  0008D0  A0D8               	btfss	status,0,c
  7446  0008D2  D003               	goto	l6255
  7447                           
  7448                           ; BSR set to: 0
  7449                           
  7450                           ; BSR set to: 0
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;doprnt.c: 1138: break;
  7454  0008D4  0100               	movlb	0	; () banked
  7455  0008D6  2BC3               	incf	sprintf@c& (0+255),f,b
  7456  0008D8  D7DD               	goto	l6243
  7457  0008DA                     l6255:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;doprnt.c: 1142: width -= prec + c + exp;
  7461  0008DA  C0C3  F0A8         	movff	sprintf@c,??_sprintf
  7462  0008DE  0100               	movlb	0	; () banked
  7463  0008E0  6BA9               	clrf	(??_sprintf+1)& (0+255),b
  7464  0008E2  BFA8               	btfsc	??_sprintf& (0+255),7,b
  7465  0008E4  07A9               	decf	(??_sprintf+1)& (0+255),f,b
  7466  0008E6  0100               	movlb	0	; () banked
  7467  0008E8  51C1               	movf	sprintf@prec& (0+255),w,b
  7468  0008EA  0100               	movlb	0	; () banked
  7469  0008EC  27A8               	addwf	??_sprintf& (0+255),f,b
  7470  0008EE  0100               	movlb	0	; () banked
  7471  0008F0  51C2               	movf	(sprintf@prec+1)& (0+255),w,b
  7472  0008F2  0100               	movlb	0	; () banked
  7473  0008F4  23A9               	addwfc	(??_sprintf+1)& (0+255),f,b
  7474  0008F6  0100               	movlb	0	; () banked
  7475  0008F8  51BC               	movf	sprintf@exp& (0+255),w,b
  7476  0008FA  0100               	movlb	0	; () banked
  7477  0008FC  27A8               	addwf	??_sprintf& (0+255),f,b
  7478  0008FE  0100               	movlb	0	; () banked
  7479  000900  51BD               	movf	(sprintf@exp+1)& (0+255),w,b
  7480  000902  0100               	movlb	0	; () banked
  7481  000904  23A9               	addwfc	(??_sprintf+1)& (0+255),f,b
  7482  000906  0100               	movlb	0	; () banked
  7483  000908  51A8               	movf	??_sprintf& (0+255),w,b
  7484  00090A  0100               	movlb	0	; () banked
  7485  00090C  5FB2               	subwf	sprintf@width& (0+255),f,b
  7486  00090E  0100               	movlb	0	; () banked
  7487  000910  51A9               	movf	(??_sprintf+1)& (0+255),w,b
  7488  000912  0100               	movlb	0	; () banked
  7489  000914  5BB3               	subwfb	(sprintf@width+1)& (0+255),f,b
  7490                           
  7491                           ;doprnt.c: 1143: if(
  7492                           ;doprnt.c: 1147: prec)
  7493  000916  0100               	movlb	0	; () banked
  7494  000918  51C1               	movf	sprintf@prec& (0+255),w,b
  7495  00091A  0100               	movlb	0	; () banked
  7496  00091C  11C2               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7497  00091E  B4D8               	btfsc	status,2,c
  7498  000920  D004               	goto	l6259
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;doprnt.c: 1148: width--;
  7502  000922  0100               	movlb	0	; () banked
  7503  000924  07B2               	decf	sprintf@width& (0+255),f,b
  7504  000926  A0D8               	btfss	status,0,c
  7505  000928  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  7506  00092A                     l6259:
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;doprnt.c: 1149: if(flag & 0x03)
  7510  00092A  0E03               	movlw	3
  7511  00092C  0100               	movlb	0	; () banked
  7512  00092E  15B0               	andwf	sprintf@flag& (0+255),w,b
  7513  000930  0100               	movlb	0	; () banked
  7514  000932  6FA8               	movwf	??_sprintf& (0+255),b
  7515  000934  0E00               	movlw	0
  7516  000936  0100               	movlb	0	; () banked
  7517  000938  15B1               	andwf	(sprintf@flag+1)& (0+255),w,b
  7518  00093A  0100               	movlb	0	; () banked
  7519  00093C  6FA9               	movwf	(??_sprintf+1)& (0+255),b
  7520  00093E  0100               	movlb	0	; () banked
  7521  000940  51A8               	movf	??_sprintf& (0+255),w,b
  7522  000942  0100               	movlb	0	; () banked
  7523  000944  11A9               	iorwf	(??_sprintf+1)& (0+255),w,b
  7524  000946  B4D8               	btfsc	status,2,c
  7525  000948  D00E               	goto	l6269
  7526  00094A  D009               	goto	l6267
  7527  00094C                     l6263:
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7531  00094C  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  7532  000950  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  7533  000954  0E20               	movlw	32
  7534  000956  6EDF               	movwf	indf2,c
  7535                           
  7536                           ; BSR set to: 0
  7537  000958  0100               	movlb	0	; () banked
  7538  00095A  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  7539  00095C  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  7540  00095E                     l6267:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;doprnt.c: 1182: width--;
  7544  00095E  0100               	movlb	0	; () banked
  7545  000960  07B2               	decf	sprintf@width& (0+255),f,b
  7546  000962  A0D8               	btfss	status,0,c
  7547  000964  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  7548  000966                     l6269:
  7549                           
  7550                           ; BSR set to: 0
  7551  000966  0100               	movlb	0	; () banked
  7552  000968  BFB3               	btfsc	(sprintf@width+1)& (0+255),7,b
  7553  00096A  D007               	goto	l6271
  7554  00096C  0100               	movlb	0	; () banked
  7555  00096E  51B3               	movf	(sprintf@width+1)& (0+255),w,b
  7556  000970  E1ED               	bnz	l6263
  7557  000972  0100               	movlb	0	; () banked
  7558  000974  05B2               	decf	sprintf@width& (0+255),w,b
  7559  000976  B0D8               	btfsc	status,0,c
  7560  000978  D7E9               	goto	l6263
  7561  00097A                     l6271:
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;doprnt.c: 1183: }
  7565                           ;doprnt.c: 1188: if(flag & 0x03)
  7566  00097A  0E03               	movlw	3
  7567  00097C  0100               	movlb	0	; () banked
  7568  00097E  15B0               	andwf	sprintf@flag& (0+255),w,b
  7569  000980  0100               	movlb	0	; () banked
  7570  000982  6FA8               	movwf	??_sprintf& (0+255),b
  7571  000984  0E00               	movlw	0
  7572  000986  0100               	movlb	0	; () banked
  7573  000988  15B1               	andwf	(sprintf@flag+1)& (0+255),w,b
  7574  00098A  0100               	movlb	0	; () banked
  7575  00098C  6FA9               	movwf	(??_sprintf+1)& (0+255),b
  7576  00098E  0100               	movlb	0	; () banked
  7577  000990  51A8               	movf	??_sprintf& (0+255),w,b
  7578  000992  0100               	movlb	0	; () banked
  7579  000994  11A9               	iorwf	(??_sprintf+1)& (0+255),w,b
  7580  000996  B4D8               	btfsc	status,2,c
  7581  000998  D055               	goto	l6285
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7585  00099A  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  7586  00099E  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  7587  0009A2  0E2D               	movlw	45
  7588  0009A4  D04D               	goto	L2
  7589  0009A6                     l6275:
  7590                           
  7591                           ; BSR set to: 0
  7592  0009A6  0100               	movlb	0	; () banked
  7593  0009A8  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  7594  0009AA  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;doprnt.c: 1195: }
  7598                           ;doprnt.c: 1196: while(c--) {
  7599  0009AC  D04B               	goto	l6285
  7600  0009AE                     l6277:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;doprnt.c: 1200: {
  7604                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7605  0009AE  C0B8  F080         	movff	sprintf@val,___lldiv@dividend
  7606  0009B2  C0B9  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  7607  0009B6  C0BA  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  7608  0009BA  C0BB  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  7609  0009BE  0100               	movlb	0	; () banked
  7610  0009C0  51C3               	movf	sprintf@c& (0+255),w,b
  7611  0009C2  0D04               	mullw	4
  7612  0009C4  0E55               	movlw	low _dpowers
  7613  0009C6  24F3               	addwf	prodl,w,c
  7614  0009C8  6EF6               	movwf	tblptrl,c
  7615  0009CA  0E75               	movlw	high _dpowers
  7616  0009CC  20F4               	addwfc	prodh,w,c
  7617  0009CE  6EF7               	movwf	tblptrh,c
  7618  0009D0                     	if	0	;There are less than 3 active tblptr bytes
  7619  0009D0                     	endif
  7620  0009D0  0009               	tblrd		*+
  7621  0009D2  CFF5 F084          	movff	tablat,___lldiv@divisor
  7622  0009D6  0009               	tblrd		*+
  7623  0009D8  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  7624  0009DC  0009               	tblrd		*+
  7625  0009DE  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  7626  0009E2  000A               	tblrd		*-
  7627  0009E4  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  7628  0009E8  EC80  F01C         	call	___lldiv	;wreg free
  7629  0009EC  C080  F0B4         	movff	?___lldiv,sprintf@tmpval
  7630  0009F0  C081  F0B5         	movff	?___lldiv+1,sprintf@tmpval+1
  7631  0009F4  C082  F0B6         	movff	?___lldiv+2,sprintf@tmpval+2
  7632  0009F8  C083  F0B7         	movff	?___lldiv+3,sprintf@tmpval+3
  7633                           
  7634                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7635  0009FC  C0B4  F08D         	movff	sprintf@tmpval,___llmod@dividend
  7636  000A00  C0B5  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7637  000A04  C0B6  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7638  000A08  C0B7  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7639  000A0C  0E0A               	movlw	10
  7640  000A0E  0100               	movlb	0	; () banked
  7641  000A10  6F91               	movwf	___llmod@divisor& (0+255),b
  7642  000A12  0E00               	movlw	0
  7643  000A14  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  7644  000A16  0E00               	movlw	0
  7645  000A18  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  7646  000A1A  0E00               	movlw	0
  7647  000A1C  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  7648  000A1E  ECD6  F01D         	call	___llmod	;wreg free
  7649  000A22  C08D  F0B4         	movff	?___llmod,sprintf@tmpval
  7650  000A26  C08E  F0B5         	movff	?___llmod+1,sprintf@tmpval+1
  7651  000A2A  C08F  F0B6         	movff	?___llmod+2,sprintf@tmpval+2
  7652  000A2E  C090  F0B7         	movff	?___llmod+3,sprintf@tmpval+3
  7653                           
  7654                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7655  000A32  0100               	movlb	0	; () banked
  7656  000A34  51B4               	movf	sprintf@tmpval& (0+255),w,b
  7657  000A36  0F30               	addlw	48
  7658  000A38  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  7659  000A3C  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  7660  000A40                     L2:
  7661  000A40  6EDF               	movwf	indf2,c
  7662  000A42  D7B1               	goto	l6275
  7663  000A44                     l6285:
  7664                           
  7665                           ; BSR set to: 0
  7666  000A44  0100               	movlb	0	; () banked
  7667  000A46  07C3               	decf	sprintf@c& (0+255),f,b
  7668  000A48  0100               	movlb	0	; () banked
  7669  000A4A  29C3               	incf	sprintf@c& (0+255),w,b
  7670  000A4C  B4D8               	btfsc	status,2,c
  7671  000A4E  D00E               	goto	l6293
  7672  000A50  D7AE               	goto	l6277
  7673  000A52                     l6287:
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7677  000A52  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  7678  000A56  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  7679  000A5A  0E30               	movlw	48
  7680  000A5C  6EDF               	movwf	indf2,c
  7681                           
  7682                           ; BSR set to: 0
  7683  000A5E  0100               	movlb	0	; () banked
  7684  000A60  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  7685  000A62  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;doprnt.c: 1209: exp--;
  7689  000A64  0100               	movlb	0	; () banked
  7690  000A66  07BC               	decf	sprintf@exp& (0+255),f,b
  7691  000A68  A0D8               	btfss	status,0,c
  7692  000A6A  07BD               	decf	(sprintf@exp+1)& (0+255),f,b
  7693  000A6C                     l6293:
  7694                           
  7695                           ; BSR set to: 0
  7696  000A6C  0100               	movlb	0	; () banked
  7697  000A6E  BFBD               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7698  000A70  D007               	goto	l6295
  7699  000A72  0100               	movlb	0	; () banked
  7700  000A74  51BD               	movf	(sprintf@exp+1)& (0+255),w,b
  7701  000A76  E1ED               	bnz	l6287
  7702  000A78  0100               	movlb	0	; () banked
  7703  000A7A  05BC               	decf	sprintf@exp& (0+255),w,b
  7704  000A7C  B0D8               	btfsc	status,0,c
  7705  000A7E  D7E9               	goto	l6287
  7706  000A80                     l6295:
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;doprnt.c: 1210: }
  7710                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7711  000A80  0100               	movlb	0	; () banked
  7712  000A82  BFC2               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7713  000A84  D00C               	goto	l696
  7714  000A86  0100               	movlb	0	; () banked
  7715  000A88  51C2               	movf	(sprintf@prec+1)& (0+255),w,b
  7716  000A8A  E105               	bnz	u7190
  7717  000A8C  0E09               	movlw	9
  7718  000A8E  0100               	movlb	0	; () banked
  7719  000A90  5DC1               	subwf	sprintf@prec& (0+255),w,b
  7720  000A92  A0D8               	btfss	status,0,c
  7721  000A94  D004               	goto	l696
  7722  000A96                     u7190:
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7726  000A96  0E08               	movlw	8
  7727  000A98  0100               	movlb	0	; () banked
  7728  000A9A  6FC3               	movwf	sprintf@c& (0+255),b
  7729  000A9C  D002               	goto	l6299
  7730  000A9E                     l696:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;doprnt.c: 1213: else
  7734                           ;doprnt.c: 1214: c = prec;
  7735  000A9E  C0C1  F0C3         	movff	sprintf@prec,sprintf@c
  7736  000AA2                     l6299:
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;doprnt.c: 1215: prec -= c;
  7740  000AA2  0100               	movlb	0	; () banked
  7741  000AA4  51C3               	movf	sprintf@c& (0+255),w,b
  7742  000AA6  0100               	movlb	0	; () banked
  7743  000AA8  5FC1               	subwf	sprintf@prec& (0+255),f,b
  7744  000AAA  0E00               	movlw	0
  7745  000AAC  0100               	movlb	0	; () banked
  7746  000AAE  BFC3               	btfsc	sprintf@c& (0+255),7,b
  7747  000AB0  0EFF               	movlw	255
  7748  000AB2  0100               	movlb	0	; () banked
  7749  000AB4  5BC2               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;doprnt.c: 1219: if(c)
  7753  000AB6  0100               	movlb	0	; () banked
  7754  000AB8  51C3               	movf	sprintf@c& (0+255),w,b
  7755  000ABA  0100               	movlb	0	; () banked
  7756  000ABC  B4D8               	btfsc	status,2,c
  7757  000ABE  D009               	goto	l6307
  7758                           
  7759                           ; BSR set to: 0
  7760                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7761  000AC0  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  7762  000AC4  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  7763  000AC8  0E2E               	movlw	46
  7764  000ACA  6EDF               	movwf	indf2,c
  7765                           
  7766                           ; BSR set to: 0
  7767  000ACC  0100               	movlb	0	; () banked
  7768  000ACE  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  7769  000AD0  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  7770  000AD2                     l6307:
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7774  000AD2  C0BE  FFE6         	movff	sprintf@fval,postinc1
  7775  000AD6  C0BF  FFE6         	movff	sprintf@fval+1,postinc1
  7776  000ADA  C0C0  FFE6         	movff	sprintf@fval+2,postinc1
  7777  000ADE  0100               	movlb	0	; () banked
  7778  000AE0  51C3               	movf	sprintf@c& (0+255),w,b
  7779  000AE2  EC99  F007         	call	_scale
  7780  000AE6  C08E  FFE6         	movff	?_scale,postinc1
  7781  000AEA  C08F  FFE6         	movff	?_scale+1,postinc1
  7782  000AEE  C090  FFE6         	movff	?_scale+2,postinc1
  7783  000AF2  EC10  F012         	call	___ftmul	;wreg free
  7784  000AF6  C03A  F092         	movff	btemp,___fttol@f1
  7785  000AFA  C03B  F093         	movff	btemp+1,___fttol@f1+1
  7786  000AFE  C03C  F094         	movff	btemp+2,___fttol@f1+2
  7787  000B02  EC0B  F017         	call	___fttol	;wreg free
  7788  000B06  C092  F0B8         	movff	?___fttol,sprintf@val
  7789  000B0A  C093  F0B9         	movff	?___fttol+1,sprintf@val+1
  7790  000B0E  C094  F0BA         	movff	?___fttol+2,sprintf@val+2
  7791  000B12  C095  F0BB         	movff	?___fttol+3,sprintf@val+3
  7792                           
  7793                           ;doprnt.c: 1228: while(c--) {
  7794  000B16  D074               	goto	l6319
  7795  000B18                     l6309:
  7796                           
  7797                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7798  000B18  C0B8  F080         	movff	sprintf@val,___lldiv@dividend
  7799  000B1C  C0B9  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  7800  000B20  C0BA  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  7801  000B24  C0BB  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  7802  000B28  0100               	movlb	0	; () banked
  7803  000B2A  51C3               	movf	sprintf@c& (0+255),w,b
  7804  000B2C  0D04               	mullw	4
  7805  000B2E  0E55               	movlw	low _dpowers
  7806  000B30  24F3               	addwf	prodl,w,c
  7807  000B32  6EF6               	movwf	tblptrl,c
  7808  000B34  0E75               	movlw	high _dpowers
  7809  000B36  20F4               	addwfc	prodh,w,c
  7810  000B38  6EF7               	movwf	tblptrh,c
  7811  000B3A                     	if	0	;There are less than 3 active tblptr bytes
  7812  000B3A                     	endif
  7813  000B3A  0009               	tblrd		*+
  7814  000B3C  CFF5 F084          	movff	tablat,___lldiv@divisor
  7815  000B40  0009               	tblrd		*+
  7816  000B42  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  7817  000B46  0009               	tblrd		*+
  7818  000B48  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  7819  000B4C  000A               	tblrd		*-
  7820  000B4E  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  7821  000B52  EC80  F01C         	call	___lldiv	;wreg free
  7822  000B56  C080  F0B4         	movff	?___lldiv,sprintf@tmpval
  7823  000B5A  C081  F0B5         	movff	?___lldiv+1,sprintf@tmpval+1
  7824  000B5E  C082  F0B6         	movff	?___lldiv+2,sprintf@tmpval+2
  7825  000B62  C083  F0B7         	movff	?___lldiv+3,sprintf@tmpval+3
  7826                           
  7827                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7828  000B66  C0B4  F08D         	movff	sprintf@tmpval,___llmod@dividend
  7829  000B6A  C0B5  F08E         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7830  000B6E  C0B6  F08F         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7831  000B72  C0B7  F090         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7832  000B76  0E0A               	movlw	10
  7833  000B78  0100               	movlb	0	; () banked
  7834  000B7A  6F91               	movwf	___llmod@divisor& (0+255),b
  7835  000B7C  0E00               	movlw	0
  7836  000B7E  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  7837  000B80  0E00               	movlw	0
  7838  000B82  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  7839  000B84  0E00               	movlw	0
  7840  000B86  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  7841  000B88  ECD6  F01D         	call	___llmod	;wreg free
  7842  000B8C  C08D  F0B4         	movff	?___llmod,sprintf@tmpval
  7843  000B90  C08E  F0B5         	movff	?___llmod+1,sprintf@tmpval+1
  7844  000B94  C08F  F0B6         	movff	?___llmod+2,sprintf@tmpval+2
  7845  000B98  C090  F0B7         	movff	?___llmod+3,sprintf@tmpval+3
  7846                           
  7847                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7848  000B9C  0100               	movlb	0	; () banked
  7849  000B9E  51B4               	movf	sprintf@tmpval& (0+255),w,b
  7850  000BA0  0F30               	addlw	48
  7851  000BA2  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  7852  000BA6  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  7853  000BAA  6EDF               	movwf	indf2,c
  7854                           
  7855                           ; BSR set to: 0
  7856  000BAC  0100               	movlb	0	; () banked
  7857  000BAE  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  7858  000BB0  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;doprnt.c: 1232: val %= dpowers[c];
  7862  000BB2  C0B8  F08D         	movff	sprintf@val,___llmod@dividend
  7863  000BB6  C0B9  F08E         	movff	sprintf@val+1,___llmod@dividend+1
  7864  000BBA  C0BA  F08F         	movff	sprintf@val+2,___llmod@dividend+2
  7865  000BBE  C0BB  F090         	movff	sprintf@val+3,___llmod@dividend+3
  7866  000BC2  0100               	movlb	0	; () banked
  7867  000BC4  51C3               	movf	sprintf@c& (0+255),w,b
  7868  000BC6  0D04               	mullw	4
  7869  000BC8  0E55               	movlw	low _dpowers
  7870  000BCA  24F3               	addwf	prodl,w,c
  7871  000BCC  6EF6               	movwf	tblptrl,c
  7872  000BCE  0E75               	movlw	high _dpowers
  7873  000BD0  20F4               	addwfc	prodh,w,c
  7874  000BD2  6EF7               	movwf	tblptrh,c
  7875  000BD4                     	if	0	;There are less than 3 active tblptr bytes
  7876  000BD4                     	endif
  7877  000BD4  0009               	tblrd		*+
  7878  000BD6  CFF5 F091          	movff	tablat,___llmod@divisor
  7879  000BDA  0009               	tblrd		*+
  7880  000BDC  CFF5 F092          	movff	tablat,___llmod@divisor+1
  7881  000BE0  0009               	tblrd		*+
  7882  000BE2  CFF5 F093          	movff	tablat,___llmod@divisor+2
  7883  000BE6  000A               	tblrd		*-
  7884  000BE8  CFF5 F094          	movff	tablat,___llmod@divisor+3
  7885  000BEC  ECD6  F01D         	call	___llmod	;wreg free
  7886  000BF0  C08D  F0B8         	movff	?___llmod,sprintf@val
  7887  000BF4  C08E  F0B9         	movff	?___llmod+1,sprintf@val+1
  7888  000BF8  C08F  F0BA         	movff	?___llmod+2,sprintf@val+2
  7889  000BFC  C090  F0BB         	movff	?___llmod+3,sprintf@val+3
  7890  000C00                     l6319:
  7891  000C00  0100               	movlb	0	; () banked
  7892  000C02  07C3               	decf	sprintf@c& (0+255),f,b
  7893  000C04  0100               	movlb	0	; () banked
  7894  000C06  29C3               	incf	sprintf@c& (0+255),w,b
  7895  000C08  B4D8               	btfsc	status,2,c
  7896  000C0A  D00E               	goto	l6327
  7897  000C0C  D785               	goto	l6309
  7898  000C0E                     l6321:
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7902  000C0E  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  7903  000C12  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  7904  000C16  0E30               	movlw	48
  7905  000C18  6EDF               	movwf	indf2,c
  7906                           
  7907                           ; BSR set to: 0
  7908  000C1A  0100               	movlb	0	; () banked
  7909  000C1C  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  7910  000C1E  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;doprnt.c: 1237: prec--;
  7914  000C20  0100               	movlb	0	; () banked
  7915  000C22  07C1               	decf	sprintf@prec& (0+255),f,b
  7916  000C24  A0D8               	btfss	status,0,c
  7917  000C26  07C2               	decf	(sprintf@prec+1)& (0+255),f,b
  7918  000C28                     l6327:
  7919                           
  7920                           ; BSR set to: 0
  7921  000C28  0100               	movlb	0	; () banked
  7922  000C2A  51C1               	movf	sprintf@prec& (0+255),w,b
  7923  000C2C  0100               	movlb	0	; () banked
  7924  000C2E  11C2               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7925  000C30  B4D8               	btfsc	status,2,c
  7926  000C32  D169               	goto	l6409
  7927  000C34  D7EC               	goto	l6321
  7928  000C36                     l6329:
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;doprnt.c: 1246: }
  7932                           ;doprnt.c: 1253: {
  7933                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7934  000C36  C0AE  FFD9         	movff	sprintf@ap,fsr2l
  7935  000C3A  C0AF  FFDA         	movff	sprintf@ap+1,fsr2h
  7936  000C3E  CFDE F0B8          	movff	postinc2,sprintf@val
  7937  000C42  CFDD F0B9          	movff	postdec2,sprintf@val+1
  7938  000C46  0100               	movlb	0	; () banked
  7939  000C48  0E00               	movlw	0
  7940  000C4A  BFB9               	btfsc	(sprintf@val+1)& (0+255),7,b
  7941  000C4C  0EFF               	movlw	-1
  7942  000C4E  6FBA               	movwf	(sprintf@val+2)& (0+255),b
  7943  000C50  6FBB               	movwf	(sprintf@val+3)& (0+255),b
  7944                           
  7945                           ; BSR set to: 0
  7946  000C52  0E02               	movlw	2
  7947  000C54  0100               	movlb	0	; () banked
  7948  000C56  27AE               	addwf	sprintf@ap& (0+255),f,b
  7949  000C58  0E00               	movlw	0
  7950  000C5A  23AF               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;doprnt.c: 1261: if((long)val < 0) {
  7954  000C5C  0100               	movlb	0	; () banked
  7955  000C5E  AFBB               	btfss	(sprintf@val+3)& (0+255),7,b
  7956  000C60  D00C               	goto	l6339
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;doprnt.c: 1262: flag |= 0x03;
  7960  000C62  0E03               	movlw	3
  7961  000C64  0100               	movlb	0	; () banked
  7962  000C66  13B0               	iorwf	sprintf@flag& (0+255),f,b
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;doprnt.c: 1263: val = -val;
  7966  000C68  0100               	movlb	0	; () banked
  7967  000C6A  1FBB               	comf	(sprintf@val+3)& (0+255),f,b
  7968  000C6C  1FBA               	comf	(sprintf@val+2)& (0+255),f,b
  7969  000C6E  1FB9               	comf	(sprintf@val+1)& (0+255),f,b
  7970  000C70  6DB8               	negf	sprintf@val& (0+255),b
  7971  000C72  0E00               	movlw	0
  7972  000C74  23B9               	addwfc	(sprintf@val+1)& (0+255),f,b
  7973  000C76  23BA               	addwfc	(sprintf@val+2)& (0+255),f,b
  7974  000C78  23BB               	addwfc	(sprintf@val+3)& (0+255),f,b
  7975  000C7A                     l6339:
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;doprnt.c: 1264: }
  7979                           ;doprnt.c: 1266: }
  7980                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7981  000C7A  0100               	movlb	0	; () banked
  7982  000C7C  51C1               	movf	sprintf@prec& (0+255),w,b
  7983  000C7E  0100               	movlb	0	; () banked
  7984  000C80  11C2               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7985  000C82  A4D8               	btfss	status,2,c
  7986  000C84  D00D               	goto	l6345
  7987                           
  7988                           ; BSR set to: 0
  7989  000C86  0100               	movlb	0	; () banked
  7990  000C88  51B8               	movf	sprintf@val& (0+255),w,b
  7991  000C8A  0100               	movlb	0	; () banked
  7992  000C8C  11B9               	iorwf	(sprintf@val+1)& (0+255),w,b
  7993  000C8E  0100               	movlb	0	; () banked
  7994  000C90  11BA               	iorwf	(sprintf@val+2)& (0+255),w,b
  7995  000C92  0100               	movlb	0	; () banked
  7996  000C94  11BB               	iorwf	(sprintf@val+3)& (0+255),w,b
  7997  000C96  A4D8               	btfss	status,2,c
  7998  000C98  D003               	goto	l6345
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;doprnt.c: 1291: prec++;
  8002  000C9A  0100               	movlb	0	; () banked
  8003  000C9C  4BC1               	infsnz	sprintf@prec& (0+255),f,b
  8004  000C9E  2BC2               	incf	(sprintf@prec+1)& (0+255),f,b
  8005  000CA0                     l6345:
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8009  000CA0  0E01               	movlw	1
  8010  000CA2  0100               	movlb	0	; () banked
  8011  000CA4  6FC3               	movwf	sprintf@c& (0+255),b
  8012  000CA6                     l6347:
  8013                           
  8014                           ; BSR set to: 0
  8015  000CA6  0E0A               	movlw	10
  8016  000CA8  0100               	movlb	0	; () banked
  8017  000CAA  19C3               	xorwf	sprintf@c& (0+255),w,b
  8018  000CAC  B4D8               	btfsc	status,2,c
  8019  000CAE  D01E               	goto	l6359
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;doprnt.c: 1306: if(val < dpowers[c])
  8023                           
  8024                           ; BSR set to: 0
  8025                           
  8026                           ; BSR set to: 0
  8027  000CB0  0100               	movlb	0	; () banked
  8028  000CB2  51C3               	movf	sprintf@c& (0+255),w,b
  8029  000CB4  0D04               	mullw	4
  8030  000CB6  0E55               	movlw	low _dpowers
  8031  000CB8  24F3               	addwf	prodl,w,c
  8032  000CBA  6EF6               	movwf	tblptrl,c
  8033  000CBC  0E75               	movlw	high _dpowers
  8034  000CBE  20F4               	addwfc	prodh,w,c
  8035  000CC0  6EF7               	movwf	tblptrh,c
  8036  000CC2                     	if	0	;There are less than 3 active tblptr bytes
  8037  000CC2                     	endif
  8038  000CC2  0009               	tblrd		*+
  8039  000CC4  50F5               	movf	tablat,w,c
  8040  000CC6  0100               	movlb	0	; () banked
  8041  000CC8  5DB8               	subwf	sprintf@val& (0+255),w,b
  8042  000CCA  0009               	tblrd		*+
  8043  000CCC  50F5               	movf	tablat,w,c
  8044  000CCE  0100               	movlb	0	; () banked
  8045  000CD0  59B9               	subwfb	(sprintf@val+1)& (0+255),w,b
  8046  000CD2  0009               	tblrd		*+
  8047  000CD4  50F5               	movf	tablat,w,c
  8048  000CD6  0100               	movlb	0	; () banked
  8049  000CD8  59BA               	subwfb	(sprintf@val+2)& (0+255),w,b
  8050  000CDA  0009               	tblrd		*+
  8051  000CDC  50F5               	movf	tablat,w,c
  8052  000CDE  0100               	movlb	0	; () banked
  8053  000CE0  59BB               	subwfb	(sprintf@val+3)& (0+255),w,b
  8054  000CE2  A0D8               	btfss	status,0,c
  8055  000CE4  D003               	goto	l6359
  8056                           
  8057                           ; BSR set to: 0
  8058                           
  8059                           ; BSR set to: 0
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;doprnt.c: 1307: break;
  8063  000CE6  0100               	movlb	0	; () banked
  8064  000CE8  2BC3               	incf	sprintf@c& (0+255),f,b
  8065  000CEA  D7DD               	goto	l6347
  8066  000CEC                     l6359:
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;doprnt.c: 1339: if(c < prec)
  8070  000CEC  0E80               	movlw	128
  8071  000CEE  0100               	movlb	0	; () banked
  8072  000CF0  BFC3               	btfsc	sprintf@c& (0+255),7,b
  8073  000CF2  0E7F               	movlw	127
  8074  000CF4  0100               	movlb	0	; () banked
  8075  000CF6  6FA8               	movwf	??_sprintf& (0+255),b
  8076  000CF8  0100               	movlb	0	; () banked
  8077  000CFA  51C1               	movf	sprintf@prec& (0+255),w,b
  8078  000CFC  0100               	movlb	0	; () banked
  8079  000CFE  5DC3               	subwf	sprintf@c& (0+255),w,b
  8080  000D00  0100               	movlb	0	; () banked
  8081  000D02  51C2               	movf	(sprintf@prec+1)& (0+255),w,b
  8082  000D04  0A80               	xorlw	128
  8083  000D06  0100               	movlb	0	; () banked
  8084  000D08  59A8               	subwfb	??_sprintf& (0+255),w,b
  8085  000D0A  B0D8               	btfsc	status,0,c
  8086  000D0C  D003               	goto	l6363
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;doprnt.c: 1340: c = prec;
  8090  000D0E  C0C1  F0C3         	movff	sprintf@prec,sprintf@c
  8091  000D12  D018               	goto	l6367
  8092  000D14                     l6363:
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;doprnt.c: 1341: else if(prec < c)
  8096  000D14  0100               	movlb	0	; () banked
  8097  000D16  51C2               	movf	(sprintf@prec+1)& (0+255),w,b
  8098  000D18  0A80               	xorlw	128
  8099  000D1A  0100               	movlb	0	; () banked
  8100  000D1C  6FA8               	movwf	??_sprintf& (0+255),b
  8101  000D1E  0100               	movlb	0	; () banked
  8102  000D20  51C3               	movf	sprintf@c& (0+255),w,b
  8103  000D22  0100               	movlb	0	; () banked
  8104  000D24  5DC1               	subwf	sprintf@prec& (0+255),w,b
  8105  000D26  0E80               	movlw	128
  8106  000D28  0100               	movlb	0	; () banked
  8107  000D2A  BFC3               	btfsc	sprintf@c& (0+255),7,b
  8108  000D2C  0E7F               	movlw	127
  8109  000D2E  0100               	movlb	0	; () banked
  8110  000D30  59A8               	subwfb	??_sprintf& (0+255),w,b
  8111  000D32  B0D8               	btfsc	status,0,c
  8112  000D34  D007               	goto	l6367
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;doprnt.c: 1342: prec = c;
  8116  000D36  0100               	movlb	0	; () banked
  8117  000D38  51C3               	movf	sprintf@c& (0+255),w,b
  8118  000D3A  0100               	movlb	0	; () banked
  8119  000D3C  6FC1               	movwf	sprintf@prec& (0+255),b
  8120  000D3E  6BC2               	clrf	(sprintf@prec+1)& (0+255),b
  8121  000D40  BFC1               	btfsc	sprintf@prec& (0+255),7,b
  8122  000D42  07C2               	decf	(sprintf@prec+1)& (0+255),f,b
  8123  000D44                     l6367:
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8127  000D44  0100               	movlb	0	; () banked
  8128  000D46  51B2               	movf	sprintf@width& (0+255),w,b
  8129  000D48  0100               	movlb	0	; () banked
  8130  000D4A  11B3               	iorwf	(sprintf@width+1)& (0+255),w,b
  8131  000D4C  B4D8               	btfsc	status,2,c
  8132  000D4E  D014               	goto	l6373
  8133                           
  8134                           ; BSR set to: 0
  8135  000D50  0E03               	movlw	3
  8136  000D52  0100               	movlb	0	; () banked
  8137  000D54  15B0               	andwf	sprintf@flag& (0+255),w,b
  8138  000D56  0100               	movlb	0	; () banked
  8139  000D58  6FA8               	movwf	??_sprintf& (0+255),b
  8140  000D5A  0E00               	movlw	0
  8141  000D5C  0100               	movlb	0	; () banked
  8142  000D5E  15B1               	andwf	(sprintf@flag+1)& (0+255),w,b
  8143  000D60  0100               	movlb	0	; () banked
  8144  000D62  6FA9               	movwf	(??_sprintf+1)& (0+255),b
  8145  000D64  0100               	movlb	0	; () banked
  8146  000D66  51A8               	movf	??_sprintf& (0+255),w,b
  8147  000D68  0100               	movlb	0	; () banked
  8148  000D6A  11A9               	iorwf	(??_sprintf+1)& (0+255),w,b
  8149  000D6C  B4D8               	btfsc	status,2,c
  8150  000D6E  D004               	goto	l6373
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;doprnt.c: 1346: width--;
  8154  000D70  0100               	movlb	0	; () banked
  8155  000D72  07B2               	decf	sprintf@width& (0+255),f,b
  8156  000D74  A0D8               	btfss	status,0,c
  8157  000D76  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  8158  000D78                     l6373:
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8162  000D78  0100               	movlb	0	; () banked
  8163  000D7A  ADB1               	btfss	(sprintf@flag+1)& (0+255),6,b
  8164  000D7C  D01E               	goto	l6381
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;doprnt.c: 1349: if(width > prec)
  8168  000D7E  0100               	movlb	0	; () banked
  8169  000D80  51B2               	movf	sprintf@width& (0+255),w,b
  8170  000D82  0100               	movlb	0	; () banked
  8171  000D84  5DC1               	subwf	sprintf@prec& (0+255),w,b
  8172  000D86  0100               	movlb	0	; () banked
  8173  000D88  51C2               	movf	(sprintf@prec+1)& (0+255),w,b
  8174  000D8A  0A80               	xorlw	128
  8175  000D8C  0100               	movlb	0	; () banked
  8176  000D8E  6FA8               	movwf	??_sprintf& (0+255),b
  8177  000D90  0100               	movlb	0	; () banked
  8178  000D92  51B3               	movf	(sprintf@width+1)& (0+255),w,b
  8179  000D94  0A80               	xorlw	128
  8180  000D96  0100               	movlb	0	; () banked
  8181  000D98  59A8               	subwfb	??_sprintf& (0+255),w,b
  8182  000D9A  B0D8               	btfsc	status,0,c
  8183  000D9C  D009               	goto	l6379
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;doprnt.c: 1350: width -= prec;
  8187  000D9E  0100               	movlb	0	; () banked
  8188  000DA0  51C1               	movf	sprintf@prec& (0+255),w,b
  8189  000DA2  0100               	movlb	0	; () banked
  8190  000DA4  5FB2               	subwf	sprintf@width& (0+255),f,b
  8191  000DA6  0100               	movlb	0	; () banked
  8192  000DA8  51C2               	movf	(sprintf@prec+1)& (0+255),w,b
  8193  000DAA  0100               	movlb	0	; () banked
  8194  000DAC  5BB3               	subwfb	(sprintf@width+1)& (0+255),f,b
  8195  000DAE  D005               	goto	l6381
  8196  000DB0                     l6379:
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;doprnt.c: 1351: else
  8200                           ;doprnt.c: 1352: width = 0;
  8201  000DB0  0E00               	movlw	0
  8202  000DB2  0100               	movlb	0	; () banked
  8203  000DB4  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  8204  000DB6  0E00               	movlw	0
  8205  000DB8  6FB2               	movwf	sprintf@width& (0+255),b
  8206  000DBA                     l6381:
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;doprnt.c: 1353: }
  8210                           ;doprnt.c: 1381: if(width > c)
  8211  000DBA  0E80               	movlw	128
  8212  000DBC  0100               	movlb	0	; () banked
  8213  000DBE  BFC3               	btfsc	sprintf@c& (0+255),7,b
  8214  000DC0  0E7F               	movlw	127
  8215  000DC2  0100               	movlb	0	; () banked
  8216  000DC4  6FA8               	movwf	??_sprintf& (0+255),b
  8217  000DC6  0100               	movlb	0	; () banked
  8218  000DC8  51B2               	movf	sprintf@width& (0+255),w,b
  8219  000DCA  0100               	movlb	0	; () banked
  8220  000DCC  5DC3               	subwf	sprintf@c& (0+255),w,b
  8221  000DCE  0100               	movlb	0	; () banked
  8222  000DD0  51B3               	movf	(sprintf@width+1)& (0+255),w,b
  8223  000DD2  0A80               	xorlw	128
  8224  000DD4  0100               	movlb	0	; () banked
  8225  000DD6  59A8               	subwfb	??_sprintf& (0+255),w,b
  8226  000DD8  B0D8               	btfsc	status,0,c
  8227  000DDA  D00B               	goto	l6385
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;doprnt.c: 1382: width -= c;
  8231  000DDC  0100               	movlb	0	; () banked
  8232  000DDE  51C3               	movf	sprintf@c& (0+255),w,b
  8233  000DE0  0100               	movlb	0	; () banked
  8234  000DE2  5FB2               	subwf	sprintf@width& (0+255),f,b
  8235  000DE4  0E00               	movlw	0
  8236  000DE6  0100               	movlb	0	; () banked
  8237  000DE8  BFC3               	btfsc	sprintf@c& (0+255),7,b
  8238  000DEA  0EFF               	movlw	255
  8239  000DEC  0100               	movlb	0	; () banked
  8240  000DEE  5BB3               	subwfb	(sprintf@width+1)& (0+255),f,b
  8241  000DF0  D005               	goto	l6387
  8242  000DF2                     l6385:
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;doprnt.c: 1383: else
  8246                           ;doprnt.c: 1384: width = 0;
  8247  000DF2  0E00               	movlw	0
  8248  000DF4  0100               	movlb	0	; () banked
  8249  000DF6  6FB3               	movwf	(sprintf@width+1)& (0+255),b
  8250  000DF8  0E00               	movlw	0
  8251  000DFA  6FB2               	movwf	sprintf@width& (0+255),b
  8252  000DFC                     l6387:
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;doprnt.c: 1422: {
  8256                           ;doprnt.c: 1424: if(width
  8257                           ;doprnt.c: 1428: )
  8258  000DFC  0100               	movlb	0	; () banked
  8259  000DFE  51B2               	movf	sprintf@width& (0+255),w,b
  8260  000E00  0100               	movlb	0	; () banked
  8261  000E02  11B3               	iorwf	(sprintf@width+1)& (0+255),w,b
  8262  000E04  B4D8               	btfsc	status,2,c
  8263  000E06  D013               	goto	l6395
  8264  000E08                     l6389:
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8268  000E08  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  8269  000E0C  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  8270  000E10  0E20               	movlw	32
  8271  000E12  6EDF               	movwf	indf2,c
  8272                           
  8273                           ; BSR set to: 0
  8274  000E14  0100               	movlb	0	; () banked
  8275  000E16  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  8276  000E18  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  8277                           
  8278                           ; BSR set to: 0
  8279                           ;doprnt.c: 1431: while(--width);
  8280  000E1A  0100               	movlb	0	; () banked
  8281  000E1C  07B2               	decf	sprintf@width& (0+255),f,b
  8282  000E1E  A0D8               	btfss	status,0,c
  8283  000E20  07B3               	decf	(sprintf@width+1)& (0+255),f,b
  8284  000E22  0100               	movlb	0	; () banked
  8285  000E24  51B2               	movf	sprintf@width& (0+255),w,b
  8286  000E26  0100               	movlb	0	; () banked
  8287  000E28  11B3               	iorwf	(sprintf@width+1)& (0+255),w,b
  8288  000E2A  A4D8               	btfss	status,2,c
  8289  000E2C  D7ED               	goto	l6389
  8290  000E2E                     l6395:
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;doprnt.c: 1438: if(flag & 0x03)
  8294  000E2E  0E03               	movlw	3
  8295  000E30  0100               	movlb	0	; () banked
  8296  000E32  15B0               	andwf	sprintf@flag& (0+255),w,b
  8297  000E34  0100               	movlb	0	; () banked
  8298  000E36  6FA8               	movwf	??_sprintf& (0+255),b
  8299  000E38  0E00               	movlw	0
  8300  000E3A  0100               	movlb	0	; () banked
  8301  000E3C  15B1               	andwf	(sprintf@flag+1)& (0+255),w,b
  8302  000E3E  0100               	movlb	0	; () banked
  8303  000E40  6FA9               	movwf	(??_sprintf+1)& (0+255),b
  8304  000E42  0100               	movlb	0	; () banked
  8305  000E44  51A8               	movf	??_sprintf& (0+255),w,b
  8306  000E46  0100               	movlb	0	; () banked
  8307  000E48  11A9               	iorwf	(??_sprintf+1)& (0+255),w,b
  8308  000E4A  B4D8               	btfsc	status,2,c
  8309  000E4C  D051               	goto	l6407
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8313  000E4E  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  8314  000E52  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  8315  000E56  0E2D               	movlw	45
  8316  000E58  6EDF               	movwf	indf2,c
  8317  000E5A  D047               	goto	l6405
  8318  000E5C                     l6401:
  8319                           
  8320                           ; BSR set to: 0
  8321                           ;doprnt.c: 1478: {
  8322                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8323  000E5C  C0C1  F0A8         	movff	sprintf@prec,??_sprintf
  8324  000E60  C0C2  F0A9         	movff	sprintf@prec+1,??_sprintf+1
  8325  000E64  0100               	movlb	0	; () banked
  8326  000E66  90D8               	bcf	status,0,c
  8327  000E68  37A8               	rlcf	??_sprintf& (0+255),f,b
  8328  000E6A  37A9               	rlcf	(??_sprintf+1)& (0+255),f,b
  8329  000E6C  0100               	movlb	0	; () banked
  8330  000E6E  90D8               	bcf	status,0,c
  8331  000E70  37A8               	rlcf	??_sprintf& (0+255),f,b
  8332  000E72  37A9               	rlcf	(??_sprintf+1)& (0+255),f,b
  8333  000E74  0E55               	movlw	low _dpowers
  8334  000E76  0100               	movlb	0	; () banked
  8335  000E78  25A8               	addwf	??_sprintf& (0+255),w,b
  8336  000E7A  6EF6               	movwf	tblptrl,c
  8337  000E7C  0E75               	movlw	high _dpowers
  8338  000E7E  21A9               	addwfc	(??_sprintf+1)& (0+255),w,b
  8339  000E80  6EF7               	movwf	tblptrh,c
  8340  000E82                     	if	0	;There are less than 3 active tblptr bytes
  8341  000E82                     	endif
  8342  000E82  0009               	tblrd		*+
  8343  000E84  CFF5 F084          	movff	tablat,___lldiv@divisor
  8344  000E88  0009               	tblrd		*+
  8345  000E8A  CFF5 F085          	movff	tablat,___lldiv@divisor+1
  8346  000E8E  0009               	tblrd		*+
  8347  000E90  CFF5 F086          	movff	tablat,___lldiv@divisor+2
  8348  000E94  000A               	tblrd		*-
  8349  000E96  CFF5 F087          	movff	tablat,___lldiv@divisor+3
  8350  000E9A  C0B8  F080         	movff	sprintf@val,___lldiv@dividend
  8351  000E9E  C0B9  F081         	movff	sprintf@val+1,___lldiv@dividend+1
  8352  000EA2  C0BA  F082         	movff	sprintf@val+2,___lldiv@dividend+2
  8353  000EA6  C0BB  F083         	movff	sprintf@val+3,___lldiv@dividend+3
  8354  000EAA  EC80  F01C         	call	___lldiv	;wreg free
  8355  000EAE  C080  F08D         	movff	?___lldiv,___llmod@dividend
  8356  000EB2  C081  F08E         	movff	?___lldiv+1,___llmod@dividend+1
  8357  000EB6  C082  F08F         	movff	?___lldiv+2,___llmod@dividend+2
  8358  000EBA  C083  F090         	movff	?___lldiv+3,___llmod@dividend+3
  8359  000EBE  0E0A               	movlw	10
  8360  000EC0  0100               	movlb	0	; () banked
  8361  000EC2  6F91               	movwf	___llmod@divisor& (0+255),b
  8362  000EC4  0E00               	movlw	0
  8363  000EC6  6F92               	movwf	(___llmod@divisor+1)& (0+255),b
  8364  000EC8  0E00               	movlw	0
  8365  000ECA  6F93               	movwf	(___llmod@divisor+2)& (0+255),b
  8366  000ECC  0E00               	movlw	0
  8367  000ECE  6F94               	movwf	(___llmod@divisor+3)& (0+255),b
  8368  000ED0  ECD6  F01D         	call	___llmod	;wreg free
  8369  000ED4  0100               	movlb	0	; () banked
  8370  000ED6  518D               	movf	?___llmod& (0+255),w,b
  8371  000ED8  0F30               	addlw	48
  8372  000EDA  0100               	movlb	0	; () banked
  8373  000EDC  6FC3               	movwf	sprintf@c& (0+255),b
  8374                           
  8375                           ; BSR set to: 0
  8376                           ;doprnt.c: 1523: }
  8377                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8378  000EDE  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  8379  000EE2  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  8380  000EE6  C0C3  FFDF         	movff	sprintf@c,indf2
  8381  000EEA                     l6405:
  8382                           
  8383                           ; BSR set to: 0
  8384  000EEA  0100               	movlb	0	; () banked
  8385  000EEC  4BA1               	infsnz	sprintf@sp& (0+255),f,b
  8386  000EEE  2BA2               	incf	(sprintf@sp+1)& (0+255),f,b
  8387  000EF0                     l6407:
  8388                           
  8389                           ; BSR set to: 0
  8390  000EF0  0100               	movlb	0	; () banked
  8391  000EF2  07C1               	decf	sprintf@prec& (0+255),f,b
  8392  000EF4  A0D8               	btfss	status,0,c
  8393  000EF6  07C2               	decf	(sprintf@prec+1)& (0+255),f,b
  8394  000EF8  0100               	movlb	0	; () banked
  8395  000EFA  29C1               	incf	sprintf@prec& (0+255),w,b
  8396  000EFC  E1AF               	bnz	l6401
  8397  000EFE  0100               	movlb	0	; () banked
  8398  000F00  29C2               	incf	(sprintf@prec+1)& (0+255),w,b
  8399  000F02  A4D8               	btfss	status,2,c
  8400  000F04  D7AB               	goto	l6401
  8401  000F06                     l6409:
  8402                           
  8403                           ; BSR set to: 0
  8404  000F06  C0A3  FFF6         	movff	sprintf@f,tblptrl
  8405  000F0A  C0A4  FFF7         	movff	sprintf@f+1,tblptrh
  8406  000F0E  0100               	movlb	0	; () banked
  8407  000F10  4BA3               	infsnz	sprintf@f& (0+255),f,b
  8408  000F12  2BA4               	incf	(sprintf@f+1)& (0+255),f,b
  8409  000F14                     	if	0	;tblptru may be non-zero
  8410  000F14                     	endif
  8411  000F14                     	if	0	;tblptru may be non-zero
  8412  000F14                     	endif
  8413  000F14  0008               	tblrd		*
  8414  000F16  CFF5 F0C3          	movff	tablat,sprintf@c
  8415  000F1A  0100               	movlb	0	; () banked
  8416  000F1C  51C3               	movf	sprintf@c& (0+255),w,b
  8417  000F1E  A4D8               	btfss	status,2,c
  8418  000F20  EFE8  F001         	goto	l6123
  8419  000F24                     l6411:
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;doprnt.c: 1538: *sp = 0;
  8423  000F24  C0A1  FFD9         	movff	sprintf@sp,fsr2l
  8424  000F28  C0A2  FFDA         	movff	sprintf@sp+1,fsr2h
  8425  000F2C  0E00               	movlw	0
  8426  000F2E  6EDF               	movwf	indf2,c
  8427  000F30  0012               	return	
  8428  000F32                     __end_of_sprintf:
  8429                           	opt stack 0
  8430                           tblptru	equ	0xFF8
  8431                           tblptrh	equ	0xFF7
  8432                           tblptrl	equ	0xFF6
  8433                           tablat	equ	0xFF5
  8434                           prodh	equ	0xFF4
  8435                           prodl	equ	0xFF3
  8436                           intcon	equ	0xFF2
  8437                           intcon2	equ	0xFF1
  8438                           indf0	equ	0xFEF
  8439                           postinc0	equ	0xFEE
  8440                           fsr0h	equ	0xFEA
  8441                           fsr0l	equ	0xFE9
  8442                           wreg	equ	0xFE8
  8443                           postinc1	equ	0xFE6
  8444                           postdec1	equ	0xFE5
  8445                           plusw1	equ	0xFE3
  8446                           fsr1h	equ	0xFE2
  8447                           fsr1l	equ	0xFE1
  8448                           indf2	equ	0xFDF
  8449                           postinc2	equ	0xFDE
  8450                           postdec2	equ	0xFDD
  8451                           fsr2h	equ	0xFDA
  8452                           fsr2l	equ	0xFD9
  8453                           status	equ	0xFD8
  8454                           
  8455 ;; *************** function _scale *****************
  8456 ;; Defined at:
  8457 ;;		line 425 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  scl             1    wreg     char 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  scl             1   17[BANK0 ] char 
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  3   14[BANK0 ] char 
  8464 ;; Registers used:
  8465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8471 ;;      Params:         0       3       0       0       0       0       0
  8472 ;;      Locals:         0       1       0       0       0       0       0
  8473 ;;      Temps:          0       0       0       0       0       0       0
  8474 ;;      Totals:         0       4       0       0       0       0       0
  8475 ;;Total ram usage:        4 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:   12
  8478 ;; This function calls:
  8479 ;;		___awdiv
  8480 ;;		___awmod
  8481 ;;		___ftmul
  8482 ;;		___wmul
  8483 ;; This function is called by:
  8484 ;;		_sprintf
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text17
  8489  000F32                     __ptext17:
  8490                           	opt stack 0
  8491  000F32                     _scale:
  8492                           	opt stack 13
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;incstack = 0
  8496                           ;scale@scl stored from wreg
  8497  000F32  0100               	movlb	0	; () banked
  8498  000F34  6F91               	movwf	scale@scl& (0+255),b
  8499                           
  8500                           ;doprnt.c: 428: if(scl < 0) {
  8501  000F36  0100               	movlb	0	; () banked
  8502  000F38  AF91               	btfss	scale@scl& (0+255),7,b
  8503  000F3A  D11F               	goto	l5983
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;doprnt.c: 429: scl = -scl;
  8507  000F3C  0100               	movlb	0	; () banked
  8508  000F3E  6D91               	negf	scale@scl& (0+255),b
  8509                           
  8510                           ;doprnt.c: 430: if(scl>=110)
  8511  000F40  0100               	movlb	0	; () banked
  8512  000F42  5191               	movf	scale@scl& (0+255),w,b
  8513  000F44  0A80               	xorlw	128
  8514  000F46  0F12               	addlw	-238
  8515  000F48  A0D8               	btfss	status,0,c
  8516  000F4A  D0A3               	goto	l5973
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8520  000F4C  0E03               	movlw	3
  8521  000F4E  6EE6               	movwf	postinc1,c
  8522  000F50  0E00               	movlw	0
  8523  000F52  6EE6               	movwf	postinc1,c
  8524  000F54  0E00               	movlw	0
  8525  000F56  0100               	movlb	0	; () banked
  8526  000F58  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8527  000F5A  0E0A               	movlw	10
  8528  000F5C  6F82               	movwf	___awmod@divisor& (0+255),b
  8529  000F5E  0100               	movlb	0	; () banked
  8530  000F60  5191               	movf	scale@scl& (0+255),w,b
  8531  000F62  0100               	movlb	0	; () banked
  8532  000F64  6F80               	movwf	___awmod@dividend& (0+255),b
  8533  000F66  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8534  000F68  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  8535  000F6A  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  8536  000F6C  EC34  F01D         	call	___awmod	;wreg free
  8537  000F70  0100               	movlb	0	; () banked
  8538  000F72  C080  FFE6         	movff	?___awmod,postinc1
  8539  000F76  0100               	movlb	0	; () banked
  8540  000F78  C081  FFE6         	movff	?___awmod+1,postinc1
  8541  000F7C  EC23  F01E         	call	___wmul	;wreg free
  8542  000F80  0E7D               	movlw	low __npowers_
  8543  000F82  243A               	addwf	btemp,w,c
  8544  000F84  6EF6               	movwf	tblptrl,c
  8545  000F86  0E75               	movlw	high __npowers_
  8546  000F88  203B               	addwfc	btemp+1,w,c
  8547  000F8A  6EF7               	movwf	tblptrh,c
  8548  000F8C                     	if	0	;There are less than 3 active tblptr bytes
  8549  000F8C                     	endif
  8550  000F8C  0009               	tblrd		*+
  8551  000F8E  CFF5 FFE6          	movff	tablat,postinc1
  8552  000F92  0009               	tblrd		*+
  8553  000F94  CFF5 FFE6          	movff	tablat,postinc1
  8554  000F98  0009               	tblrd		*+
  8555  000F9A  CFF5 FFE6          	movff	tablat,postinc1
  8556  000F9E  0E03               	movlw	3
  8557  000FA0  6EE6               	movwf	postinc1,c
  8558  000FA2  0E00               	movlw	0
  8559  000FA4  6EE6               	movwf	postinc1,c
  8560  000FA6  0E00               	movlw	0
  8561  000FA8  0100               	movlb	0	; () banked
  8562  000FAA  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8563  000FAC  0E0A               	movlw	10
  8564  000FAE  6F88               	movwf	___awdiv@divisor& (0+255),b
  8565  000FB0  0E00               	movlw	0
  8566  000FB2  0100               	movlb	0	; () banked
  8567  000FB4  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8568  000FB6  0E64               	movlw	100
  8569  000FB8  6F82               	movwf	___awmod@divisor& (0+255),b
  8570  000FBA  0100               	movlb	0	; () banked
  8571  000FBC  5191               	movf	scale@scl& (0+255),w,b
  8572  000FBE  0100               	movlb	0	; () banked
  8573  000FC0  6F80               	movwf	___awmod@dividend& (0+255),b
  8574  000FC2  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8575  000FC4  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  8576  000FC6  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  8577  000FC8  EC34  F01D         	call	___awmod	;wreg free
  8578  000FCC  C080  F086         	movff	?___awmod,___awdiv@dividend
  8579  000FD0  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  8580  000FD4  EC21  F01C         	call	___awdiv	;wreg free
  8581  000FD8  0E09               	movlw	9
  8582  000FDA  0100               	movlb	0	; () banked
  8583  000FDC  2786               	addwf	?___awdiv& (0+255),f,b
  8584  000FDE  0E00               	movlw	0
  8585  000FE0  0100               	movlb	0	; () banked
  8586  000FE2  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  8587  000FE4  0100               	movlb	0	; () banked
  8588  000FE6  C086  FFE6         	movff	?___awdiv,postinc1
  8589  000FEA  0100               	movlb	0	; () banked
  8590  000FEC  C087  FFE6         	movff	?___awdiv+1,postinc1
  8591  000FF0  EC23  F01E         	call	___wmul	;wreg free
  8592  000FF4  0E7D               	movlw	low __npowers_
  8593  000FF6  243A               	addwf	btemp,w,c
  8594  000FF8  6EF6               	movwf	tblptrl,c
  8595  000FFA  0E75               	movlw	high __npowers_
  8596  000FFC  203B               	addwfc	btemp+1,w,c
  8597  000FFE  6EF7               	movwf	tblptrh,c
  8598  001000                     	if	0	;There are less than 3 active tblptr bytes
  8599  001000                     	endif
  8600  001000  0009               	tblrd		*+
  8601  001002  CFF5 FFE6          	movff	tablat,postinc1
  8602  001006  0009               	tblrd		*+
  8603  001008  CFF5 FFE6          	movff	tablat,postinc1
  8604  00100C  0009               	tblrd		*+
  8605  00100E  CFF5 FFE6          	movff	tablat,postinc1
  8606  001012  0E03               	movlw	3
  8607  001014  6EE6               	movwf	postinc1,c
  8608  001016  0E00               	movlw	0
  8609  001018  6EE6               	movwf	postinc1,c
  8610  00101A  0E00               	movlw	0
  8611  00101C  0100               	movlb	0	; () banked
  8612  00101E  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8613  001020  0E64               	movlw	100
  8614  001022  6F88               	movwf	___awdiv@divisor& (0+255),b
  8615  001024  0100               	movlb	0	; () banked
  8616  001026  5191               	movf	scale@scl& (0+255),w,b
  8617  001028  0100               	movlb	0	; () banked
  8618  00102A  6F86               	movwf	___awdiv@dividend& (0+255),b
  8619  00102C  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  8620  00102E  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  8621  001030  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8622  001032  EC21  F01C         	call	___awdiv	;wreg free
  8623  001036  0E12               	movlw	18
  8624  001038  0100               	movlb	0	; () banked
  8625  00103A  2786               	addwf	?___awdiv& (0+255),f,b
  8626  00103C  0E00               	movlw	0
  8627  00103E  0100               	movlb	0	; () banked
  8628  001040  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  8629  001042  0100               	movlb	0	; () banked
  8630  001044  C086  FFE6         	movff	?___awdiv,postinc1
  8631  001048  0100               	movlb	0	; () banked
  8632  00104A  C087  FFE6         	movff	?___awdiv+1,postinc1
  8633  00104E  EC23  F01E         	call	___wmul	;wreg free
  8634  001052  0E7D               	movlw	low __npowers_
  8635  001054  243A               	addwf	btemp,w,c
  8636  001056  6EF6               	movwf	tblptrl,c
  8637  001058  0E75               	movlw	high __npowers_
  8638  00105A  203B               	addwfc	btemp+1,w,c
  8639  00105C  6EF7               	movwf	tblptrh,c
  8640  00105E                     	if	0	;There are less than 3 active tblptr bytes
  8641  00105E                     	endif
  8642  00105E  0009               	tblrd		*+
  8643  001060  CFF5 FFE6          	movff	tablat,postinc1
  8644  001064  0009               	tblrd		*+
  8645  001066  CFF5 FFE6          	movff	tablat,postinc1
  8646  00106A  0009               	tblrd		*+
  8647  00106C  CFF5 FFE6          	movff	tablat,postinc1
  8648  001070  EC10  F012         	call	___ftmul	;wreg free
  8649  001074  C03A  FFE6         	movff	btemp,postinc1
  8650  001078  C03B  FFE6         	movff	btemp+1,postinc1
  8651  00107C  C03C  FFE6         	movff	btemp+2,postinc1
  8652  001080  EC10  F012         	call	___ftmul	;wreg free
  8653  001084  C03A  F08E         	movff	btemp,?_scale
  8654  001088  C03B  F08F         	movff	btemp+1,?_scale+1
  8655  00108C  C03C  F090         	movff	btemp+2,?_scale+2
  8656  001090  0012               	return	
  8657  001092                     l5973:
  8658                           
  8659                           ;doprnt.c: 432: else if(scl > 10)
  8660  001092  0100               	movlb	0	; () banked
  8661  001094  5191               	movf	scale@scl& (0+255),w,b
  8662  001096  0A80               	xorlw	128
  8663  001098  0F75               	addlw	-139
  8664  00109A  A0D8               	btfss	status,0,c
  8665  00109C  D05B               	goto	l5979
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8669  00109E  0E03               	movlw	3
  8670  0010A0  6EE6               	movwf	postinc1,c
  8671  0010A2  0E00               	movlw	0
  8672  0010A4  6EE6               	movwf	postinc1,c
  8673  0010A6  0E00               	movlw	0
  8674  0010A8  0100               	movlb	0	; () banked
  8675  0010AA  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8676  0010AC  0E0A               	movlw	10
  8677  0010AE  6F82               	movwf	___awmod@divisor& (0+255),b
  8678  0010B0  0100               	movlb	0	; () banked
  8679  0010B2  5191               	movf	scale@scl& (0+255),w,b
  8680  0010B4  0100               	movlb	0	; () banked
  8681  0010B6  6F80               	movwf	___awmod@dividend& (0+255),b
  8682  0010B8  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8683  0010BA  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  8684  0010BC  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  8685  0010BE  EC34  F01D         	call	___awmod	;wreg free
  8686  0010C2  0100               	movlb	0	; () banked
  8687  0010C4  C080  FFE6         	movff	?___awmod,postinc1
  8688  0010C8  0100               	movlb	0	; () banked
  8689  0010CA  C081  FFE6         	movff	?___awmod+1,postinc1
  8690  0010CE  EC23  F01E         	call	___wmul	;wreg free
  8691  0010D2  0E7D               	movlw	low __npowers_
  8692  0010D4  243A               	addwf	btemp,w,c
  8693  0010D6  6EF6               	movwf	tblptrl,c
  8694  0010D8  0E75               	movlw	high __npowers_
  8695  0010DA  203B               	addwfc	btemp+1,w,c
  8696  0010DC  6EF7               	movwf	tblptrh,c
  8697  0010DE                     	if	0	;There are less than 3 active tblptr bytes
  8698  0010DE                     	endif
  8699  0010DE  0009               	tblrd		*+
  8700  0010E0  CFF5 FFE6          	movff	tablat,postinc1
  8701  0010E4  0009               	tblrd		*+
  8702  0010E6  CFF5 FFE6          	movff	tablat,postinc1
  8703  0010EA  0009               	tblrd		*+
  8704  0010EC  CFF5 FFE6          	movff	tablat,postinc1
  8705  0010F0  0E03               	movlw	3
  8706  0010F2  6EE6               	movwf	postinc1,c
  8707  0010F4  0E00               	movlw	0
  8708  0010F6  6EE6               	movwf	postinc1,c
  8709  0010F8  0E00               	movlw	0
  8710  0010FA  0100               	movlb	0	; () banked
  8711  0010FC  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8712  0010FE  0E0A               	movlw	10
  8713  001100  6F88               	movwf	___awdiv@divisor& (0+255),b
  8714  001102  0100               	movlb	0	; () banked
  8715  001104  5191               	movf	scale@scl& (0+255),w,b
  8716  001106  0100               	movlb	0	; () banked
  8717  001108  6F86               	movwf	___awdiv@dividend& (0+255),b
  8718  00110A  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  8719  00110C  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  8720  00110E  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8721  001110  EC21  F01C         	call	___awdiv	;wreg free
  8722  001114  0E09               	movlw	9
  8723  001116  0100               	movlb	0	; () banked
  8724  001118  2786               	addwf	?___awdiv& (0+255),f,b
  8725  00111A  0E00               	movlw	0
  8726  00111C  0100               	movlb	0	; () banked
  8727  00111E  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  8728  001120  0100               	movlb	0	; () banked
  8729  001122  C086  FFE6         	movff	?___awdiv,postinc1
  8730  001126  0100               	movlb	0	; () banked
  8731  001128  C087  FFE6         	movff	?___awdiv+1,postinc1
  8732  00112C  EC23  F01E         	call	___wmul	;wreg free
  8733  001130  0E7D               	movlw	low __npowers_
  8734  001132  243A               	addwf	btemp,w,c
  8735  001134  6EF6               	movwf	tblptrl,c
  8736  001136  0E75               	movlw	high __npowers_
  8737  001138  203B               	addwfc	btemp+1,w,c
  8738  00113A  6EF7               	movwf	tblptrh,c
  8739  00113C                     	if	0	;There are less than 3 active tblptr bytes
  8740  00113C                     	endif
  8741  00113C  0009               	tblrd		*+
  8742  00113E  CFF5 FFE6          	movff	tablat,postinc1
  8743  001142  0009               	tblrd		*+
  8744  001144  CFF5 FFE6          	movff	tablat,postinc1
  8745  001148  0009               	tblrd		*+
  8746  00114A  CFF5 FFE6          	movff	tablat,postinc1
  8747  00114E  EC10  F012         	call	___ftmul	;wreg free
  8748  001152  D798               	goto	L3
  8749  001154                     l5979:
  8750                           
  8751                           ;doprnt.c: 434: return _npowers_[scl];
  8752  001154  0100               	movlb	0	; () banked
  8753  001156  5191               	movf	scale@scl& (0+255),w,b
  8754  001158  0D03               	mullw	3
  8755  00115A  0E7D               	movlw	low __npowers_
  8756  00115C  24F3               	addwf	prodl,w,c
  8757  00115E  6EF6               	movwf	tblptrl,c
  8758  001160  0E75               	movlw	high __npowers_
  8759  001162  20F4               	addwfc	prodh,w,c
  8760  001164  6EF7               	movwf	tblptrh,c
  8761  001166                     	if	0	;There are less than 3 active tblptr bytes
  8762  001166                     	endif
  8763  001166  0009               	tblrd		*+
  8764  001168  CFF5 F08E          	movff	tablat,?_scale
  8765  00116C  0009               	tblrd		*+
  8766  00116E  CFF5 F08F          	movff	tablat,?_scale+1
  8767  001172  000A               	tblrd		*-
  8768  001174  CFF5 F090          	movff	tablat,?_scale+2
  8769                           
  8770                           ; BSR set to: 0
  8771  001178  0012               	return	
  8772  00117A                     l5983:
  8773                           
  8774                           ; BSR set to: 0
  8775                           ;doprnt.c: 435: }
  8776                           ;doprnt.c: 436: if(scl>=110)
  8777  00117A  0100               	movlb	0	; () banked
  8778  00117C  5191               	movf	scale@scl& (0+255),w,b
  8779  00117E  0A80               	xorlw	128
  8780  001180  0F12               	addlw	-238
  8781  001182  A0D8               	btfss	status,0,c
  8782  001184  D0A3               	goto	l5991
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8786  001186  0E03               	movlw	3
  8787  001188  6EE6               	movwf	postinc1,c
  8788  00118A  0E00               	movlw	0
  8789  00118C  6EE6               	movwf	postinc1,c
  8790  00118E  0E00               	movlw	0
  8791  001190  0100               	movlb	0	; () banked
  8792  001192  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8793  001194  0E0A               	movlw	10
  8794  001196  6F82               	movwf	___awmod@divisor& (0+255),b
  8795  001198  0100               	movlb	0	; () banked
  8796  00119A  5191               	movf	scale@scl& (0+255),w,b
  8797  00119C  0100               	movlb	0	; () banked
  8798  00119E  6F80               	movwf	___awmod@dividend& (0+255),b
  8799  0011A0  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8800  0011A2  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  8801  0011A4  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  8802  0011A6  EC34  F01D         	call	___awmod	;wreg free
  8803  0011AA  0100               	movlb	0	; () banked
  8804  0011AC  C080  FFE6         	movff	?___awmod,postinc1
  8805  0011B0  0100               	movlb	0	; () banked
  8806  0011B2  C081  FFE6         	movff	?___awmod+1,postinc1
  8807  0011B6  EC23  F01E         	call	___wmul	;wreg free
  8808  0011BA  0EA4               	movlw	low __powers_
  8809  0011BC  243A               	addwf	btemp,w,c
  8810  0011BE  6EF6               	movwf	tblptrl,c
  8811  0011C0  0E75               	movlw	high __powers_
  8812  0011C2  203B               	addwfc	btemp+1,w,c
  8813  0011C4  6EF7               	movwf	tblptrh,c
  8814  0011C6                     	if	0	;There are less than 3 active tblptr bytes
  8815  0011C6                     	endif
  8816  0011C6  0009               	tblrd		*+
  8817  0011C8  CFF5 FFE6          	movff	tablat,postinc1
  8818  0011CC  0009               	tblrd		*+
  8819  0011CE  CFF5 FFE6          	movff	tablat,postinc1
  8820  0011D2  0009               	tblrd		*+
  8821  0011D4  CFF5 FFE6          	movff	tablat,postinc1
  8822  0011D8  0E03               	movlw	3
  8823  0011DA  6EE6               	movwf	postinc1,c
  8824  0011DC  0E00               	movlw	0
  8825  0011DE  6EE6               	movwf	postinc1,c
  8826  0011E0  0E00               	movlw	0
  8827  0011E2  0100               	movlb	0	; () banked
  8828  0011E4  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8829  0011E6  0E0A               	movlw	10
  8830  0011E8  6F88               	movwf	___awdiv@divisor& (0+255),b
  8831  0011EA  0E00               	movlw	0
  8832  0011EC  0100               	movlb	0	; () banked
  8833  0011EE  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8834  0011F0  0E64               	movlw	100
  8835  0011F2  6F82               	movwf	___awmod@divisor& (0+255),b
  8836  0011F4  0100               	movlb	0	; () banked
  8837  0011F6  5191               	movf	scale@scl& (0+255),w,b
  8838  0011F8  0100               	movlb	0	; () banked
  8839  0011FA  6F80               	movwf	___awmod@dividend& (0+255),b
  8840  0011FC  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8841  0011FE  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  8842  001200  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  8843  001202  EC34  F01D         	call	___awmod	;wreg free
  8844  001206  C080  F086         	movff	?___awmod,___awdiv@dividend
  8845  00120A  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  8846  00120E  EC21  F01C         	call	___awdiv	;wreg free
  8847  001212  0E09               	movlw	9
  8848  001214  0100               	movlb	0	; () banked
  8849  001216  2786               	addwf	?___awdiv& (0+255),f,b
  8850  001218  0E00               	movlw	0
  8851  00121A  0100               	movlb	0	; () banked
  8852  00121C  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  8853  00121E  0100               	movlb	0	; () banked
  8854  001220  C086  FFE6         	movff	?___awdiv,postinc1
  8855  001224  0100               	movlb	0	; () banked
  8856  001226  C087  FFE6         	movff	?___awdiv+1,postinc1
  8857  00122A  EC23  F01E         	call	___wmul	;wreg free
  8858  00122E  0EA4               	movlw	low __powers_
  8859  001230  243A               	addwf	btemp,w,c
  8860  001232  6EF6               	movwf	tblptrl,c
  8861  001234  0E75               	movlw	high __powers_
  8862  001236  203B               	addwfc	btemp+1,w,c
  8863  001238  6EF7               	movwf	tblptrh,c
  8864  00123A                     	if	0	;There are less than 3 active tblptr bytes
  8865  00123A                     	endif
  8866  00123A  0009               	tblrd		*+
  8867  00123C  CFF5 FFE6          	movff	tablat,postinc1
  8868  001240  0009               	tblrd		*+
  8869  001242  CFF5 FFE6          	movff	tablat,postinc1
  8870  001246  0009               	tblrd		*+
  8871  001248  CFF5 FFE6          	movff	tablat,postinc1
  8872  00124C  0E03               	movlw	3
  8873  00124E  6EE6               	movwf	postinc1,c
  8874  001250  0E00               	movlw	0
  8875  001252  6EE6               	movwf	postinc1,c
  8876  001254  0E00               	movlw	0
  8877  001256  0100               	movlb	0	; () banked
  8878  001258  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8879  00125A  0E64               	movlw	100
  8880  00125C  6F88               	movwf	___awdiv@divisor& (0+255),b
  8881  00125E  0100               	movlb	0	; () banked
  8882  001260  5191               	movf	scale@scl& (0+255),w,b
  8883  001262  0100               	movlb	0	; () banked
  8884  001264  6F86               	movwf	___awdiv@dividend& (0+255),b
  8885  001266  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  8886  001268  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  8887  00126A  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8888  00126C  EC21  F01C         	call	___awdiv	;wreg free
  8889  001270  0E12               	movlw	18
  8890  001272  0100               	movlb	0	; () banked
  8891  001274  2786               	addwf	?___awdiv& (0+255),f,b
  8892  001276  0E00               	movlw	0
  8893  001278  0100               	movlb	0	; () banked
  8894  00127A  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  8895  00127C  0100               	movlb	0	; () banked
  8896  00127E  C086  FFE6         	movff	?___awdiv,postinc1
  8897  001282  0100               	movlb	0	; () banked
  8898  001284  C087  FFE6         	movff	?___awdiv+1,postinc1
  8899  001288  EC23  F01E         	call	___wmul	;wreg free
  8900  00128C  0EA4               	movlw	low __powers_
  8901  00128E  243A               	addwf	btemp,w,c
  8902  001290  6EF6               	movwf	tblptrl,c
  8903  001292  0E75               	movlw	high __powers_
  8904  001294  203B               	addwfc	btemp+1,w,c
  8905  001296  6EF7               	movwf	tblptrh,c
  8906  001298                     	if	0	;There are less than 3 active tblptr bytes
  8907  001298                     	endif
  8908  001298  0009               	tblrd		*+
  8909  00129A  CFF5 FFE6          	movff	tablat,postinc1
  8910  00129E  0009               	tblrd		*+
  8911  0012A0  CFF5 FFE6          	movff	tablat,postinc1
  8912  0012A4  0009               	tblrd		*+
  8913  0012A6  CFF5 FFE6          	movff	tablat,postinc1
  8914  0012AA  EC10  F012         	call	___ftmul	;wreg free
  8915  0012AE  C03A  FFE6         	movff	btemp,postinc1
  8916  0012B2  C03B  FFE6         	movff	btemp+1,postinc1
  8917  0012B6  C03C  FFE6         	movff	btemp+2,postinc1
  8918  0012BA  EC10  F012         	call	___ftmul	;wreg free
  8919  0012BE  C03A  F08E         	movff	btemp,?_scale
  8920  0012C2  C03B  F08F         	movff	btemp+1,?_scale+1
  8921  0012C6  C03C  F090         	movff	btemp+2,?_scale+2
  8922  0012CA  0012               	return	
  8923  0012CC                     l5991:
  8924                           
  8925                           ;doprnt.c: 438: else if(scl > 10)
  8926  0012CC  0100               	movlb	0	; () banked
  8927  0012CE  5191               	movf	scale@scl& (0+255),w,b
  8928  0012D0  0A80               	xorlw	128
  8929  0012D2  0F75               	addlw	-139
  8930  0012D4  A0D8               	btfss	status,0,c
  8931  0012D6  D05B               	goto	l5997
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8935  0012D8  0E03               	movlw	3
  8936  0012DA  6EE6               	movwf	postinc1,c
  8937  0012DC  0E00               	movlw	0
  8938  0012DE  6EE6               	movwf	postinc1,c
  8939  0012E0  0E00               	movlw	0
  8940  0012E2  0100               	movlb	0	; () banked
  8941  0012E4  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  8942  0012E6  0E0A               	movlw	10
  8943  0012E8  6F82               	movwf	___awmod@divisor& (0+255),b
  8944  0012EA  0100               	movlb	0	; () banked
  8945  0012EC  5191               	movf	scale@scl& (0+255),w,b
  8946  0012EE  0100               	movlb	0	; () banked
  8947  0012F0  6F80               	movwf	___awmod@dividend& (0+255),b
  8948  0012F2  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  8949  0012F4  BF80               	btfsc	___awmod@dividend& (0+255),7,b
  8950  0012F6  0781               	decf	(___awmod@dividend+1)& (0+255),f,b
  8951  0012F8  EC34  F01D         	call	___awmod	;wreg free
  8952  0012FC  0100               	movlb	0	; () banked
  8953  0012FE  C080  FFE6         	movff	?___awmod,postinc1
  8954  001302  0100               	movlb	0	; () banked
  8955  001304  C081  FFE6         	movff	?___awmod+1,postinc1
  8956  001308  EC23  F01E         	call	___wmul	;wreg free
  8957  00130C  0EA4               	movlw	low __powers_
  8958  00130E  243A               	addwf	btemp,w,c
  8959  001310  6EF6               	movwf	tblptrl,c
  8960  001312  0E75               	movlw	high __powers_
  8961  001314  203B               	addwfc	btemp+1,w,c
  8962  001316  6EF7               	movwf	tblptrh,c
  8963  001318                     	if	0	;There are less than 3 active tblptr bytes
  8964  001318                     	endif
  8965  001318  0009               	tblrd		*+
  8966  00131A  CFF5 FFE6          	movff	tablat,postinc1
  8967  00131E  0009               	tblrd		*+
  8968  001320  CFF5 FFE6          	movff	tablat,postinc1
  8969  001324  0009               	tblrd		*+
  8970  001326  CFF5 FFE6          	movff	tablat,postinc1
  8971  00132A  0E03               	movlw	3
  8972  00132C  6EE6               	movwf	postinc1,c
  8973  00132E  0E00               	movlw	0
  8974  001330  6EE6               	movwf	postinc1,c
  8975  001332  0E00               	movlw	0
  8976  001334  0100               	movlb	0	; () banked
  8977  001336  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  8978  001338  0E0A               	movlw	10
  8979  00133A  6F88               	movwf	___awdiv@divisor& (0+255),b
  8980  00133C  0100               	movlb	0	; () banked
  8981  00133E  5191               	movf	scale@scl& (0+255),w,b
  8982  001340  0100               	movlb	0	; () banked
  8983  001342  6F86               	movwf	___awdiv@dividend& (0+255),b
  8984  001344  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  8985  001346  BF86               	btfsc	___awdiv@dividend& (0+255),7,b
  8986  001348  0787               	decf	(___awdiv@dividend+1)& (0+255),f,b
  8987  00134A  EC21  F01C         	call	___awdiv	;wreg free
  8988  00134E  0E09               	movlw	9
  8989  001350  0100               	movlb	0	; () banked
  8990  001352  2786               	addwf	?___awdiv& (0+255),f,b
  8991  001354  0E00               	movlw	0
  8992  001356  0100               	movlb	0	; () banked
  8993  001358  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  8994  00135A  0100               	movlb	0	; () banked
  8995  00135C  C086  FFE6         	movff	?___awdiv,postinc1
  8996  001360  0100               	movlb	0	; () banked
  8997  001362  C087  FFE6         	movff	?___awdiv+1,postinc1
  8998  001366  EC23  F01E         	call	___wmul	;wreg free
  8999  00136A  0EA4               	movlw	low __powers_
  9000  00136C  243A               	addwf	btemp,w,c
  9001  00136E  6EF6               	movwf	tblptrl,c
  9002  001370  0E75               	movlw	high __powers_
  9003  001372  203B               	addwfc	btemp+1,w,c
  9004  001374  6EF7               	movwf	tblptrh,c
  9005  001376                     	if	0	;There are less than 3 active tblptr bytes
  9006  001376                     	endif
  9007  001376  0009               	tblrd		*+
  9008  001378  CFF5 FFE6          	movff	tablat,postinc1
  9009  00137C  0009               	tblrd		*+
  9010  00137E  CFF5 FFE6          	movff	tablat,postinc1
  9011  001382  0009               	tblrd		*+
  9012  001384  CFF5 FFE6          	movff	tablat,postinc1
  9013  001388  EC10  F012         	call	___ftmul	;wreg free
  9014  00138C  D798               	goto	L4
  9015  00138E                     l5997:
  9016                           
  9017                           ;doprnt.c: 440: return _powers_[scl];
  9018  00138E  0100               	movlb	0	; () banked
  9019  001390  5191               	movf	scale@scl& (0+255),w,b
  9020  001392  0D03               	mullw	3
  9021  001394  0EA4               	movlw	low __powers_
  9022  001396  24F3               	addwf	prodl,w,c
  9023  001398  6EF6               	movwf	tblptrl,c
  9024  00139A  0E75               	movlw	high __powers_
  9025  00139C  20F4               	addwfc	prodh,w,c
  9026  00139E  6EF7               	movwf	tblptrh,c
  9027  0013A0                     	if	0	;There are less than 3 active tblptr bytes
  9028  0013A0                     	endif
  9029  0013A0  0009               	tblrd		*+
  9030  0013A2  CFF5 F08E          	movff	tablat,?_scale
  9031  0013A6  0009               	tblrd		*+
  9032  0013A8  CFF5 F08F          	movff	tablat,?_scale+1
  9033  0013AC  000A               	tblrd		*-
  9034  0013AE  CFF5 F090          	movff	tablat,?_scale+2
  9035  0013B2  0012               	return	
  9036  0013B4                     __end_of_scale:
  9037                           	opt stack 0
  9038                           tblptru	equ	0xFF8
  9039                           tblptrh	equ	0xFF7
  9040                           tblptrl	equ	0xFF6
  9041                           tablat	equ	0xFF5
  9042                           prodh	equ	0xFF4
  9043                           prodl	equ	0xFF3
  9044                           intcon	equ	0xFF2
  9045                           intcon2	equ	0xFF1
  9046                           indf0	equ	0xFEF
  9047                           postinc0	equ	0xFEE
  9048                           fsr0h	equ	0xFEA
  9049                           fsr0l	equ	0xFE9
  9050                           wreg	equ	0xFE8
  9051                           postinc1	equ	0xFE6
  9052                           postdec1	equ	0xFE5
  9053                           plusw1	equ	0xFE3
  9054                           fsr1h	equ	0xFE2
  9055                           fsr1l	equ	0xFE1
  9056                           indf2	equ	0xFDF
  9057                           postinc2	equ	0xFDE
  9058                           postdec2	equ	0xFDD
  9059                           fsr2h	equ	0xFDA
  9060                           fsr2l	equ	0xFD9
  9061                           status	equ	0xFD8
  9062                           
  9063 ;; *************** function ___wmul *****************
  9064 ;; Defined at:
  9065 ;;		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  multiplier      2  [STACK] unsigned int 
  9068 ;;  multiplicand    2  [STACK] unsigned int 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  product         2  [STACK] unsigned int 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  2  [STACK] unsigned int 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, prodl, prodh
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9080 ;;      Params:         0       0       0       0       0       0       0
  9081 ;;      Locals:         0       0       0       0       0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0
  9083 ;;      Totals:         0       0       0       0       0       0       0
  9084 ;;Total ram usage:        0 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:   10
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_fround
  9091 ;;		_scale
  9092 ;;		_sprintf
  9093 ;;		_atoi
  9094 ;; This function uses a reentrant model
  9095 ;;
  9096                           
  9097                           	psect	text18
  9098  003C46                     __ptext18:
  9099                           	opt stack 0
  9100  003C46                     ___wmul:
  9101                           	opt stack 0
  9102                           
  9103                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0
  9104  003C46  52E6               	movf	postinc1,f,c
  9105  003C48  52E6               	movf	postinc1,f,c
  9106                           
  9107                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  9108                           
  9109                           ;incstack = 0
  9110  003C4A  0EFA               	movlw	-6
  9111  003C4C  CFE3 F045          	movff	plusw1,btemp+11
  9112                           
  9113                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  9114  003C50  0EFC               	movlw	-4
  9115  003C52  50E3               	movf	plusw1,w,c
  9116  003C54  0245               	mulwf	btemp+11,c
  9117                           
  9118                           ;stkvar	___wmul@product @ sp[(-2)+0]
  9119  003C56  0EFE               	movlw	-2
  9120  003C58  CFF3 FFE3          	movff	prodl,plusw1
  9121  003C5C  0EFF               	movlw	-1
  9122  003C5E  CFF4 FFE3          	movff	prodh,plusw1
  9123                           
  9124                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  9125  003C62  0EFB               	movlw	251
  9126  003C64  24E1               	addwf	fsr1l,w,c
  9127  003C66  6ED9               	movwf	fsr2l,c
  9128  003C68  0EFF               	movlw	255
  9129  003C6A  20E2               	addwfc	fsr1h,w,c
  9130  003C6C  6EDA               	movwf	fsr2h,c
  9131  003C6E  50DF               	movf	indf2,w,c
  9132  003C70  6E45               	movwf	btemp+11,c
  9133                           
  9134                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  9135  003C72  0EFC               	movlw	-4
  9136  003C74  50E3               	movf	plusw1,w,c
  9137  003C76  0245               	mulwf	btemp+11,c
  9138  003C78  CFF3 FFF4          	movff	prodl,prodh
  9139  003C7C  6AF3               	clrf	prodl,c
  9140                           
  9141                           ;stkvar	___wmul@product @ sp[(-2)+0]
  9142  003C7E  50E1               	movf	fsr1l,w,c
  9143  003C80  0FFE               	addlw	-2
  9144  003C82  6ED9               	movwf	fsr2l,c
  9145  003C84  50E2               	movf	fsr1h,w,c
  9146  003C86  6EDA               	movwf	fsr2h,c
  9147  003C88  0EFF               	movlw	255
  9148  003C8A  22DA               	addwfc	fsr2h,f,c
  9149  003C8C  50F3               	movf	prodl,w,c
  9150  003C8E  26DE               	addwf	postinc2,f,c
  9151  003C90  50F4               	movf	prodh,w,c
  9152  003C92  22DD               	addwfc	postdec2,f,c
  9153                           
  9154                           ;stkvar	___wmul@multiplicand @ sp[(-2)+-4]
  9155  003C94  0EFA               	movlw	-6
  9156  003C96  CFE3 F045          	movff	plusw1,btemp+11
  9157                           
  9158                           ;stkvar	___wmul@multiplier @ sp[(-2)+-2]
  9159  003C9A  0EFD               	movlw	253
  9160  003C9C  24E1               	addwf	fsr1l,w,c
  9161  003C9E  6ED9               	movwf	fsr2l,c
  9162  003CA0  0EFF               	movlw	255
  9163  003CA2  20E2               	addwfc	fsr1h,w,c
  9164  003CA4  6EDA               	movwf	fsr2h,c
  9165  003CA6  50DF               	movf	indf2,w,c
  9166  003CA8  0245               	mulwf	btemp+11,c
  9167  003CAA  CFF3 FFF4          	movff	prodl,prodh
  9168  003CAE  6AF3               	clrf	prodl,c
  9169                           
  9170                           ;stkvar	___wmul@product @ sp[(-2)+0]
  9171  003CB0  50E1               	movf	fsr1l,w,c
  9172  003CB2  0FFE               	addlw	-2
  9173  003CB4  6ED9               	movwf	fsr2l,c
  9174  003CB6  50E2               	movf	fsr1h,w,c
  9175  003CB8  6EDA               	movwf	fsr2h,c
  9176  003CBA  0EFF               	movlw	255
  9177  003CBC  22DA               	addwfc	fsr2h,f,c
  9178  003CBE  50F3               	movf	prodl,w,c
  9179  003CC0  26DE               	addwf	postinc2,f,c
  9180  003CC2  50F4               	movf	prodh,w,c
  9181  003CC4  22DD               	addwfc	postdec2,f,c
  9182                           
  9183                           ;stkvar	___wmul@product @ sp[(-2)+0]
  9184  003CC6  0EFE               	movlw	-2
  9185  003CC8  CFE3 F03A          	movff	plusw1,btemp
  9186  003CCC  0EFF               	movlw	-1
  9187  003CCE  CFE3 F03B          	movff	plusw1,btemp+1
  9188                           
  9189                           ; ___wmul: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
  9190  003CD2  0EFA               	movlw	250
  9191  003CD4  26E1               	addwf	fsr1l,f,c
  9192  003CD6  0EFF               	movlw	255
  9193  003CD8  22E2               	addwfc	fsr1h,f,c
  9194  003CDA  0012               	return		;funcret
  9195  003CDC                     __end_of___wmul:
  9196                           	opt stack 0
  9197                           tblptru	equ	0xFF8
  9198                           tblptrh	equ	0xFF7
  9199                           tblptrl	equ	0xFF6
  9200                           tablat	equ	0xFF5
  9201                           prodh	equ	0xFF4
  9202                           prodl	equ	0xFF3
  9203                           intcon	equ	0xFF2
  9204                           intcon2	equ	0xFF1
  9205                           indf0	equ	0xFEF
  9206                           postinc0	equ	0xFEE
  9207                           fsr0h	equ	0xFEA
  9208                           fsr0l	equ	0xFE9
  9209                           wreg	equ	0xFE8
  9210                           postinc1	equ	0xFE6
  9211                           postdec1	equ	0xFE5
  9212                           plusw1	equ	0xFE3
  9213                           fsr1h	equ	0xFE2
  9214                           fsr1l	equ	0xFE1
  9215                           indf2	equ	0xFDF
  9216                           postinc2	equ	0xFDE
  9217                           postdec2	equ	0xFDD
  9218                           fsr2h	equ	0xFDA
  9219                           fsr2l	equ	0xFD9
  9220                           status	equ	0xFD8
  9221                           
  9222 ;; *************** function _fround *****************
  9223 ;; Defined at:
  9224 ;;		line 409 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;  prec            1    wreg     unsigned char 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  prec            1   17[BANK0 ] unsigned char 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  3   14[BANK0 ] unsigned char 
  9231 ;; Registers used:
  9232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9238 ;;      Params:         0       3       0       0       0       0       0
  9239 ;;      Locals:         0       1       0       0       0       0       0
  9240 ;;      Temps:          0       0       0       0       0       0       0
  9241 ;;      Totals:         0       4       0       0       0       0       0
  9242 ;;Total ram usage:        4 bytes
  9243 ;; Hardware stack levels used:    1
  9244 ;; Hardware stack levels required when called:   12
  9245 ;; This function calls:
  9246 ;;		___awdiv
  9247 ;;		___awmod
  9248 ;;		___ftmul
  9249 ;;		___wmul
  9250 ;; This function is called by:
  9251 ;;		_sprintf
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           	psect	text19
  9256  001CF4                     __ptext19:
  9257                           	opt stack 0
  9258  001CF4                     _fround:
  9259                           	opt stack 13
  9260                           
  9261                           ;incstack = 0
  9262                           ;fround@prec stored from wreg
  9263  001CF4  0100               	movlb	0	; () banked
  9264  001CF6  6F91               	movwf	fround@prec& (0+255),b
  9265                           
  9266                           ;doprnt.c: 413: if(prec>=110)
  9267  001CF8  0E6D               	movlw	109
  9268  001CFA  0100               	movlb	0	; () banked
  9269  001CFC  6591               	cpfsgt	fround@prec& (0+255),b
  9270  001CFE  D0A8               	goto	l5953
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9274  001D00  0E00               	movlw	0
  9275  001D02  6EE6               	movwf	postinc1,c
  9276  001D04  0E00               	movlw	0
  9277  001D06  6EE6               	movwf	postinc1,c
  9278  001D08  0E3F               	movlw	63
  9279  001D0A  6EE6               	movwf	postinc1,c
  9280  001D0C  0E03               	movlw	3
  9281  001D0E  6EE6               	movwf	postinc1,c
  9282  001D10  0E00               	movlw	0
  9283  001D12  6EE6               	movwf	postinc1,c
  9284  001D14  0E00               	movlw	0
  9285  001D16  0100               	movlb	0	; () banked
  9286  001D18  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  9287  001D1A  0E0A               	movlw	10
  9288  001D1C  6F82               	movwf	___awmod@divisor& (0+255),b
  9289  001D1E  C091  F080         	movff	fround@prec,___awmod@dividend
  9290  001D22  0100               	movlb	0	; () banked
  9291  001D24  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  9292  001D26  EC34  F01D         	call	___awmod	;wreg free
  9293  001D2A  0100               	movlb	0	; () banked
  9294  001D2C  C080  FFE6         	movff	?___awmod,postinc1
  9295  001D30  0100               	movlb	0	; () banked
  9296  001D32  C081  FFE6         	movff	?___awmod+1,postinc1
  9297  001D36  EC23  F01E         	call	___wmul	;wreg free
  9298  001D3A  0E7D               	movlw	low __npowers_
  9299  001D3C  243A               	addwf	btemp,w,c
  9300  001D3E  6EF6               	movwf	tblptrl,c
  9301  001D40  0E75               	movlw	high __npowers_
  9302  001D42  203B               	addwfc	btemp+1,w,c
  9303  001D44  6EF7               	movwf	tblptrh,c
  9304  001D46                     	if	0	;There are less than 3 active tblptr bytes
  9305  001D46                     	endif
  9306  001D46  0009               	tblrd		*+
  9307  001D48  CFF5 FFE6          	movff	tablat,postinc1
  9308  001D4C  0009               	tblrd		*+
  9309  001D4E  CFF5 FFE6          	movff	tablat,postinc1
  9310  001D52  0009               	tblrd		*+
  9311  001D54  CFF5 FFE6          	movff	tablat,postinc1
  9312  001D58  0E03               	movlw	3
  9313  001D5A  6EE6               	movwf	postinc1,c
  9314  001D5C  0E00               	movlw	0
  9315  001D5E  6EE6               	movwf	postinc1,c
  9316  001D60  0E00               	movlw	0
  9317  001D62  0100               	movlb	0	; () banked
  9318  001D64  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  9319  001D66  0E0A               	movlw	10
  9320  001D68  6F88               	movwf	___awdiv@divisor& (0+255),b
  9321  001D6A  0E00               	movlw	0
  9322  001D6C  0100               	movlb	0	; () banked
  9323  001D6E  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  9324  001D70  0E64               	movlw	100
  9325  001D72  6F82               	movwf	___awmod@divisor& (0+255),b
  9326  001D74  C091  F080         	movff	fround@prec,___awmod@dividend
  9327  001D78  0100               	movlb	0	; () banked
  9328  001D7A  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  9329  001D7C  EC34  F01D         	call	___awmod	;wreg free
  9330  001D80  C080  F086         	movff	?___awmod,___awdiv@dividend
  9331  001D84  C081  F087         	movff	?___awmod+1,___awdiv@dividend+1
  9332  001D88  EC21  F01C         	call	___awdiv	;wreg free
  9333  001D8C  0E09               	movlw	9
  9334  001D8E  0100               	movlb	0	; () banked
  9335  001D90  2786               	addwf	?___awdiv& (0+255),f,b
  9336  001D92  0E00               	movlw	0
  9337  001D94  0100               	movlb	0	; () banked
  9338  001D96  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  9339  001D98  0100               	movlb	0	; () banked
  9340  001D9A  C086  FFE6         	movff	?___awdiv,postinc1
  9341  001D9E  0100               	movlb	0	; () banked
  9342  001DA0  C087  FFE6         	movff	?___awdiv+1,postinc1
  9343  001DA4  EC23  F01E         	call	___wmul	;wreg free
  9344  001DA8  0E7D               	movlw	low __npowers_
  9345  001DAA  243A               	addwf	btemp,w,c
  9346  001DAC  6EF6               	movwf	tblptrl,c
  9347  001DAE  0E75               	movlw	high __npowers_
  9348  001DB0  203B               	addwfc	btemp+1,w,c
  9349  001DB2  6EF7               	movwf	tblptrh,c
  9350  001DB4                     	if	0	;There are less than 3 active tblptr bytes
  9351  001DB4                     	endif
  9352  001DB4  0009               	tblrd		*+
  9353  001DB6  CFF5 FFE6          	movff	tablat,postinc1
  9354  001DBA  0009               	tblrd		*+
  9355  001DBC  CFF5 FFE6          	movff	tablat,postinc1
  9356  001DC0  0009               	tblrd		*+
  9357  001DC2  CFF5 FFE6          	movff	tablat,postinc1
  9358  001DC6  0E03               	movlw	3
  9359  001DC8  6EE6               	movwf	postinc1,c
  9360  001DCA  0E00               	movlw	0
  9361  001DCC  6EE6               	movwf	postinc1,c
  9362  001DCE  0E00               	movlw	0
  9363  001DD0  0100               	movlb	0	; () banked
  9364  001DD2  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  9365  001DD4  0E64               	movlw	100
  9366  001DD6  6F88               	movwf	___awdiv@divisor& (0+255),b
  9367  001DD8  C091  F086         	movff	fround@prec,___awdiv@dividend
  9368  001DDC  0100               	movlb	0	; () banked
  9369  001DDE  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  9370  001DE0  EC21  F01C         	call	___awdiv	;wreg free
  9371  001DE4  0E12               	movlw	18
  9372  001DE6  0100               	movlb	0	; () banked
  9373  001DE8  2786               	addwf	?___awdiv& (0+255),f,b
  9374  001DEA  0E00               	movlw	0
  9375  001DEC  0100               	movlb	0	; () banked
  9376  001DEE  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  9377  001DF0  0100               	movlb	0	; () banked
  9378  001DF2  C086  FFE6         	movff	?___awdiv,postinc1
  9379  001DF6  0100               	movlb	0	; () banked
  9380  001DF8  C087  FFE6         	movff	?___awdiv+1,postinc1
  9381  001DFC  EC23  F01E         	call	___wmul	;wreg free
  9382  001E00  0E7D               	movlw	low __npowers_
  9383  001E02  243A               	addwf	btemp,w,c
  9384  001E04  6EF6               	movwf	tblptrl,c
  9385  001E06  0E75               	movlw	high __npowers_
  9386  001E08  203B               	addwfc	btemp+1,w,c
  9387  001E0A  6EF7               	movwf	tblptrh,c
  9388  001E0C                     	if	0	;There are less than 3 active tblptr bytes
  9389  001E0C                     	endif
  9390  001E0C  0009               	tblrd		*+
  9391  001E0E  CFF5 FFE6          	movff	tablat,postinc1
  9392  001E12  0009               	tblrd		*+
  9393  001E14  CFF5 FFE6          	movff	tablat,postinc1
  9394  001E18  0009               	tblrd		*+
  9395  001E1A  CFF5 FFE6          	movff	tablat,postinc1
  9396  001E1E  EC10  F012         	call	___ftmul	;wreg free
  9397  001E22  C03A  FFE6         	movff	btemp,postinc1
  9398  001E26  C03B  FFE6         	movff	btemp+1,postinc1
  9399  001E2A  C03C  FFE6         	movff	btemp+2,postinc1
  9400  001E2E  EC10  F012         	call	___ftmul	;wreg free
  9401  001E32  C03A  FFE6         	movff	btemp,postinc1
  9402  001E36  C03B  FFE6         	movff	btemp+1,postinc1
  9403  001E3A  C03C  FFE6         	movff	btemp+2,postinc1
  9404  001E3E  EC10  F012         	call	___ftmul	;wreg free
  9405  001E42  C03A  F08E         	movff	btemp,?_fround
  9406  001E46  C03B  F08F         	movff	btemp+1,?_fround+1
  9407  001E4A  C03C  F090         	movff	btemp+2,?_fround+2
  9408  001E4E  0012               	return	
  9409  001E50                     l5953:
  9410                           
  9411                           ;doprnt.c: 415: else if(prec > 10)
  9412  001E50  0E0A               	movlw	10
  9413  001E52  0100               	movlb	0	; () banked
  9414  001E54  6591               	cpfsgt	fround@prec& (0+255),b
  9415  001E56  D063               	goto	l5959
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9419  001E58  0E00               	movlw	0
  9420  001E5A  6EE6               	movwf	postinc1,c
  9421  001E5C  0E00               	movlw	0
  9422  001E5E  6EE6               	movwf	postinc1,c
  9423  001E60  0E3F               	movlw	63
  9424  001E62  6EE6               	movwf	postinc1,c
  9425  001E64  0E03               	movlw	3
  9426  001E66  6EE6               	movwf	postinc1,c
  9427  001E68  0E00               	movlw	0
  9428  001E6A  6EE6               	movwf	postinc1,c
  9429  001E6C  0E00               	movlw	0
  9430  001E6E  0100               	movlb	0	; () banked
  9431  001E70  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  9432  001E72  0E0A               	movlw	10
  9433  001E74  6F82               	movwf	___awmod@divisor& (0+255),b
  9434  001E76  C091  F080         	movff	fround@prec,___awmod@dividend
  9435  001E7A  0100               	movlb	0	; () banked
  9436  001E7C  6B81               	clrf	(___awmod@dividend+1)& (0+255),b
  9437  001E7E  EC34  F01D         	call	___awmod	;wreg free
  9438  001E82  0100               	movlb	0	; () banked
  9439  001E84  C080  FFE6         	movff	?___awmod,postinc1
  9440  001E88  0100               	movlb	0	; () banked
  9441  001E8A  C081  FFE6         	movff	?___awmod+1,postinc1
  9442  001E8E  EC23  F01E         	call	___wmul	;wreg free
  9443  001E92  0E7D               	movlw	low __npowers_
  9444  001E94  243A               	addwf	btemp,w,c
  9445  001E96  6EF6               	movwf	tblptrl,c
  9446  001E98  0E75               	movlw	high __npowers_
  9447  001E9A  203B               	addwfc	btemp+1,w,c
  9448  001E9C  6EF7               	movwf	tblptrh,c
  9449  001E9E                     	if	0	;There are less than 3 active tblptr bytes
  9450  001E9E                     	endif
  9451  001E9E  0009               	tblrd		*+
  9452  001EA0  CFF5 FFE6          	movff	tablat,postinc1
  9453  001EA4  0009               	tblrd		*+
  9454  001EA6  CFF5 FFE6          	movff	tablat,postinc1
  9455  001EAA  0009               	tblrd		*+
  9456  001EAC  CFF5 FFE6          	movff	tablat,postinc1
  9457  001EB0  0E03               	movlw	3
  9458  001EB2  6EE6               	movwf	postinc1,c
  9459  001EB4  0E00               	movlw	0
  9460  001EB6  6EE6               	movwf	postinc1,c
  9461  001EB8  0E00               	movlw	0
  9462  001EBA  0100               	movlb	0	; () banked
  9463  001EBC  6F89               	movwf	(___awdiv@divisor+1)& (0+255),b
  9464  001EBE  0E0A               	movlw	10
  9465  001EC0  6F88               	movwf	___awdiv@divisor& (0+255),b
  9466  001EC2  C091  F086         	movff	fround@prec,___awdiv@dividend
  9467  001EC6  0100               	movlb	0	; () banked
  9468  001EC8  6B87               	clrf	(___awdiv@dividend+1)& (0+255),b
  9469  001ECA  EC21  F01C         	call	___awdiv	;wreg free
  9470  001ECE  0E09               	movlw	9
  9471  001ED0  0100               	movlb	0	; () banked
  9472  001ED2  2786               	addwf	?___awdiv& (0+255),f,b
  9473  001ED4  0E00               	movlw	0
  9474  001ED6  0100               	movlb	0	; () banked
  9475  001ED8  2387               	addwfc	(?___awdiv+1)& (0+255),f,b
  9476  001EDA  0100               	movlb	0	; () banked
  9477  001EDC  C086  FFE6         	movff	?___awdiv,postinc1
  9478  001EE0  0100               	movlb	0	; () banked
  9479  001EE2  C087  FFE6         	movff	?___awdiv+1,postinc1
  9480  001EE6  EC23  F01E         	call	___wmul	;wreg free
  9481  001EEA  0E7D               	movlw	low __npowers_
  9482  001EEC  243A               	addwf	btemp,w,c
  9483  001EEE  6EF6               	movwf	tblptrl,c
  9484  001EF0  0E75               	movlw	high __npowers_
  9485  001EF2  203B               	addwfc	btemp+1,w,c
  9486  001EF4  6EF7               	movwf	tblptrh,c
  9487  001EF6                     	if	0	;There are less than 3 active tblptr bytes
  9488  001EF6                     	endif
  9489  001EF6  0009               	tblrd		*+
  9490  001EF8  CFF5 FFE6          	movff	tablat,postinc1
  9491  001EFC  0009               	tblrd		*+
  9492  001EFE  CFF5 FFE6          	movff	tablat,postinc1
  9493  001F02  0009               	tblrd		*+
  9494  001F04  CFF5 FFE6          	movff	tablat,postinc1
  9495  001F08  EC10  F012         	call	___ftmul	;wreg free
  9496  001F0C  C03A  FFE6         	movff	btemp,postinc1
  9497  001F10  C03B  FFE6         	movff	btemp+1,postinc1
  9498  001F14  C03C  FFE6         	movff	btemp+2,postinc1
  9499  001F18  EC10  F012         	call	___ftmul	;wreg free
  9500  001F1C  D792               	goto	L5
  9501  001F1E                     l5959:
  9502                           
  9503                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9504  001F1E  0E00               	movlw	0
  9505  001F20  6EE6               	movwf	postinc1,c
  9506  001F22  0E00               	movlw	0
  9507  001F24  6EE6               	movwf	postinc1,c
  9508  001F26  0E3F               	movlw	63
  9509  001F28  6EE6               	movwf	postinc1,c
  9510  001F2A  0100               	movlb	0	; () banked
  9511  001F2C  5191               	movf	fround@prec& (0+255),w,b
  9512  001F2E  0D03               	mullw	3
  9513  001F30  0E7D               	movlw	low __npowers_
  9514  001F32  24F3               	addwf	prodl,w,c
  9515  001F34  6EF6               	movwf	tblptrl,c
  9516  001F36  0E75               	movlw	high __npowers_
  9517  001F38  20F4               	addwfc	prodh,w,c
  9518  001F3A  6EF7               	movwf	tblptrh,c
  9519  001F3C                     	if	0	;There are less than 3 active tblptr bytes
  9520  001F3C                     	endif
  9521  001F3C  0009               	tblrd		*+
  9522  001F3E  CFF5 FFE6          	movff	tablat,postinc1
  9523  001F42  0009               	tblrd		*+
  9524  001F44  CFF5 FFE6          	movff	tablat,postinc1
  9525  001F48  0009               	tblrd		*+
  9526  001F4A  CFF5 FFE6          	movff	tablat,postinc1
  9527  001F4E  EC10  F012         	call	___ftmul	;wreg free
  9528  001F52  C03A  F08E         	movff	btemp,?_fround
  9529  001F56  C03B  F08F         	movff	btemp+1,?_fround+1
  9530  001F5A  C03C  F090         	movff	btemp+2,?_fround+2
  9531  001F5E  0012               	return	
  9532  001F60                     __end_of_fround:
  9533                           	opt stack 0
  9534                           tblptru	equ	0xFF8
  9535                           tblptrh	equ	0xFF7
  9536                           tblptrl	equ	0xFF6
  9537                           tablat	equ	0xFF5
  9538                           prodh	equ	0xFF4
  9539                           prodl	equ	0xFF3
  9540                           intcon	equ	0xFF2
  9541                           intcon2	equ	0xFF1
  9542                           indf0	equ	0xFEF
  9543                           postinc0	equ	0xFEE
  9544                           fsr0h	equ	0xFEA
  9545                           fsr0l	equ	0xFE9
  9546                           wreg	equ	0xFE8
  9547                           postinc1	equ	0xFE6
  9548                           postdec1	equ	0xFE5
  9549                           plusw1	equ	0xFE3
  9550                           fsr1h	equ	0xFE2
  9551                           fsr1l	equ	0xFE1
  9552                           indf2	equ	0xFDF
  9553                           postinc2	equ	0xFDE
  9554                           postdec2	equ	0xFDD
  9555                           fsr2h	equ	0xFDA
  9556                           fsr2l	equ	0xFD9
  9557                           status	equ	0xFD8
  9558                           
  9559 ;; *************** function ___ftmul *****************
  9560 ;; Defined at:
  9561 ;;		line 62 in file "/Applications/microchip/xc8/v1.38/sources/common/ftmul.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;  f1              3  [STACK] float 
  9564 ;;  f2              3  [STACK] float 
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;  f3_as_produc    3  [STACK] unsigned um
  9567 ;;  sign            1  [STACK] unsigned char 
  9568 ;;  cntr            1  [STACK] unsigned char 
  9569 ;;  exp             1  [STACK] unsigned char 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  3  [STACK] float 
  9572 ;; Registers used:
  9573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9579 ;;      Params:         0       0       0       0       0       0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0
  9581 ;;      Temps:          0       0       0       0       0       0       0
  9582 ;;      Totals:         0       0       0       0       0       0       0
  9583 ;;Total ram usage:        0 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:   11
  9586 ;; This function calls:
  9587 ;;		___ftpack
  9588 ;; This function is called by:
  9589 ;;		_FindCurrentTemp
  9590 ;;		_fround
  9591 ;;		_scale
  9592 ;;		_sprintf
  9593 ;; This function uses a reentrant model
  9594 ;;
  9595                           
  9596                           	psect	text20
  9597  002420                     __ptext20:
  9598                           	opt stack 0
  9599  002420                     ___ftmul:
  9600                           	opt stack 0
  9601                           
  9602                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
  9603  002420  0E06               	movlw	6
  9604  002422  26E1               	addwf	fsr1l,f,c
  9605  002424  0E00               	movlw	0
  9606  002426  22E2               	addwfc	fsr1h,f,c
  9607                           
  9608                           ;incstack = 0
  9609  002428  0E0F               	movlw	15
  9610  00242A  6E45               	movwf	btemp+11,c
  9611                           
  9612                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
  9613  00242C  0EF7               	movlw	-9
  9614  00242E  CFE3 F040          	movff	plusw1,btemp+6
  9615  002432  0EF8               	movlw	-8
  9616  002434  CFE3 F041          	movff	plusw1,btemp+7
  9617  002438  0EF9               	movlw	-7
  9618  00243A  CFE3 F042          	movff	plusw1,btemp+8
  9619  00243E  2845               	incf	btemp+11,w,c
  9620  002440  6E3A               	movwf	btemp,c
  9621  002442  D004               	goto	u8540
  9622  002444                     u8545:
  9623  002444  90D8               	bcf	status,0,c
  9624  002446  3242               	rrcf	btemp+8,f,c
  9625  002448  3241               	rrcf	btemp+7,f,c
  9626  00244A  3240               	rrcf	btemp+6,f,c
  9627  00244C                     u8540:
  9628  00244C  2E3A               	decfsz	btemp,f,c
  9629  00244E  D7FA               	goto	u8545
  9630  002450  5040               	movf	btemp+6,w,c
  9631  002452  6E45               	movwf	btemp+11,c
  9632                           
  9633                           ;stkvar	___ftmul@exp @ sp[(-6)+5]
  9634  002454  0EFF               	movlw	-1
  9635  002456  C045  FFE3         	movff	btemp+11,plusw1
  9636  00245A  0EFF               	movlw	-1
  9637  00245C  50E3               	movf	plusw1,w,c
  9638  00245E  B4D8               	btfsc	status,2,c
  9639  002460  D01D               	goto	l7207
  9640  002462  0E0F               	movlw	15
  9641  002464  6E45               	movwf	btemp+11,c
  9642                           
  9643                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
  9644  002466  0EF4               	movlw	-12
  9645  002468  CFE3 F040          	movff	plusw1,btemp+6
  9646  00246C  0EF5               	movlw	-11
  9647  00246E  CFE3 F041          	movff	plusw1,btemp+7
  9648  002472  0EF6               	movlw	-10
  9649  002474  CFE3 F042          	movff	plusw1,btemp+8
  9650  002478  2845               	incf	btemp+11,w,c
  9651  00247A  6E3A               	movwf	btemp,c
  9652  00247C  D004               	goto	u8560
  9653  00247E                     u8565:
  9654  00247E  90D8               	bcf	status,0,c
  9655  002480  3242               	rrcf	btemp+8,f,c
  9656  002482  3241               	rrcf	btemp+7,f,c
  9657  002484  3240               	rrcf	btemp+6,f,c
  9658  002486                     u8560:
  9659  002486  2E3A               	decfsz	btemp,f,c
  9660  002488  D7FA               	goto	u8565
  9661  00248A  5040               	movf	btemp+6,w,c
  9662  00248C  6E45               	movwf	btemp+11,c
  9663                           
  9664                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
  9665  00248E  0EFD               	movlw	-3
  9666  002490  C045  FFE3         	movff	btemp+11,plusw1
  9667  002494  0EFD               	movlw	-3
  9668  002496  50E3               	movf	plusw1,w,c
  9669  002498  A4D8               	btfss	status,2,c
  9670  00249A  D007               	goto	l7211
  9671  00249C                     l7207:
  9672  00249C  0E00               	movlw	0
  9673  00249E  6E3A               	movwf	btemp,c
  9674  0024A0  0E00               	movlw	0
  9675  0024A2  6E3B               	movwf	btemp+1,c
  9676  0024A4  0E00               	movlw	0
  9677  0024A6  6E3C               	movwf	btemp+2,c
  9678  0024A8  D0C3               	goto	l1071
  9679  0024AA                     l7211:
  9680  0024AA  0E7B               	movlw	123
  9681  0024AC  6E45               	movwf	btemp+11,c
  9682                           
  9683                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
  9684  0024AE  0EFD               	movlw	-3
  9685  0024B0  50E3               	movf	plusw1,w,c
  9686  0024B2  2445               	addwf	btemp+11,w,c
  9687  0024B4  6E44               	movwf	btemp+10,c
  9688                           
  9689                           ;stkvar	___ftmul@exp @ sp[(-6)+5]
  9690  0024B6  50E1               	movf	fsr1l,w,c
  9691  0024B8  0FFF               	addlw	-1
  9692  0024BA  6ED9               	movwf	fsr2l,c
  9693  0024BC  50E2               	movf	fsr1h,w,c
  9694  0024BE  6EDA               	movwf	fsr2h,c
  9695  0024C0  0EFF               	movlw	255
  9696  0024C2  22DA               	addwfc	fsr2h,f,c
  9697  0024C4  5044               	movf	btemp+10,w,c
  9698  0024C6  26DF               	addwf	indf2,f,c
  9699                           
  9700                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
  9701  0024C8  0EF9               	movlw	249
  9702  0024CA  24E1               	addwf	fsr1l,w,c
  9703  0024CC  6ED9               	movwf	fsr2l,c
  9704  0024CE  0EFF               	movlw	255
  9705  0024D0  20E2               	addwfc	fsr1h,w,c
  9706  0024D2  6EDA               	movwf	fsr2h,c
  9707  0024D4  50DF               	movf	indf2,w,c
  9708  0024D6  6E45               	movwf	btemp+11,c
  9709                           
  9710                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
  9711  0024D8  0EFD               	movlw	-3
  9712  0024DA  C045  FFE3         	movff	btemp+11,plusw1
  9713                           
  9714                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
  9715  0024DE  0EF6               	movlw	246
  9716  0024E0  24E1               	addwf	fsr1l,w,c
  9717  0024E2  6ED9               	movwf	fsr2l,c
  9718  0024E4  0EFF               	movlw	255
  9719  0024E6  20E2               	addwfc	fsr1h,w,c
  9720  0024E8  6EDA               	movwf	fsr2h,c
  9721  0024EA  50DF               	movf	indf2,w,c
  9722  0024EC  6E45               	movwf	btemp+11,c
  9723                           
  9724                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
  9725  0024EE  50E1               	movf	fsr1l,w,c
  9726  0024F0  0FFD               	addlw	-3
  9727  0024F2  6ED9               	movwf	fsr2l,c
  9728  0024F4  50E2               	movf	fsr1h,w,c
  9729  0024F6  6EDA               	movwf	fsr2h,c
  9730  0024F8  0EFF               	movlw	255
  9731  0024FA  22DA               	addwfc	fsr2h,f,c
  9732  0024FC  5045               	movf	btemp+11,w,c
  9733  0024FE  1ADF               	xorwf	indf2,f,c
  9734                           
  9735                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
  9736  002500  0EFD               	movlw	-3
  9737  002502  CFE3 F03A          	movff	plusw1,btemp
  9738  002506  0E80               	movlw	128
  9739  002508  163A               	andwf	btemp,f,c
  9740  00250A  0EFD               	movlw	-3
  9741  00250C  C03A  FFE3         	movff	btemp,plusw1
  9742                           
  9743                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
  9744  002510  0EF8               	movlw	-8
  9745  002512  8EE3               	bsf	plusw1,7,c
  9746                           
  9747                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
  9748  002514  0EF5               	movlw	-11
  9749  002516  8EE3               	bsf	plusw1,7,c
  9750                           
  9751                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
  9752  002518  0EF6               	movlw	-10
  9753  00251A  6AE3               	clrf	plusw1,c
  9754                           
  9755                           ;stkvar	___ftmul@f3_as_product @ sp[(-6)+0]
  9756  00251C  0EFA               	movlw	-6
  9757  00251E  6AE3               	clrf	plusw1,c
  9758  002520  0EFB               	movlw	-5
  9759  002522  6AE3               	clrf	plusw1,c
  9760  002524  0EFC               	movlw	-4
  9761  002526  6AE3               	clrf	plusw1,c
  9762  002528  0E07               	movlw	7
  9763  00252A  6E45               	movwf	btemp+11,c
  9764                           
  9765                           ;stkvar	___ftmul@cntr @ sp[(-6)+4]
  9766  00252C  0EFE               	movlw	-2
  9767  00252E  C045  FFE3         	movff	btemp+11,plusw1
  9768  002532                     l7229:
  9769                           
  9770                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
  9771  002532  0EF7               	movlw	-9
  9772  002534  A0E3               	btfss	plusw1,0,c
  9773  002536  D01B               	goto	l7233
  9774                           
  9775                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
  9776                           ;stkvar	___ftmul@f3_as_product @ sp[(-6)+0]
  9777  002538  0EFA               	movlw	-6
  9778  00253A  50E3               	movf	plusw1,w,c
  9779  00253C  6E3A               	movwf	btemp,c
  9780  00253E  0EF4               	movlw	-12
  9781  002540  50E3               	movf	plusw1,w,c
  9782  002542  263A               	addwf	btemp,f,c
  9783  002544  0EFA               	movlw	-6
  9784  002546  C03A  FFE3         	movff	btemp,plusw1
  9785  00254A  0EFB               	movlw	-5
  9786  00254C  50E3               	movf	plusw1,w,c
  9787  00254E  6E3A               	movwf	btemp,c
  9788  002550  0EF5               	movlw	-11
  9789  002552  50E3               	movf	plusw1,w,c
  9790  002554  223A               	addwfc	btemp,f,c
  9791  002556  0EFB               	movlw	-5
  9792  002558  C03A  FFE3         	movff	btemp,plusw1
  9793  00255C  0EFC               	movlw	-4
  9794  00255E  50E3               	movf	plusw1,w,c
  9795  002560  6E3A               	movwf	btemp,c
  9796  002562  0EF6               	movlw	-10
  9797  002564  50E3               	movf	plusw1,w,c
  9798  002566  223A               	addwfc	btemp,f,c
  9799  002568  0EFC               	movlw	-4
  9800  00256A  C03A  FFE3         	movff	btemp,plusw1
  9801  00256E                     l7233:
  9802                           
  9803                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
  9804  00256E  90D8               	bcf	status,0,c
  9805  002570  0EF9               	movlw	-7
  9806  002572  32E3               	rrcf	plusw1,f,c
  9807  002574  0EF8               	movlw	-8
  9808  002576  32E3               	rrcf	plusw1,f,c
  9809  002578  0EF7               	movlw	-9
  9810  00257A  32E3               	rrcf	plusw1,f,c
  9811                           
  9812                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
  9813  00257C  90D8               	bcf	status,0,c
  9814  00257E  0EF4               	movlw	-12
  9815  002580  36E3               	rlcf	plusw1,f,c
  9816  002582  0EF5               	movlw	-11
  9817  002584  36E3               	rlcf	plusw1,f,c
  9818  002586  0EF6               	movlw	-10
  9819  002588  36E3               	rlcf	plusw1,f,c
  9820                           
  9821                           ;stkvar	___ftmul@cntr @ sp[(-6)+4]
  9822  00258A  0EFE               	movlw	-2
  9823  00258C  50E3               	movf	plusw1,w,c
  9824  00258E  6E3A               	movwf	btemp,c
  9825  002590  0E01               	movlw	1
  9826  002592  5E3A               	subwf	btemp,f,c
  9827  002594  0EFE               	movlw	-2
  9828  002596  C03A  FFE3         	movff	btemp,plusw1
  9829  00259A  A4D8               	btfss	status,2,c
  9830  00259C  D7CA               	goto	l7229
  9831                           
  9832                           ;stkvar	___ftmul@cntr @ sp[(-6)+4]
  9833  00259E  0EFE               	movlw	-2
  9834  0025A0  6AE3               	clrf	plusw1,c
  9835  0025A2  80E3               	bsf	plusw1,0,c
  9836  0025A4  86E3               	bsf	plusw1,3,c	;indir
  9837  0025A6                     l1076:
  9838                           
  9839                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
  9840  0025A6  0EF7               	movlw	-9
  9841  0025A8  A0E3               	btfss	plusw1,0,c
  9842  0025AA  D01B               	goto	l7241
  9843                           
  9844                           ;stkvar	___ftmul@f2 @ sp[(-6)+-6]
  9845                           ;stkvar	___ftmul@f3_as_product @ sp[(-6)+0]
  9846  0025AC  0EFA               	movlw	-6
  9847  0025AE  50E3               	movf	plusw1,w,c
  9848  0025B0  6E3A               	movwf	btemp,c
  9849  0025B2  0EF4               	movlw	-12
  9850  0025B4  50E3               	movf	plusw1,w,c
  9851  0025B6  263A               	addwf	btemp,f,c
  9852  0025B8  0EFA               	movlw	-6
  9853  0025BA  C03A  FFE3         	movff	btemp,plusw1
  9854  0025BE  0EFB               	movlw	-5
  9855  0025C0  50E3               	movf	plusw1,w,c
  9856  0025C2  6E3A               	movwf	btemp,c
  9857  0025C4  0EF5               	movlw	-11
  9858  0025C6  50E3               	movf	plusw1,w,c
  9859  0025C8  223A               	addwfc	btemp,f,c
  9860  0025CA  0EFB               	movlw	-5
  9861  0025CC  C03A  FFE3         	movff	btemp,plusw1
  9862  0025D0  0EFC               	movlw	-4
  9863  0025D2  50E3               	movf	plusw1,w,c
  9864  0025D4  6E3A               	movwf	btemp,c
  9865  0025D6  0EF6               	movlw	-10
  9866  0025D8  50E3               	movf	plusw1,w,c
  9867  0025DA  223A               	addwfc	btemp,f,c
  9868  0025DC  0EFC               	movlw	-4
  9869  0025DE  C03A  FFE3         	movff	btemp,plusw1
  9870  0025E2                     l7241:
  9871                           
  9872                           ;stkvar	___ftmul@f1 @ sp[(-6)+-3]
  9873  0025E2  90D8               	bcf	status,0,c
  9874  0025E4  0EF9               	movlw	-7
  9875  0025E6  32E3               	rrcf	plusw1,f,c
  9876  0025E8  0EF8               	movlw	-8
  9877  0025EA  32E3               	rrcf	plusw1,f,c
  9878  0025EC  0EF7               	movlw	-9
  9879  0025EE  32E3               	rrcf	plusw1,f,c
  9880                           
  9881                           ;stkvar	___ftmul@f3_as_product @ sp[(-6)+0]
  9882  0025F0  90D8               	bcf	status,0,c
  9883  0025F2  0EFC               	movlw	-4
  9884  0025F4  32E3               	rrcf	plusw1,f,c
  9885  0025F6  0EFB               	movlw	-5
  9886  0025F8  32E3               	rrcf	plusw1,f,c
  9887  0025FA  0EFA               	movlw	-6
  9888  0025FC  32E3               	rrcf	plusw1,f,c
  9889                           
  9890                           ;stkvar	___ftmul@cntr @ sp[(-6)+4]
  9891  0025FE  0EFE               	movlw	-2
  9892  002600  50E3               	movf	plusw1,w,c
  9893  002602  6E3A               	movwf	btemp,c
  9894  002604  0E01               	movlw	1
  9895  002606  5E3A               	subwf	btemp,f,c
  9896  002608  0EFE               	movlw	-2
  9897  00260A  C03A  FFE3         	movff	btemp,plusw1
  9898  00260E  A4D8               	btfss	status,2,c
  9899  002610  D7CA               	goto	l1076
  9900                           
  9901                           ;stkvar	___ftmul@sign @ sp[(-6)+3]
  9902  002612  0EFD               	movlw	-3
  9903  002614  50E3               	movf	plusw1,w,c
  9904  002616  6EE6               	movwf	postinc1,c
  9905                           
  9906                           ;stkvar	___ftmul@exp @ sp[(-7)+5]
  9907  002618  0EFE               	movlw	-2
  9908  00261A  50E3               	movf	plusw1,w,c
  9909  00261C  6EE6               	movwf	postinc1,c
  9910                           
  9911                           ;stkvar	___ftmul@f3_as_product @ sp[(-8)+0]
  9912  00261E  0EF8               	movlw	-8
  9913  002620  CFE3 FFE6          	movff	plusw1,postinc1
  9914  002624  CFE3 FFE6          	movff	plusw1,postinc1
  9915  002628  CFE3 FFE6          	movff	plusw1,postinc1
  9916  00262C  EC9F  F01A         	call	___ftpack	;wreg free
  9917  002630                     l1071:
  9918                           
  9919                           ; ___ftmul: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9920  002630  0EF4               	movlw	244
  9921  002632  26E1               	addwf	fsr1l,f,c
  9922  002634  0EFF               	movlw	255
  9923  002636  22E2               	addwfc	fsr1h,f,c
  9924  002638  0012               	return		;funcret
  9925  00263A                     __end_of___ftmul:
  9926                           	opt stack 0
  9927                           tblptru	equ	0xFF8
  9928                           tblptrh	equ	0xFF7
  9929                           tblptrl	equ	0xFF6
  9930                           tablat	equ	0xFF5
  9931                           prodh	equ	0xFF4
  9932                           prodl	equ	0xFF3
  9933                           intcon	equ	0xFF2
  9934                           intcon2	equ	0xFF1
  9935                           indf0	equ	0xFEF
  9936                           postinc0	equ	0xFEE
  9937                           fsr0h	equ	0xFEA
  9938                           fsr0l	equ	0xFE9
  9939                           wreg	equ	0xFE8
  9940                           postinc1	equ	0xFE6
  9941                           postdec1	equ	0xFE5
  9942                           plusw1	equ	0xFE3
  9943                           fsr1h	equ	0xFE2
  9944                           fsr1l	equ	0xFE1
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           postdec2	equ	0xFDD
  9948                           fsr2h	equ	0xFDA
  9949                           fsr2l	equ	0xFD9
  9950                           status	equ	0xFD8
  9951                           
  9952 ;; *************** function ___awmod *****************
  9953 ;; Defined at:
  9954 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  dividend        2    0[BANK0 ] int 
  9957 ;;  divisor         2    2[BANK0 ] int 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;  sign            1    5[BANK0 ] unsigned char 
  9960 ;;  counter         1    4[BANK0 ] unsigned char 
  9961 ;; Return value:  Size  Location     Type
  9962 ;;                  2    0[BANK0 ] int 
  9963 ;; Registers used:
  9964 ;;		wreg, status,2, status,0
  9965 ;; Tracked objects:
  9966 ;;		On entry : 0/0
  9967 ;;		On exit  : 0/0
  9968 ;;		Unchanged: 0/0
  9969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9970 ;;      Params:         0       4       0       0       0       0       0
  9971 ;;      Locals:         0       2       0       0       0       0       0
  9972 ;;      Temps:          0       0       0       0       0       0       0
  9973 ;;      Totals:         0       6       0       0       0       0       0
  9974 ;;Total ram usage:        6 bytes
  9975 ;; Hardware stack levels used:    1
  9976 ;; Hardware stack levels required when called:   10
  9977 ;; This function calls:
  9978 ;;		Nothing
  9979 ;; This function is called by:
  9980 ;;		_fround
  9981 ;;		_scale
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text21
  9986  003A68                     __ptext21:
  9987                           	opt stack 0
  9988  003A68                     ___awmod:
  9989                           	opt stack 14
  9990                           
  9991                           ;incstack = 0
  9992  003A68  0E00               	movlw	0
  9993  003A6A  0100               	movlb	0	; () banked
  9994  003A6C  6F85               	movwf	___awmod@sign& (0+255),b
  9995                           
  9996                           ; BSR set to: 0
  9997  003A6E  0100               	movlb	0	; () banked
  9998  003A70  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9999  003A72  D008               	goto	l5899
 10000                           
 10001                           ; BSR set to: 0
 10002  003A74  0100               	movlb	0	; () banked
 10003  003A76  6D80               	negf	___awmod@dividend& (0+255),b
 10004  003A78  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
 10005  003A7A  B0D8               	btfsc	status,0,c
 10006  003A7C  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
 10007                           
 10008                           ; BSR set to: 0
 10009  003A7E  0E01               	movlw	1
 10010  003A80  0100               	movlb	0	; () banked
 10011  003A82  6F85               	movwf	___awmod@sign& (0+255),b
 10012  003A84                     l5899:
 10013                           
 10014                           ; BSR set to: 0
 10015  003A84  0100               	movlb	0	; () banked
 10016  003A86  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10017  003A88  D005               	goto	l5903
 10018                           
 10019                           ; BSR set to: 0
 10020  003A8A  0100               	movlb	0	; () banked
 10021  003A8C  6D82               	negf	___awmod@divisor& (0+255),b
 10022  003A8E  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
 10023  003A90  B0D8               	btfsc	status,0,c
 10024  003A92  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
 10025  003A94                     l5903:
 10026                           
 10027                           ; BSR set to: 0
 10028  003A94  0100               	movlb	0	; () banked
 10029  003A96  5182               	movf	___awmod@divisor& (0+255),w,b
 10030  003A98  0100               	movlb	0	; () banked
 10031  003A9A  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10032  003A9C  B4D8               	btfsc	status,2,c
 10033  003A9E  D026               	goto	l5919
 10034                           
 10035                           ; BSR set to: 0
 10036  003AA0  0E01               	movlw	1
 10037  003AA2  0100               	movlb	0	; () banked
 10038  003AA4  6F84               	movwf	___awmod@counter& (0+255),b
 10039  003AA6  D006               	goto	l5909
 10040  003AA8                     l5907:
 10041                           
 10042                           ; BSR set to: 0
 10043  003AA8  0100               	movlb	0	; () banked
 10044  003AAA  90D8               	bcf	status,0,c
 10045  003AAC  3782               	rlcf	___awmod@divisor& (0+255),f,b
 10046  003AAE  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10047  003AB0  0100               	movlb	0	; () banked
 10048  003AB2  2B84               	incf	___awmod@counter& (0+255),f,b
 10049  003AB4                     l5909:
 10050                           
 10051                           ; BSR set to: 0
 10052  003AB4  0100               	movlb	0	; () banked
 10053  003AB6  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10054  003AB8  D7F7               	goto	l5907
 10055  003ABA                     l5911:
 10056                           
 10057                           ; BSR set to: 0
 10058  003ABA  0100               	movlb	0	; () banked
 10059  003ABC  5182               	movf	___awmod@divisor& (0+255),w,b
 10060  003ABE  0100               	movlb	0	; () banked
 10061  003AC0  5D80               	subwf	___awmod@dividend& (0+255),w,b
 10062  003AC2  0100               	movlb	0	; () banked
 10063  003AC4  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
 10064  003AC6  0100               	movlb	0	; () banked
 10065  003AC8  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10066  003ACA  A0D8               	btfss	status,0,c
 10067  003ACC  D008               	goto	l5915
 10068                           
 10069                           ; BSR set to: 0
 10070  003ACE  0100               	movlb	0	; () banked
 10071  003AD0  5182               	movf	___awmod@divisor& (0+255),w,b
 10072  003AD2  0100               	movlb	0	; () banked
 10073  003AD4  5F80               	subwf	___awmod@dividend& (0+255),f,b
 10074  003AD6  0100               	movlb	0	; () banked
 10075  003AD8  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
 10076  003ADA  0100               	movlb	0	; () banked
 10077  003ADC  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10078  003ADE                     l5915:
 10079                           
 10080                           ; BSR set to: 0
 10081  003ADE  0100               	movlb	0	; () banked
 10082  003AE0  90D8               	bcf	status,0,c
 10083  003AE2  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10084  003AE4  3382               	rrcf	___awmod@divisor& (0+255),f,b
 10085                           
 10086                           ; BSR set to: 0
 10087  003AE6  0100               	movlb	0	; () banked
 10088  003AE8  2F84               	decfsz	___awmod@counter& (0+255),f,b
 10089  003AEA  D7E7               	goto	l5911
 10090  003AEC                     l5919:
 10091                           
 10092                           ; BSR set to: 0
 10093  003AEC  0100               	movlb	0	; () banked
 10094  003AEE  5185               	movf	___awmod@sign& (0+255),w,b
 10095  003AF0  0100               	movlb	0	; () banked
 10096  003AF2  B4D8               	btfsc	status,2,c
 10097  003AF4  D005               	goto	l5923
 10098                           
 10099                           ; BSR set to: 0
 10100  003AF6  0100               	movlb	0	; () banked
 10101  003AF8  6D80               	negf	___awmod@dividend& (0+255),b
 10102  003AFA  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
 10103  003AFC  B0D8               	btfsc	status,0,c
 10104  003AFE  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
 10105  003B00                     l5923:
 10106                           
 10107                           ; BSR set to: 0
 10108  003B00  C080  F080         	movff	___awmod@dividend,?___awmod
 10109  003B04  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
 10110  003B08  0012               	return	
 10111  003B0A                     __end_of___awmod:
 10112                           	opt stack 0
 10113                           tblptru	equ	0xFF8
 10114                           tblptrh	equ	0xFF7
 10115                           tblptrl	equ	0xFF6
 10116                           tablat	equ	0xFF5
 10117                           prodh	equ	0xFF4
 10118                           prodl	equ	0xFF3
 10119                           intcon	equ	0xFF2
 10120                           intcon2	equ	0xFF1
 10121                           indf0	equ	0xFEF
 10122                           postinc0	equ	0xFEE
 10123                           fsr0h	equ	0xFEA
 10124                           fsr0l	equ	0xFE9
 10125                           wreg	equ	0xFE8
 10126                           postinc1	equ	0xFE6
 10127                           postdec1	equ	0xFE5
 10128                           plusw1	equ	0xFE3
 10129                           fsr1h	equ	0xFE2
 10130                           fsr1l	equ	0xFE1
 10131                           indf2	equ	0xFDF
 10132                           postinc2	equ	0xFDE
 10133                           postdec2	equ	0xFDD
 10134                           fsr2h	equ	0xFDA
 10135                           fsr2l	equ	0xFD9
 10136                           status	equ	0xFD8
 10137                           
 10138 ;; *************** function ___awdiv *****************
 10139 ;; Defined at:
 10140 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awdiv.c"
 10141 ;; Parameters:    Size  Location     Type
 10142 ;;  dividend        2    6[BANK0 ] int 
 10143 ;;  divisor         2    8[BANK0 ] int 
 10144 ;; Auto vars:     Size  Location     Type
 10145 ;;  quotient        2   12[BANK0 ] int 
 10146 ;;  sign            1   11[BANK0 ] unsigned char 
 10147 ;;  counter         1   10[BANK0 ] unsigned char 
 10148 ;; Return value:  Size  Location     Type
 10149 ;;                  2    6[BANK0 ] int 
 10150 ;; Registers used:
 10151 ;;		wreg, status,2, status,0
 10152 ;; Tracked objects:
 10153 ;;		On entry : 0/0
 10154 ;;		On exit  : 0/0
 10155 ;;		Unchanged: 0/0
 10156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10157 ;;      Params:         0       4       0       0       0       0       0
 10158 ;;      Locals:         0       4       0       0       0       0       0
 10159 ;;      Temps:          0       0       0       0       0       0       0
 10160 ;;      Totals:         0       8       0       0       0       0       0
 10161 ;;Total ram usage:        8 bytes
 10162 ;; Hardware stack levels used:    1
 10163 ;; Hardware stack levels required when called:   10
 10164 ;; This function calls:
 10165 ;;		Nothing
 10166 ;; This function is called by:
 10167 ;;		_fround
 10168 ;;		_scale
 10169 ;;		_sprintf
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text22
 10174  003842                     __ptext22:
 10175                           	opt stack 0
 10176  003842                     ___awdiv:
 10177                           	opt stack 14
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;incstack = 0
 10181  003842  0E00               	movlw	0
 10182  003844  0100               	movlb	0	; () banked
 10183  003846  6F8B               	movwf	___awdiv@sign& (0+255),b
 10184                           
 10185                           ; BSR set to: 0
 10186  003848  0100               	movlb	0	; () banked
 10187  00384A  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10188  00384C  D008               	goto	l5855
 10189                           
 10190                           ; BSR set to: 0
 10191  00384E  0100               	movlb	0	; () banked
 10192  003850  6D88               	negf	___awdiv@divisor& (0+255),b
 10193  003852  1F89               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10194  003854  B0D8               	btfsc	status,0,c
 10195  003856  2B89               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10196                           
 10197                           ; BSR set to: 0
 10198  003858  0E01               	movlw	1
 10199  00385A  0100               	movlb	0	; () banked
 10200  00385C  6F8B               	movwf	___awdiv@sign& (0+255),b
 10201  00385E                     l5855:
 10202                           
 10203                           ; BSR set to: 0
 10204  00385E  0100               	movlb	0	; () banked
 10205  003860  AF87               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10206  003862  D008               	goto	l5861
 10207                           
 10208                           ; BSR set to: 0
 10209  003864  0100               	movlb	0	; () banked
 10210  003866  6D86               	negf	___awdiv@dividend& (0+255),b
 10211  003868  1F87               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10212  00386A  B0D8               	btfsc	status,0,c
 10213  00386C  2B87               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10214                           
 10215                           ; BSR set to: 0
 10216  00386E  0E01               	movlw	1
 10217  003870  0100               	movlb	0	; () banked
 10218  003872  1B8B               	xorwf	___awdiv@sign& (0+255),f,b
 10219  003874                     l5861:
 10220                           
 10221                           ; BSR set to: 0
 10222  003874  0E00               	movlw	0
 10223  003876  0100               	movlb	0	; () banked
 10224  003878  6F8D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10225  00387A  0E00               	movlw	0
 10226  00387C  6F8C               	movwf	___awdiv@quotient& (0+255),b
 10227                           
 10228                           ; BSR set to: 0
 10229  00387E  0100               	movlb	0	; () banked
 10230  003880  5188               	movf	___awdiv@divisor& (0+255),w,b
 10231  003882  0100               	movlb	0	; () banked
 10232  003884  1189               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10233  003886  B4D8               	btfsc	status,2,c
 10234  003888  D02C               	goto	l5883
 10235                           
 10236                           ; BSR set to: 0
 10237  00388A  0E01               	movlw	1
 10238  00388C  0100               	movlb	0	; () banked
 10239  00388E  6F8A               	movwf	___awdiv@counter& (0+255),b
 10240  003890  D006               	goto	l5869
 10241  003892                     l5867:
 10242                           
 10243                           ; BSR set to: 0
 10244  003892  0100               	movlb	0	; () banked
 10245  003894  90D8               	bcf	status,0,c
 10246  003896  3788               	rlcf	___awdiv@divisor& (0+255),f,b
 10247  003898  3789               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10248  00389A  0100               	movlb	0	; () banked
 10249  00389C  2B8A               	incf	___awdiv@counter& (0+255),f,b
 10250  00389E                     l5869:
 10251                           
 10252                           ; BSR set to: 0
 10253  00389E  0100               	movlb	0	; () banked
 10254  0038A0  AF89               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10255  0038A2  D7F7               	goto	l5867
 10256  0038A4                     l5871:
 10257                           
 10258                           ; BSR set to: 0
 10259  0038A4  0100               	movlb	0	; () banked
 10260  0038A6  90D8               	bcf	status,0,c
 10261  0038A8  378C               	rlcf	___awdiv@quotient& (0+255),f,b
 10262  0038AA  378D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10263                           
 10264                           ; BSR set to: 0
 10265  0038AC  0100               	movlb	0	; () banked
 10266  0038AE  5188               	movf	___awdiv@divisor& (0+255),w,b
 10267  0038B0  0100               	movlb	0	; () banked
 10268  0038B2  5D86               	subwf	___awdiv@dividend& (0+255),w,b
 10269  0038B4  0100               	movlb	0	; () banked
 10270  0038B6  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10271  0038B8  0100               	movlb	0	; () banked
 10272  0038BA  5987               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10273  0038BC  A0D8               	btfss	status,0,c
 10274  0038BE  D00A               	goto	l5879
 10275                           
 10276                           ; BSR set to: 0
 10277  0038C0  0100               	movlb	0	; () banked
 10278  0038C2  5188               	movf	___awdiv@divisor& (0+255),w,b
 10279  0038C4  0100               	movlb	0	; () banked
 10280  0038C6  5F86               	subwf	___awdiv@dividend& (0+255),f,b
 10281  0038C8  0100               	movlb	0	; () banked
 10282  0038CA  5189               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10283  0038CC  0100               	movlb	0	; () banked
 10284  0038CE  5B87               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10285                           
 10286                           ; BSR set to: 0
 10287  0038D0  0100               	movlb	0	; () banked
 10288  0038D2  818C               	bsf	___awdiv@quotient& (0+255),0,b
 10289  0038D4                     l5879:
 10290                           
 10291                           ; BSR set to: 0
 10292  0038D4  0100               	movlb	0	; () banked
 10293  0038D6  90D8               	bcf	status,0,c
 10294  0038D8  3389               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10295  0038DA  3388               	rrcf	___awdiv@divisor& (0+255),f,b
 10296                           
 10297                           ; BSR set to: 0
 10298  0038DC  0100               	movlb	0	; () banked
 10299  0038DE  2F8A               	decfsz	___awdiv@counter& (0+255),f,b
 10300  0038E0  D7E1               	goto	l5871
 10301  0038E2                     l5883:
 10302                           
 10303                           ; BSR set to: 0
 10304  0038E2  0100               	movlb	0	; () banked
 10305  0038E4  518B               	movf	___awdiv@sign& (0+255),w,b
 10306  0038E6  0100               	movlb	0	; () banked
 10307  0038E8  B4D8               	btfsc	status,2,c
 10308  0038EA  D005               	goto	l5887
 10309                           
 10310                           ; BSR set to: 0
 10311  0038EC  0100               	movlb	0	; () banked
 10312  0038EE  6D8C               	negf	___awdiv@quotient& (0+255),b
 10313  0038F0  1F8D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10314  0038F2  B0D8               	btfsc	status,0,c
 10315  0038F4  2B8D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10316  0038F6                     l5887:
 10317                           
 10318                           ; BSR set to: 0
 10319  0038F6  C08C  F086         	movff	___awdiv@quotient,?___awdiv
 10320  0038FA  C08D  F087         	movff	___awdiv@quotient+1,?___awdiv+1
 10321  0038FE  0012               	return	
 10322  003900                     __end_of___awdiv:
 10323                           	opt stack 0
 10324                           tblptru	equ	0xFF8
 10325                           tblptrh	equ	0xFF7
 10326                           tblptrl	equ	0xFF6
 10327                           tablat	equ	0xFF5
 10328                           prodh	equ	0xFF4
 10329                           prodl	equ	0xFF3
 10330                           intcon	equ	0xFF2
 10331                           intcon2	equ	0xFF1
 10332                           indf0	equ	0xFEF
 10333                           postinc0	equ	0xFEE
 10334                           fsr0h	equ	0xFEA
 10335                           fsr0l	equ	0xFE9
 10336                           wreg	equ	0xFE8
 10337                           postinc1	equ	0xFE6
 10338                           postdec1	equ	0xFE5
 10339                           plusw1	equ	0xFE3
 10340                           fsr1h	equ	0xFE2
 10341                           fsr1l	equ	0xFE1
 10342                           indf2	equ	0xFDF
 10343                           postinc2	equ	0xFDE
 10344                           postdec2	equ	0xFDD
 10345                           fsr2h	equ	0xFDA
 10346                           fsr2l	equ	0xFD9
 10347                           status	equ	0xFD8
 10348                           
 10349 ;; *************** function __tdiv_to_l_ *****************
 10350 ;; Defined at:
 10351 ;;		line 60 in file "/Applications/microchip/xc8/v1.38/sources/common/ftdivl.c"
 10352 ;; Parameters:    Size  Location     Type
 10353 ;;  f1              3    0[BANK0 ] float 
 10354 ;;  f2              3    3[BANK0 ] float 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  quot            4    9[BANK0 ] unsigned long 
 10357 ;;  exp1            1   14[BANK0 ] unsigned char 
 10358 ;;  cntr            1   13[BANK0 ] unsigned char 
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  4    0[BANK0 ] unsigned long 
 10361 ;; Registers used:
 10362 ;;		wreg, status,2, status,0
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10368 ;;      Params:         0       6       0       0       0       0       0
 10369 ;;      Locals:         0       6       0       0       0       0       0
 10370 ;;      Temps:          0       3       0       0       0       0       0
 10371 ;;      Totals:         0      15       0       0       0       0       0
 10372 ;;Total ram usage:       15 bytes
 10373 ;; Hardware stack levels used:    1
 10374 ;; Hardware stack levels required when called:   10
 10375 ;; This function calls:
 10376 ;;		Nothing
 10377 ;; This function is called by:
 10378 ;;		_sprintf
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           	psect	text23
 10383  0027FA                     __ptext23:
 10384                           	opt stack 0
 10385  0027FA                     __tdiv_to_l_:
 10386                           	opt stack 15
 10387                           
 10388                           ; BSR set to: 0
 10389                           ;incstack = 0
 10390  0027FA  C082  F086         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10391  0027FE  0100               	movlb	0	; () banked
 10392  002800  6B87               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10393  002802  6B88               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10394  002804  0100               	movlb	0	; () banked
 10395  002806  3581               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10396  002808  0100               	movlb	0	; () banked
 10397  00280A  3786               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10398  00280C  E301               	bnc	u3491
 10399  00280E  8187               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10400  002810                     u3491:
 10401  002810  0100               	movlb	0	; () banked
 10402  002812  5186               	movf	??__tdiv_to_l_& (0+255),w,b
 10403  002814  0100               	movlb	0	; () banked
 10404  002816  6F8E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 10405  002818  0100               	movlb	0	; () banked
 10406  00281A  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10407  00281C  A4D8               	btfss	status,2,c
 10408  00281E  D00A               	goto	l3771
 10409                           
 10410                           ; BSR set to: 0
 10411  002820  0E00               	movlw	0
 10412  002822  0100               	movlb	0	; () banked
 10413  002824  6F80               	movwf	?__tdiv_to_l_& (0+255),b
 10414  002826  0E00               	movlw	0
 10415  002828  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10416  00282A  0E00               	movlw	0
 10417  00282C  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10418  00282E  0E00               	movlw	0
 10419  002830  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10420                           
 10421                           ; BSR set to: 0
 10422  002832  0012               	return	
 10423  002834                     l3771:
 10424                           
 10425                           ; BSR set to: 0
 10426  002834  C085  F086         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10427  002838  0100               	movlb	0	; () banked
 10428  00283A  6B87               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 10429  00283C  6B88               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 10430  00283E  0100               	movlb	0	; () banked
 10431  002840  3584               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10432  002842  0100               	movlb	0	; () banked
 10433  002844  3786               	rlcf	??__tdiv_to_l_& (0+255),f,b
 10434  002846  E301               	bnc	u3511
 10435  002848  8187               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 10436  00284A                     u3511:
 10437  00284A  0100               	movlb	0	; () banked
 10438  00284C  5186               	movf	??__tdiv_to_l_& (0+255),w,b
 10439  00284E  0100               	movlb	0	; () banked
 10440  002850  6F8D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10441  002852  0100               	movlb	0	; () banked
 10442  002854  518D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10443  002856  A4D8               	btfss	status,2,c
 10444  002858  D00A               	goto	l3777
 10445                           
 10446                           ; BSR set to: 0
 10447  00285A  0E00               	movlw	0
 10448  00285C  0100               	movlb	0	; () banked
 10449  00285E  6F80               	movwf	?__tdiv_to_l_& (0+255),b
 10450  002860  0E00               	movlw	0
 10451  002862  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10452  002864  0E00               	movlw	0
 10453  002866  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10454  002868  0E00               	movlw	0
 10455  00286A  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10456                           
 10457                           ; BSR set to: 0
 10458  00286C  0012               	return	
 10459  00286E                     l3777:
 10460                           
 10461                           ; BSR set to: 0
 10462  00286E  0100               	movlb	0	; () banked
 10463  002870  8F81               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 10464                           
 10465                           ; BSR set to: 0
 10466  002872  0EFF               	movlw	255
 10467  002874  0100               	movlb	0	; () banked
 10468  002876  1780               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 10469  002878  0EFF               	movlw	255
 10470  00287A  0100               	movlb	0	; () banked
 10471  00287C  1781               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10472  00287E  0E00               	movlw	0
 10473  002880  0100               	movlb	0	; () banked
 10474  002882  1782               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10475  002884  0100               	movlb	0	; () banked
 10476  002886  8F84               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 10477                           
 10478                           ; BSR set to: 0
 10479  002888  0EFF               	movlw	255
 10480  00288A  0100               	movlb	0	; () banked
 10481  00288C  1783               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 10482  00288E  0EFF               	movlw	255
 10483  002890  0100               	movlb	0	; () banked
 10484  002892  1784               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 10485  002894  0E00               	movlw	0
 10486  002896  0100               	movlb	0	; () banked
 10487  002898  1785               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 10488                           
 10489                           ; BSR set to: 0
 10490  00289A  0E00               	movlw	0
 10491  00289C  0100               	movlb	0	; () banked
 10492  00289E  6F89               	movwf	__tdiv_to_l_@quot& (0+255),b
 10493  0028A0  0E00               	movlw	0
 10494  0028A2  6F8A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 10495  0028A4  0E00               	movlw	0
 10496  0028A6  6F8B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 10497  0028A8  0E00               	movlw	0
 10498  0028AA  6F8C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 10499                           
 10500                           ; BSR set to: 0
 10501  0028AC  0E7F               	movlw	127
 10502  0028AE  0100               	movlb	0	; () banked
 10503  0028B0  5F8E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10504                           
 10505                           ; BSR set to: 0
 10506  0028B2  0100               	movlb	0	; () banked
 10507  0028B4  518D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 10508  0028B6  0F98               	addlw	152
 10509  0028B8  0100               	movlb	0	; () banked
 10510  0028BA  5F8E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 10511                           
 10512                           ; BSR set to: 0
 10513  0028BC  0E18               	movlw	24
 10514  0028BE  0100               	movlb	0	; () banked
 10515  0028C0  6F8D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 10516  0028C2                     l1049:
 10517                           
 10518                           ; BSR set to: 0
 10519  0028C2  0100               	movlb	0	; () banked
 10520  0028C4  90D8               	bcf	status,0,c
 10521  0028C6  3789               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10522  0028C8  378A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10523  0028CA  378B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10524  0028CC  378C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10525                           
 10526                           ; BSR set to: 0
 10527  0028CE  0100               	movlb	0	; () banked
 10528  0028D0  5183               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10529  0028D2  0100               	movlb	0	; () banked
 10530  0028D4  5D80               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 10531  0028D6  0100               	movlb	0	; () banked
 10532  0028D8  5184               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10533  0028DA  0100               	movlb	0	; () banked
 10534  0028DC  5981               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 10535  0028DE  0100               	movlb	0	; () banked
 10536  0028E0  5185               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10537  0028E2  0100               	movlb	0	; () banked
 10538  0028E4  5982               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 10539  0028E6  A0D8               	btfss	status,0,c
 10540  0028E8  D00E               	goto	l1050
 10541                           
 10542                           ; BSR set to: 0
 10543  0028EA  0100               	movlb	0	; () banked
 10544  0028EC  5183               	movf	__tdiv_to_l_@f2& (0+255),w,b
 10545  0028EE  0100               	movlb	0	; () banked
 10546  0028F0  5F80               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 10547  0028F2  0100               	movlb	0	; () banked
 10548  0028F4  5184               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 10549  0028F6  0100               	movlb	0	; () banked
 10550  0028F8  5B81               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10551  0028FA  0100               	movlb	0	; () banked
 10552  0028FC  5185               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 10553  0028FE  0100               	movlb	0	; () banked
 10554  002900  5B82               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10555                           
 10556                           ; BSR set to: 0
 10557  002902  0100               	movlb	0	; () banked
 10558  002904  8189               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 10559  002906                     l1050:
 10560                           
 10561                           ; BSR set to: 0
 10562  002906  0100               	movlb	0	; () banked
 10563  002908  90D8               	bcf	status,0,c
 10564  00290A  3780               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 10565  00290C  3781               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 10566  00290E  3782               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 10567                           
 10568                           ; BSR set to: 0
 10569  002910  0100               	movlb	0	; () banked
 10570  002912  2F8D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 10571  002914  D7D6               	goto	l1049
 10572                           
 10573                           ; BSR set to: 0
 10574                           
 10575                           ; BSR set to: 0
 10576  002916  0100               	movlb	0	; () banked
 10577  002918  AF8E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 10578  00291A  D01A               	goto	l3811
 10579                           
 10580                           ; BSR set to: 0
 10581  00291C  0100               	movlb	0	; () banked
 10582  00291E  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10583  002920  0A80               	xorlw	128
 10584  002922  0F97               	addlw	151
 10585  002924  B0D8               	btfsc	status,0,c
 10586  002926  D00A               	goto	l3807
 10587                           
 10588                           ; BSR set to: 0
 10589  002928  0E00               	movlw	0
 10590  00292A  0100               	movlb	0	; () banked
 10591  00292C  6F80               	movwf	?__tdiv_to_l_& (0+255),b
 10592  00292E  0E00               	movlw	0
 10593  002930  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10594  002932  0E00               	movlw	0
 10595  002934  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10596  002936  0E00               	movlw	0
 10597  002938  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10598                           
 10599                           ; BSR set to: 0
 10600  00293A  0012               	return	
 10601  00293C                     l3807:
 10602                           
 10603                           ; BSR set to: 0
 10604  00293C  0100               	movlb	0	; () banked
 10605  00293E  90D8               	bcf	status,0,c
 10606  002940  338C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10607  002942  338B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10608  002944  338A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10609  002946  3389               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 10610                           
 10611                           ; BSR set to: 0
 10612  002948  0100               	movlb	0	; () banked
 10613  00294A  3F8E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 10614  00294C  D7F7               	goto	l3807
 10615                           
 10616                           ; BSR set to: 0
 10617  00294E  D01B               	goto	l1056
 10618  002950                     l3811:
 10619                           
 10620                           ; BSR set to: 0
 10621  002950  0E17               	movlw	23
 10622  002952  0100               	movlb	0	; () banked
 10623  002954  658E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 10624  002956  D012               	goto	l3819
 10625                           
 10626                           ; BSR set to: 0
 10627  002958  0E00               	movlw	0
 10628  00295A  0100               	movlb	0	; () banked
 10629  00295C  6F80               	movwf	?__tdiv_to_l_& (0+255),b
 10630  00295E  0E00               	movlw	0
 10631  002960  6F81               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 10632  002962  0E00               	movlw	0
 10633  002964  6F82               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 10634  002966  0E00               	movlw	0
 10635  002968  6F83               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 10636                           
 10637                           ; BSR set to: 0
 10638  00296A  0012               	return	
 10639  00296C                     l3817:
 10640                           
 10641                           ; BSR set to: 0
 10642  00296C  0100               	movlb	0	; () banked
 10643  00296E  90D8               	bcf	status,0,c
 10644  002970  3789               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 10645  002972  378A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 10646  002974  378B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 10647  002976  378C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 10648  002978  0100               	movlb	0	; () banked
 10649  00297A  078E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 10650  00297C                     l3819:
 10651                           
 10652                           ; BSR set to: 0
 10653  00297C  0100               	movlb	0	; () banked
 10654  00297E  518E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 10655  002980  0100               	movlb	0	; () banked
 10656  002982  A4D8               	btfss	status,2,c
 10657  002984  D7F3               	goto	l3817
 10658  002986                     l1056:
 10659                           
 10660                           ; BSR set to: 0
 10661  002986  C089  F080         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10662  00298A  C08A  F081         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10663  00298E  C08B  F082         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10664  002992  C08C  F083         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10665                           
 10666                           ; BSR set to: 0
 10667  002996  0012               	return		;funcret
 10668  002998                     __end_of__tdiv_to_l_:
 10669                           	opt stack 0
 10670                           tblptru	equ	0xFF8
 10671                           tblptrh	equ	0xFF7
 10672                           tblptrl	equ	0xFF6
 10673                           tablat	equ	0xFF5
 10674                           prodh	equ	0xFF4
 10675                           prodl	equ	0xFF3
 10676                           intcon	equ	0xFF2
 10677                           intcon2	equ	0xFF1
 10678                           indf0	equ	0xFEF
 10679                           postinc0	equ	0xFEE
 10680                           fsr0h	equ	0xFEA
 10681                           fsr0l	equ	0xFE9
 10682                           wreg	equ	0xFE8
 10683                           postinc1	equ	0xFE6
 10684                           postdec1	equ	0xFE5
 10685                           plusw1	equ	0xFE3
 10686                           fsr1h	equ	0xFE2
 10687                           fsr1l	equ	0xFE1
 10688                           indf2	equ	0xFDF
 10689                           postinc2	equ	0xFDE
 10690                           postdec2	equ	0xFDD
 10691                           fsr2h	equ	0xFDA
 10692                           fsr2l	equ	0xFD9
 10693                           status	equ	0xFD8
 10694                           
 10695 ;; *************** function __div_to_l_ *****************
 10696 ;; Defined at:
 10697 ;;		line 60 in file "/Applications/microchip/xc8/v1.38/sources/common/fldivl.c"
 10698 ;; Parameters:    Size  Location     Type
 10699 ;;  f1              3    0[BANK0 ] unsigned long 
 10700 ;;  f2              3    3[BANK0 ] unsigned long 
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;  quot            4    6[BANK0 ] unsigned long 
 10703 ;;  exp1            1   11[BANK0 ] unsigned char 
 10704 ;;  cntr            1   10[BANK0 ] unsigned char 
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  4    0[BANK0 ] unsigned long 
 10707 ;; Registers used:
 10708 ;;		wreg, status,2, status,0
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10714 ;;      Params:         0       6       0       0       0       0       0
 10715 ;;      Locals:         0       6       0       0       0       0       0
 10716 ;;      Temps:          0       0       0       0       0       0       0
 10717 ;;      Totals:         0      12       0       0       0       0       0
 10718 ;;Total ram usage:       12 bytes
 10719 ;; Hardware stack levels used:    1
 10720 ;; Hardware stack levels required when called:   10
 10721 ;; This function calls:
 10722 ;;		Nothing
 10723 ;; This function is called by:
 10724 ;;		_sprintf
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text24
 10729  002998                     __ptext24:
 10730                           	opt stack 0
 10731  002998                     __div_to_l_:
 10732                           	opt stack 15
 10733                           
 10734                           ; BSR set to: 0
 10735                           ;incstack = 0
 10736  002998  0100               	movlb	0	; () banked
 10737  00299A  3582               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10738  00299C  3583               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10739  00299E  0100               	movlb	0	; () banked
 10740  0029A0  6F8B               	movwf	__div_to_l_@exp1& (0+255),b
 10741  0029A2  0100               	movlb	0	; () banked
 10742  0029A4  518B               	movf	__div_to_l_@exp1& (0+255),w,b
 10743  0029A6  A4D8               	btfss	status,2,c
 10744  0029A8  D00A               	goto	l6007
 10745                           
 10746                           ; BSR set to: 0
 10747  0029AA  0E00               	movlw	0
 10748  0029AC  0100               	movlb	0	; () banked
 10749  0029AE  6F80               	movwf	?__div_to_l_& (0+255),b
 10750  0029B0  0E00               	movlw	0
 10751  0029B2  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
 10752  0029B4  0E00               	movlw	0
 10753  0029B6  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
 10754  0029B8  0E00               	movlw	0
 10755  0029BA  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
 10756                           
 10757                           ; BSR set to: 0
 10758  0029BC  0012               	return	
 10759  0029BE                     l6007:
 10760                           
 10761                           ; BSR set to: 0
 10762  0029BE  0100               	movlb	0	; () banked
 10763  0029C0  3585               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10764  0029C2  3586               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10765  0029C4  0100               	movlb	0	; () banked
 10766  0029C6  6F8A               	movwf	__div_to_l_@cntr& (0+255),b
 10767  0029C8  0100               	movlb	0	; () banked
 10768  0029CA  518A               	movf	__div_to_l_@cntr& (0+255),w,b
 10769  0029CC  A4D8               	btfss	status,2,c
 10770  0029CE  D00A               	goto	l6013
 10771                           
 10772                           ; BSR set to: 0
 10773  0029D0  0E00               	movlw	0
 10774  0029D2  0100               	movlb	0	; () banked
 10775  0029D4  6F80               	movwf	?__div_to_l_& (0+255),b
 10776  0029D6  0E00               	movlw	0
 10777  0029D8  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
 10778  0029DA  0E00               	movlw	0
 10779  0029DC  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
 10780  0029DE  0E00               	movlw	0
 10781  0029E0  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
 10782                           
 10783                           ; BSR set to: 0
 10784  0029E2  0012               	return	
 10785  0029E4                     l6013:
 10786                           
 10787                           ; BSR set to: 0
 10788  0029E4  0100               	movlb	0	; () banked
 10789  0029E6  8F82               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10790                           
 10791                           ; BSR set to: 0
 10792  0029E8  0EFF               	movlw	255
 10793  0029EA  0100               	movlb	0	; () banked
 10794  0029EC  1780               	andwf	__div_to_l_@f1& (0+255),f,b
 10795  0029EE  0EFF               	movlw	255
 10796  0029F0  1781               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10797  0029F2  0EFF               	movlw	255
 10798  0029F4  1782               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10799  0029F6  0E00               	movlw	0
 10800  0029F8  1783               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10801                           
 10802                           ; BSR set to: 0
 10803  0029FA  0100               	movlb	0	; () banked
 10804  0029FC  8F85               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10805  0029FE  0EFF               	movlw	255
 10806  002A00  0100               	movlb	0	; () banked
 10807  002A02  1783               	andwf	__div_to_l_@f2& (0+255),f,b
 10808  002A04  0EFF               	movlw	255
 10809  002A06  1784               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10810  002A08  0EFF               	movlw	255
 10811  002A0A  1785               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10812  002A0C  0E00               	movlw	0
 10813  002A0E  1786               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10814                           
 10815                           ; BSR set to: 0
 10816  002A10  0E00               	movlw	0
 10817  002A12  0100               	movlb	0	; () banked
 10818  002A14  6F86               	movwf	__div_to_l_@quot& (0+255),b
 10819  002A16  0E00               	movlw	0
 10820  002A18  6F87               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10821  002A1A  0E00               	movlw	0
 10822  002A1C  6F88               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10823  002A1E  0E00               	movlw	0
 10824  002A20  6F89               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10825                           
 10826                           ; BSR set to: 0
 10827  002A22  0E7F               	movlw	127
 10828  002A24  0100               	movlb	0	; () banked
 10829  002A26  5F8B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10830                           
 10831                           ; BSR set to: 0
 10832  002A28  0100               	movlb	0	; () banked
 10833  002A2A  518A               	movf	__div_to_l_@cntr& (0+255),w,b
 10834  002A2C  0FA0               	addlw	160
 10835  002A2E  0100               	movlb	0	; () banked
 10836  002A30  5F8B               	subwf	__div_to_l_@exp1& (0+255),f,b
 10837                           
 10838                           ; BSR set to: 0
 10839  002A32  0E20               	movlw	32
 10840  002A34  0100               	movlb	0	; () banked
 10841  002A36  6F8A               	movwf	__div_to_l_@cntr& (0+255),b
 10842  002A38                     l6027:
 10843                           
 10844                           ; BSR set to: 0
 10845  002A38  0100               	movlb	0	; () banked
 10846  002A3A  90D8               	bcf	status,0,c
 10847  002A3C  3786               	rlcf	__div_to_l_@quot& (0+255),f,b
 10848  002A3E  3787               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10849  002A40  3788               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10850  002A42  3789               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10851                           
 10852                           ; BSR set to: 0
 10853  002A44  0100               	movlb	0	; () banked
 10854  002A46  5183               	movf	__div_to_l_@f2& (0+255),w,b
 10855  002A48  0100               	movlb	0	; () banked
 10856  002A4A  5D80               	subwf	__div_to_l_@f1& (0+255),w,b
 10857  002A4C  0100               	movlb	0	; () banked
 10858  002A4E  5184               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10859  002A50  0100               	movlb	0	; () banked
 10860  002A52  5981               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10861  002A54  0100               	movlb	0	; () banked
 10862  002A56  5185               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10863  002A58  0100               	movlb	0	; () banked
 10864  002A5A  5982               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10865  002A5C  0100               	movlb	0	; () banked
 10866  002A5E  5186               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10867  002A60  0100               	movlb	0	; () banked
 10868  002A62  5983               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10869  002A64  A0D8               	btfss	status,0,c
 10870  002A66  D012               	goto	l6035
 10871                           
 10872                           ; BSR set to: 0
 10873  002A68  0100               	movlb	0	; () banked
 10874  002A6A  5183               	movf	__div_to_l_@f2& (0+255),w,b
 10875  002A6C  0100               	movlb	0	; () banked
 10876  002A6E  5F80               	subwf	__div_to_l_@f1& (0+255),f,b
 10877  002A70  0100               	movlb	0	; () banked
 10878  002A72  5184               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10879  002A74  0100               	movlb	0	; () banked
 10880  002A76  5B81               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10881  002A78  0100               	movlb	0	; () banked
 10882  002A7A  5185               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10883  002A7C  0100               	movlb	0	; () banked
 10884  002A7E  5B82               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10885  002A80  0100               	movlb	0	; () banked
 10886  002A82  5186               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10887  002A84  0100               	movlb	0	; () banked
 10888  002A86  5B83               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10889                           
 10890                           ; BSR set to: 0
 10891  002A88  0100               	movlb	0	; () banked
 10892  002A8A  8186               	bsf	__div_to_l_@quot& (0+255),0,b
 10893  002A8C                     l6035:
 10894                           
 10895                           ; BSR set to: 0
 10896  002A8C  0100               	movlb	0	; () banked
 10897  002A8E  90D8               	bcf	status,0,c
 10898  002A90  3780               	rlcf	__div_to_l_@f1& (0+255),f,b
 10899  002A92  3781               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10900  002A94  3782               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10901  002A96  3783               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10902                           
 10903                           ; BSR set to: 0
 10904  002A98  0100               	movlb	0	; () banked
 10905  002A9A  2F8A               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10906  002A9C  D7CD               	goto	l6027
 10907                           
 10908                           ; BSR set to: 0
 10909                           
 10910                           ; BSR set to: 0
 10911  002A9E  0100               	movlb	0	; () banked
 10912  002AA0  AF8B               	btfss	__div_to_l_@exp1& (0+255),7,b
 10913  002AA2  D01A               	goto	l6051
 10914                           
 10915                           ; BSR set to: 0
 10916  002AA4  0100               	movlb	0	; () banked
 10917  002AA6  518B               	movf	__div_to_l_@exp1& (0+255),w,b
 10918  002AA8  0A80               	xorlw	128
 10919  002AAA  0F9F               	addlw	159
 10920  002AAC  B0D8               	btfsc	status,0,c
 10921  002AAE  D00A               	goto	l6047
 10922                           
 10923                           ; BSR set to: 0
 10924  002AB0  0E00               	movlw	0
 10925  002AB2  0100               	movlb	0	; () banked
 10926  002AB4  6F80               	movwf	?__div_to_l_& (0+255),b
 10927  002AB6  0E00               	movlw	0
 10928  002AB8  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
 10929  002ABA  0E00               	movlw	0
 10930  002ABC  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
 10931  002ABE  0E00               	movlw	0
 10932  002AC0  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
 10933                           
 10934                           ; BSR set to: 0
 10935  002AC2  0012               	return	
 10936  002AC4                     l6047:
 10937                           
 10938                           ; BSR set to: 0
 10939  002AC4  0100               	movlb	0	; () banked
 10940  002AC6  90D8               	bcf	status,0,c
 10941  002AC8  3389               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10942  002ACA  3388               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10943  002ACC  3387               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10944  002ACE  3386               	rrcf	__div_to_l_@quot& (0+255),f,b
 10945                           
 10946                           ; BSR set to: 0
 10947  002AD0  0100               	movlb	0	; () banked
 10948  002AD2  3F8B               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10949  002AD4  D7F7               	goto	l6047
 10950                           
 10951                           ; BSR set to: 0
 10952  002AD6  D01B               	goto	l952
 10953  002AD8                     l6051:
 10954                           
 10955                           ; BSR set to: 0
 10956  002AD8  0E1F               	movlw	31
 10957  002ADA  0100               	movlb	0	; () banked
 10958  002ADC  658B               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10959  002ADE  D012               	goto	l6059
 10960                           
 10961                           ; BSR set to: 0
 10962  002AE0  0E00               	movlw	0
 10963  002AE2  0100               	movlb	0	; () banked
 10964  002AE4  6F80               	movwf	?__div_to_l_& (0+255),b
 10965  002AE6  0E00               	movlw	0
 10966  002AE8  6F81               	movwf	(?__div_to_l_+1)& (0+255),b
 10967  002AEA  0E00               	movlw	0
 10968  002AEC  6F82               	movwf	(?__div_to_l_+2)& (0+255),b
 10969  002AEE  0E00               	movlw	0
 10970  002AF0  6F83               	movwf	(?__div_to_l_+3)& (0+255),b
 10971                           
 10972                           ; BSR set to: 0
 10973  002AF2  0012               	return	
 10974  002AF4                     l6057:
 10975                           
 10976                           ; BSR set to: 0
 10977  002AF4  0100               	movlb	0	; () banked
 10978  002AF6  90D8               	bcf	status,0,c
 10979  002AF8  3786               	rlcf	__div_to_l_@quot& (0+255),f,b
 10980  002AFA  3787               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10981  002AFC  3788               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10982  002AFE  3789               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10983  002B00  0100               	movlb	0	; () banked
 10984  002B02  078B               	decf	__div_to_l_@exp1& (0+255),f,b
 10985  002B04                     l6059:
 10986                           
 10987                           ; BSR set to: 0
 10988  002B04  0100               	movlb	0	; () banked
 10989  002B06  518B               	movf	__div_to_l_@exp1& (0+255),w,b
 10990  002B08  0100               	movlb	0	; () banked
 10991  002B0A  A4D8               	btfss	status,2,c
 10992  002B0C  D7F3               	goto	l6057
 10993  002B0E                     l952:
 10994                           
 10995                           ; BSR set to: 0
 10996  002B0E  C086  F080         	movff	__div_to_l_@quot,?__div_to_l_
 10997  002B12  C087  F081         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10998  002B16  C088  F082         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10999  002B1A  C089  F083         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11000                           
 11001                           ; BSR set to: 0
 11002  002B1E  0012               	return		;funcret
 11003  002B20                     __end_of__div_to_l_:
 11004                           	opt stack 0
 11005                           tblptru	equ	0xFF8
 11006                           tblptrh	equ	0xFF7
 11007                           tblptrl	equ	0xFF6
 11008                           tablat	equ	0xFF5
 11009                           prodh	equ	0xFF4
 11010                           prodl	equ	0xFF3
 11011                           intcon	equ	0xFF2
 11012                           intcon2	equ	0xFF1
 11013                           indf0	equ	0xFEF
 11014                           postinc0	equ	0xFEE
 11015                           fsr0h	equ	0xFEA
 11016                           fsr0l	equ	0xFE9
 11017                           wreg	equ	0xFE8
 11018                           postinc1	equ	0xFE6
 11019                           postdec1	equ	0xFE5
 11020                           plusw1	equ	0xFE3
 11021                           fsr1h	equ	0xFE2
 11022                           fsr1l	equ	0xFE1
 11023                           indf2	equ	0xFDF
 11024                           postinc2	equ	0xFDE
 11025                           postdec2	equ	0xFDD
 11026                           fsr2h	equ	0xFDA
 11027                           fsr2l	equ	0xFD9
 11028                           status	equ	0xFD8
 11029                           
 11030 ;; *************** function ___lltoft *****************
 11031 ;; Defined at:
 11032 ;;		line 35 in file "/Applications/microchip/xc8/v1.38/sources/common/lltoft.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;  c               4    0[BANK0 ] unsigned long 
 11035 ;; Auto vars:     Size  Location     Type
 11036 ;;  exp             1    8[BANK0 ] unsigned char 
 11037 ;; Return value:  Size  Location     Type
 11038 ;;                  3    0[BANK0 ] float 
 11039 ;; Registers used:
 11040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+9, btemp+10, btemp+11
 11041 ;; Tracked objects:
 11042 ;;		On entry : 0/0
 11043 ;;		On exit  : 0/0
 11044 ;;		Unchanged: 0/0
 11045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11046 ;;      Params:         0       4       0       0       0       0       0
 11047 ;;      Locals:         0       1       0       0       0       0       0
 11048 ;;      Temps:          0       4       0       0       0       0       0
 11049 ;;      Totals:         0       9       0       0       0       0       0
 11050 ;;Total ram usage:        9 bytes
 11051 ;; Hardware stack levels used:    1
 11052 ;; Hardware stack levels required when called:   11
 11053 ;; This function calls:
 11054 ;;		___ftpack
 11055 ;; This function is called by:
 11056 ;;		_sprintf
 11057 ;; This function uses a non-reentrant model
 11058 ;;
 11059                           
 11060                           	psect	text25
 11061  003E6E                     __ptext25:
 11062                           	opt stack 0
 11063  003E6E                     ___lltoft:
 11064                           	opt stack 14
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;incstack = 0
 11068  003E6E  0E8E               	movlw	142
 11069  003E70  0100               	movlb	0	; () banked
 11070  003E72  6F88               	movwf	___lltoft@exp& (0+255),b
 11071  003E74  D008               	goto	l6115
 11072  003E76                     l6113:
 11073                           
 11074                           ; BSR set to: 0
 11075  003E76  0100               	movlb	0	; () banked
 11076  003E78  90D8               	bcf	status,0,c
 11077  003E7A  3383               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11078  003E7C  3382               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11079  003E7E  3381               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11080  003E80  3380               	rrcf	___lltoft@c& (0+255),f,b
 11081  003E82  0100               	movlb	0	; () banked
 11082  003E84  2B88               	incf	___lltoft@exp& (0+255),f,b
 11083  003E86                     l6115:
 11084                           
 11085                           ; BSR set to: 0
 11086  003E86  0E00               	movlw	0
 11087  003E88  0100               	movlb	0	; () banked
 11088  003E8A  1580               	andwf	___lltoft@c& (0+255),w,b
 11089  003E8C  0100               	movlb	0	; () banked
 11090  003E8E  6F84               	movwf	??___lltoft& (0+255),b
 11091  003E90  0E00               	movlw	0
 11092  003E92  0100               	movlb	0	; () banked
 11093  003E94  1581               	andwf	(___lltoft@c+1)& (0+255),w,b
 11094  003E96  0100               	movlb	0	; () banked
 11095  003E98  6F85               	movwf	(??___lltoft+1)& (0+255),b
 11096  003E9A  0E00               	movlw	0
 11097  003E9C  0100               	movlb	0	; () banked
 11098  003E9E  1582               	andwf	(___lltoft@c+2)& (0+255),w,b
 11099  003EA0  0100               	movlb	0	; () banked
 11100  003EA2  6F86               	movwf	(??___lltoft+2)& (0+255),b
 11101  003EA4  0EFF               	movlw	255
 11102  003EA6  0100               	movlb	0	; () banked
 11103  003EA8  1583               	andwf	(___lltoft@c+3)& (0+255),w,b
 11104  003EAA  0100               	movlb	0	; () banked
 11105  003EAC  6F87               	movwf	(??___lltoft+3)& (0+255),b
 11106  003EAE  0100               	movlb	0	; () banked
 11107  003EB0  5184               	movf	??___lltoft& (0+255),w,b
 11108  003EB2  0100               	movlb	0	; () banked
 11109  003EB4  1185               	iorwf	(??___lltoft+1)& (0+255),w,b
 11110  003EB6  0100               	movlb	0	; () banked
 11111  003EB8  1186               	iorwf	(??___lltoft+2)& (0+255),w,b
 11112  003EBA  0100               	movlb	0	; () banked
 11113  003EBC  1187               	iorwf	(??___lltoft+3)& (0+255),w,b
 11114  003EBE  A4D8               	btfss	status,2,c
 11115  003EC0  D7DA               	goto	l6113
 11116                           
 11117                           ; BSR set to: 0
 11118                           
 11119                           ; BSR set to: 0
 11120  003EC2  0E00               	movlw	0
 11121  003EC4  6EE6               	movwf	postinc1,c
 11122  003EC6  0100               	movlb	0	; () banked
 11123  003EC8  5188               	movf	___lltoft@exp& (0+255),w,b
 11124  003ECA  6EE6               	movwf	postinc1,c
 11125  003ECC  C080  FFE6         	movff	___lltoft@c,postinc1
 11126  003ED0  C081  FFE6         	movff	___lltoft@c+1,postinc1
 11127  003ED4  C082  FFE6         	movff	___lltoft@c+2,postinc1
 11128  003ED8  EC9F  F01A         	call	___ftpack	;wreg free
 11129  003EDC  C03A  F080         	movff	btemp,?___lltoft
 11130  003EE0  C03B  F081         	movff	btemp+1,?___lltoft+1
 11131  003EE4  C03C  F082         	movff	btemp+2,?___lltoft+2
 11132  003EE8  0012               	return	
 11133  003EEA                     __end_of___lltoft:
 11134                           	opt stack 0
 11135                           tblptru	equ	0xFF8
 11136                           tblptrh	equ	0xFF7
 11137                           tblptrl	equ	0xFF6
 11138                           tablat	equ	0xFF5
 11139                           prodh	equ	0xFF4
 11140                           prodl	equ	0xFF3
 11141                           intcon	equ	0xFF2
 11142                           intcon2	equ	0xFF1
 11143                           indf0	equ	0xFEF
 11144                           postinc0	equ	0xFEE
 11145                           fsr0h	equ	0xFEA
 11146                           fsr0l	equ	0xFE9
 11147                           wreg	equ	0xFE8
 11148                           postinc1	equ	0xFE6
 11149                           postdec1	equ	0xFE5
 11150                           plusw1	equ	0xFE3
 11151                           fsr1h	equ	0xFE2
 11152                           fsr1l	equ	0xFE1
 11153                           indf2	equ	0xFDF
 11154                           postinc2	equ	0xFDE
 11155                           postdec2	equ	0xFDD
 11156                           fsr2h	equ	0xFDA
 11157                           fsr2l	equ	0xFD9
 11158                           status	equ	0xFD8
 11159                           
 11160 ;; *************** function ___llmod *****************
 11161 ;; Defined at:
 11162 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/llmod.c"
 11163 ;; Parameters:    Size  Location     Type
 11164 ;;  dividend        4   13[BANK0 ] unsigned long 
 11165 ;;  divisor         4   17[BANK0 ] unsigned long 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  counter         1   21[BANK0 ] unsigned char 
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  4   13[BANK0 ] unsigned long 
 11170 ;; Registers used:
 11171 ;;		wreg, status,2, status,0
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11177 ;;      Params:         0       8       0       0       0       0       0
 11178 ;;      Locals:         0       1       0       0       0       0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0
 11180 ;;      Totals:         0       9       0       0       0       0       0
 11181 ;;Total ram usage:        9 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:   10
 11184 ;; This function calls:
 11185 ;;		Nothing
 11186 ;; This function is called by:
 11187 ;;		_sprintf
 11188 ;; This function uses a non-reentrant model
 11189 ;;
 11190                           
 11191                           	psect	text26
 11192  003BAC                     __ptext26:
 11193                           	opt stack 0
 11194  003BAC                     ___llmod:
 11195                           	opt stack 15
 11196                           
 11197                           ;incstack = 0
 11198  003BAC  0100               	movlb	0	; () banked
 11199  003BAE  5191               	movf	___llmod@divisor& (0+255),w,b
 11200  003BB0  0100               	movlb	0	; () banked
 11201  003BB2  1192               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 11202  003BB4  0100               	movlb	0	; () banked
 11203  003BB6  1193               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 11204  003BB8  0100               	movlb	0	; () banked
 11205  003BBA  1194               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 11206  003BBC  B4D8               	btfsc	status,2,c
 11207  003BBE  D03A               	goto	l1141
 11208                           
 11209                           ; BSR set to: 0
 11210  003BC0  0E01               	movlw	1
 11211  003BC2  0100               	movlb	0	; () banked
 11212  003BC4  6F95               	movwf	___llmod@counter& (0+255),b
 11213  003BC6  D008               	goto	l6101
 11214  003BC8                     l6099:
 11215                           
 11216                           ; BSR set to: 0
 11217  003BC8  0100               	movlb	0	; () banked
 11218  003BCA  90D8               	bcf	status,0,c
 11219  003BCC  3791               	rlcf	___llmod@divisor& (0+255),f,b
 11220  003BCE  3792               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 11221  003BD0  3793               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 11222  003BD2  3794               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 11223  003BD4  0100               	movlb	0	; () banked
 11224  003BD6  2B95               	incf	___llmod@counter& (0+255),f,b
 11225  003BD8                     l6101:
 11226                           
 11227                           ; BSR set to: 0
 11228  003BD8  0100               	movlb	0	; () banked
 11229  003BDA  AF94               	btfss	(___llmod@divisor+3)& (0+255),7,b
 11230  003BDC  D7F5               	goto	l6099
 11231  003BDE                     l6103:
 11232                           
 11233                           ; BSR set to: 0
 11234  003BDE  0100               	movlb	0	; () banked
 11235  003BE0  5191               	movf	___llmod@divisor& (0+255),w,b
 11236  003BE2  0100               	movlb	0	; () banked
 11237  003BE4  5D8D               	subwf	___llmod@dividend& (0+255),w,b
 11238  003BE6  0100               	movlb	0	; () banked
 11239  003BE8  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
 11240  003BEA  0100               	movlb	0	; () banked
 11241  003BEC  598E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 11242  003BEE  0100               	movlb	0	; () banked
 11243  003BF0  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
 11244  003BF2  0100               	movlb	0	; () banked
 11245  003BF4  598F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 11246  003BF6  0100               	movlb	0	; () banked
 11247  003BF8  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
 11248  003BFA  0100               	movlb	0	; () banked
 11249  003BFC  5990               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 11250  003BFE  A0D8               	btfss	status,0,c
 11251  003C00  D010               	goto	l6107
 11252                           
 11253                           ; BSR set to: 0
 11254  003C02  0100               	movlb	0	; () banked
 11255  003C04  5191               	movf	___llmod@divisor& (0+255),w,b
 11256  003C06  0100               	movlb	0	; () banked
 11257  003C08  5F8D               	subwf	___llmod@dividend& (0+255),f,b
 11258  003C0A  0100               	movlb	0	; () banked
 11259  003C0C  5192               	movf	(___llmod@divisor+1)& (0+255),w,b
 11260  003C0E  0100               	movlb	0	; () banked
 11261  003C10  5B8E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 11262  003C12  0100               	movlb	0	; () banked
 11263  003C14  5193               	movf	(___llmod@divisor+2)& (0+255),w,b
 11264  003C16  0100               	movlb	0	; () banked
 11265  003C18  5B8F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 11266  003C1A  0100               	movlb	0	; () banked
 11267  003C1C  5194               	movf	(___llmod@divisor+3)& (0+255),w,b
 11268  003C1E  0100               	movlb	0	; () banked
 11269  003C20  5B90               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 11270  003C22                     l6107:
 11271                           
 11272                           ; BSR set to: 0
 11273  003C22  0100               	movlb	0	; () banked
 11274  003C24  90D8               	bcf	status,0,c
 11275  003C26  3394               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 11276  003C28  3393               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 11277  003C2A  3392               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 11278  003C2C  3391               	rrcf	___llmod@divisor& (0+255),f,b
 11279                           
 11280                           ; BSR set to: 0
 11281  003C2E  0100               	movlb	0	; () banked
 11282  003C30  2F95               	decfsz	___llmod@counter& (0+255),f,b
 11283  003C32  D7D5               	goto	l6103
 11284  003C34                     l1141:
 11285                           
 11286                           ; BSR set to: 0
 11287  003C34  C08D  F08D         	movff	___llmod@dividend,?___llmod
 11288  003C38  C08E  F08E         	movff	___llmod@dividend+1,?___llmod+1
 11289  003C3C  C08F  F08F         	movff	___llmod@dividend+2,?___llmod+2
 11290  003C40  C090  F090         	movff	___llmod@dividend+3,?___llmod+3
 11291                           
 11292                           ; BSR set to: 0
 11293  003C44  0012               	return		;funcret
 11294  003C46                     __end_of___llmod:
 11295                           	opt stack 0
 11296                           tblptru	equ	0xFF8
 11297                           tblptrh	equ	0xFF7
 11298                           tblptrl	equ	0xFF6
 11299                           tablat	equ	0xFF5
 11300                           prodh	equ	0xFF4
 11301                           prodl	equ	0xFF3
 11302                           intcon	equ	0xFF2
 11303                           intcon2	equ	0xFF1
 11304                           indf0	equ	0xFEF
 11305                           postinc0	equ	0xFEE
 11306                           fsr0h	equ	0xFEA
 11307                           fsr0l	equ	0xFE9
 11308                           wreg	equ	0xFE8
 11309                           postinc1	equ	0xFE6
 11310                           postdec1	equ	0xFE5
 11311                           plusw1	equ	0xFE3
 11312                           fsr1h	equ	0xFE2
 11313                           fsr1l	equ	0xFE1
 11314                           indf2	equ	0xFDF
 11315                           postinc2	equ	0xFDE
 11316                           postdec2	equ	0xFDD
 11317                           fsr2h	equ	0xFDA
 11318                           fsr2l	equ	0xFD9
 11319                           status	equ	0xFD8
 11320                           
 11321 ;; *************** function ___lldiv *****************
 11322 ;; Defined at:
 11323 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/lldiv.c"
 11324 ;; Parameters:    Size  Location     Type
 11325 ;;  dividend        4    0[BANK0 ] unsigned long 
 11326 ;;  divisor         4    4[BANK0 ] unsigned long 
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;  quotient        4    8[BANK0 ] unsigned long 
 11329 ;;  counter         1   12[BANK0 ] unsigned char 
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  4    0[BANK0 ] unsigned long 
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11339 ;;      Params:         0       8       0       0       0       0       0
 11340 ;;      Locals:         0       5       0       0       0       0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0
 11342 ;;      Totals:         0      13       0       0       0       0       0
 11343 ;;Total ram usage:       13 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:   10
 11346 ;; This function calls:
 11347 ;;		Nothing
 11348 ;; This function is called by:
 11349 ;;		_sprintf
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text27
 11354  003900                     __ptext27:
 11355                           	opt stack 0
 11356  003900                     ___lldiv:
 11357                           	opt stack 15
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;incstack = 0
 11361  003900  0E00               	movlw	0
 11362  003902  0100               	movlb	0	; () banked
 11363  003904  6F88               	movwf	___lldiv@quotient& (0+255),b
 11364  003906  0E00               	movlw	0
 11365  003908  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 11366  00390A  0E00               	movlw	0
 11367  00390C  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 11368  00390E  0E00               	movlw	0
 11369  003910  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 11370                           
 11371                           ; BSR set to: 0
 11372  003912  0100               	movlb	0	; () banked
 11373  003914  5184               	movf	___lldiv@divisor& (0+255),w,b
 11374  003916  0100               	movlb	0	; () banked
 11375  003918  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 11376  00391A  0100               	movlb	0	; () banked
 11377  00391C  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 11378  00391E  0100               	movlb	0	; () banked
 11379  003920  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 11380  003922  B4D8               	btfsc	status,2,c
 11381  003924  D042               	goto	l1131
 11382                           
 11383                           ; BSR set to: 0
 11384  003926  0E01               	movlw	1
 11385  003928  0100               	movlb	0	; () banked
 11386  00392A  6F8C               	movwf	___lldiv@counter& (0+255),b
 11387  00392C  D008               	goto	l6081
 11388  00392E                     l6079:
 11389                           
 11390                           ; BSR set to: 0
 11391  00392E  0100               	movlb	0	; () banked
 11392  003930  90D8               	bcf	status,0,c
 11393  003932  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 11394  003934  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 11395  003936  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 11396  003938  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 11397  00393A  0100               	movlb	0	; () banked
 11398  00393C  2B8C               	incf	___lldiv@counter& (0+255),f,b
 11399  00393E                     l6081:
 11400                           
 11401                           ; BSR set to: 0
 11402  00393E  0100               	movlb	0	; () banked
 11403  003940  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 11404  003942  D7F5               	goto	l6079
 11405  003944                     l6083:
 11406                           
 11407                           ; BSR set to: 0
 11408  003944  0100               	movlb	0	; () banked
 11409  003946  90D8               	bcf	status,0,c
 11410  003948  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 11411  00394A  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 11412  00394C  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 11413  00394E  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 11414                           
 11415                           ; BSR set to: 0
 11416  003950  0100               	movlb	0	; () banked
 11417  003952  5184               	movf	___lldiv@divisor& (0+255),w,b
 11418  003954  0100               	movlb	0	; () banked
 11419  003956  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 11420  003958  0100               	movlb	0	; () banked
 11421  00395A  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11422  00395C  0100               	movlb	0	; () banked
 11423  00395E  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 11424  003960  0100               	movlb	0	; () banked
 11425  003962  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11426  003964  0100               	movlb	0	; () banked
 11427  003966  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11428  003968  0100               	movlb	0	; () banked
 11429  00396A  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11430  00396C  0100               	movlb	0	; () banked
 11431  00396E  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11432  003970  A0D8               	btfss	status,0,c
 11433  003972  D012               	goto	l6091
 11434                           
 11435                           ; BSR set to: 0
 11436  003974  0100               	movlb	0	; () banked
 11437  003976  5184               	movf	___lldiv@divisor& (0+255),w,b
 11438  003978  0100               	movlb	0	; () banked
 11439  00397A  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 11440  00397C  0100               	movlb	0	; () banked
 11441  00397E  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11442  003980  0100               	movlb	0	; () banked
 11443  003982  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11444  003984  0100               	movlb	0	; () banked
 11445  003986  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11446  003988  0100               	movlb	0	; () banked
 11447  00398A  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11448  00398C  0100               	movlb	0	; () banked
 11449  00398E  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11450  003990  0100               	movlb	0	; () banked
 11451  003992  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11452                           
 11453                           ; BSR set to: 0
 11454  003994  0100               	movlb	0	; () banked
 11455  003996  8188               	bsf	___lldiv@quotient& (0+255),0,b
 11456  003998                     l6091:
 11457                           
 11458                           ; BSR set to: 0
 11459  003998  0100               	movlb	0	; () banked
 11460  00399A  90D8               	bcf	status,0,c
 11461  00399C  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11462  00399E  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11463  0039A0  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11464  0039A2  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 11465                           
 11466                           ; BSR set to: 0
 11467  0039A4  0100               	movlb	0	; () banked
 11468  0039A6  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 11469  0039A8  D7CD               	goto	l6083
 11470  0039AA                     l1131:
 11471                           
 11472                           ; BSR set to: 0
 11473  0039AA  C088  F080         	movff	___lldiv@quotient,?___lldiv
 11474  0039AE  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 11475  0039B2  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 11476  0039B6  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 11477                           
 11478                           ; BSR set to: 0
 11479  0039BA  0012               	return		;funcret
 11480  0039BC                     __end_of___lldiv:
 11481                           	opt stack 0
 11482                           tblptru	equ	0xFF8
 11483                           tblptrh	equ	0xFF7
 11484                           tblptrl	equ	0xFF6
 11485                           tablat	equ	0xFF5
 11486                           prodh	equ	0xFF4
 11487                           prodl	equ	0xFF3
 11488                           intcon	equ	0xFF2
 11489                           intcon2	equ	0xFF1
 11490                           indf0	equ	0xFEF
 11491                           postinc0	equ	0xFEE
 11492                           fsr0h	equ	0xFEA
 11493                           fsr0l	equ	0xFE9
 11494                           wreg	equ	0xFE8
 11495                           postinc1	equ	0xFE6
 11496                           postdec1	equ	0xFE5
 11497                           plusw1	equ	0xFE3
 11498                           fsr1h	equ	0xFE2
 11499                           fsr1l	equ	0xFE1
 11500                           indf2	equ	0xFDF
 11501                           postinc2	equ	0xFDE
 11502                           postdec2	equ	0xFDD
 11503                           fsr2h	equ	0xFDA
 11504                           fsr2l	equ	0xFD9
 11505                           status	equ	0xFD8
 11506                           
 11507 ;; *************** function ___fttol *****************
 11508 ;; Defined at:
 11509 ;;		line 44 in file "/Applications/microchip/xc8/v1.38/sources/common/fttol.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  f1              3   18[BANK0 ] float 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  lval            4   28[BANK0 ] unsigned long 
 11514 ;;  exp1            1   32[BANK0 ] unsigned char 
 11515 ;;  sign1           1   27[BANK0 ] unsigned char 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  4   18[BANK0 ] long 
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11525 ;;      Params:         0       4       0       0       0       0       0
 11526 ;;      Locals:         0       6       0       0       0       0       0
 11527 ;;      Temps:          0       5       0       0       0       0       0
 11528 ;;      Totals:         0      15       0       0       0       0       0
 11529 ;;Total ram usage:       15 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:   10
 11532 ;; This function calls:
 11533 ;;		Nothing
 11534 ;; This function is called by:
 11535 ;;		_sprintf
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text28
 11540  002E16                     __ptext28:
 11541                           	opt stack 0
 11542  002E16                     ___fttol:
 11543                           	opt stack 15
 11544                           
 11545                           ; BSR set to: 0
 11546                           ;incstack = 0
 11547  002E16  C094  F096         	movff	___fttol@f1+2,??___fttol
 11548  002E1A  0100               	movlb	0	; () banked
 11549  002E1C  6B97               	clrf	(??___fttol+1)& (0+255),b
 11550  002E1E  6B98               	clrf	(??___fttol+2)& (0+255),b
 11551  002E20  0100               	movlb	0	; () banked
 11552  002E22  3593               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11553  002E24  0100               	movlb	0	; () banked
 11554  002E26  3796               	rlcf	??___fttol& (0+255),f,b
 11555  002E28  E301               	bnc	u3671
 11556  002E2A  8197               	bsf	(??___fttol+1)& (0+255),0,b
 11557  002E2C                     u3671:
 11558  002E2C  0100               	movlb	0	; () banked
 11559  002E2E  5196               	movf	??___fttol& (0+255),w,b
 11560  002E30  0100               	movlb	0	; () banked
 11561  002E32  6FA0               	movwf	___fttol@exp1& (0+255),b
 11562  002E34  0100               	movlb	0	; () banked
 11563  002E36  51A0               	movf	___fttol@exp1& (0+255),w,b
 11564  002E38  A4D8               	btfss	status,2,c
 11565  002E3A  D00A               	goto	l3899
 11566                           
 11567                           ; BSR set to: 0
 11568  002E3C  0E00               	movlw	0
 11569  002E3E  0100               	movlb	0	; () banked
 11570  002E40  6F92               	movwf	?___fttol& (0+255),b
 11571  002E42  0E00               	movlw	0
 11572  002E44  6F93               	movwf	(?___fttol+1)& (0+255),b
 11573  002E46  0E00               	movlw	0
 11574  002E48  6F94               	movwf	(?___fttol+2)& (0+255),b
 11575  002E4A  0E00               	movlw	0
 11576  002E4C  6F95               	movwf	(?___fttol+3)& (0+255),b
 11577                           
 11578                           ; BSR set to: 0
 11579  002E4E  0012               	return	
 11580  002E50                     l3899:
 11581                           
 11582                           ; BSR set to: 0
 11583  002E50  0E17               	movlw	23
 11584  002E52  0100               	movlb	0	; () banked
 11585  002E54  6F96               	movwf	??___fttol& (0+255),b
 11586  002E56  C092  F097         	movff	___fttol@f1,??___fttol+1
 11587  002E5A  C093  F098         	movff	___fttol@f1+1,??___fttol+2
 11588  002E5E  C094  F099         	movff	___fttol@f1+2,??___fttol+3
 11589  002E62  0100               	movlb	0	; () banked
 11590  002E64  2996               	incf	??___fttol& (0+255),w,b
 11591  002E66  0100               	movlb	0	; () banked
 11592  002E68  6F9A               	movwf	(??___fttol+4)& (0+255),b
 11593  002E6A  D005               	goto	u3690
 11594  002E6C                     u3695:
 11595  002E6C  0100               	movlb	0	; () banked
 11596  002E6E  90D8               	bcf	status,0,c
 11597  002E70  3399               	rrcf	(??___fttol+3)& (0+255),f,b
 11598  002E72  3398               	rrcf	(??___fttol+2)& (0+255),f,b
 11599  002E74  3397               	rrcf	(??___fttol+1)& (0+255),f,b
 11600  002E76                     u3690:
 11601  002E76  0100               	movlb	0	; () banked
 11602  002E78  2F9A               	decfsz	(??___fttol+4)& (0+255),f,b
 11603  002E7A  D7F8               	goto	u3695
 11604  002E7C  0100               	movlb	0	; () banked
 11605  002E7E  5197               	movf	(??___fttol+1)& (0+255),w,b
 11606  002E80  0100               	movlb	0	; () banked
 11607  002E82  6F9B               	movwf	___fttol@sign1& (0+255),b
 11608                           
 11609                           ; BSR set to: 0
 11610  002E84  0100               	movlb	0	; () banked
 11611  002E86  8F93               	bsf	(___fttol@f1+1)& (0+255),7,b
 11612                           
 11613                           ; BSR set to: 0
 11614  002E88  0EFF               	movlw	255
 11615  002E8A  0100               	movlb	0	; () banked
 11616  002E8C  1792               	andwf	___fttol@f1& (0+255),f,b
 11617  002E8E  0EFF               	movlw	255
 11618  002E90  0100               	movlb	0	; () banked
 11619  002E92  1793               	andwf	(___fttol@f1+1)& (0+255),f,b
 11620  002E94  0E00               	movlw	0
 11621  002E96  0100               	movlb	0	; () banked
 11622  002E98  1794               	andwf	(___fttol@f1+2)& (0+255),f,b
 11623                           
 11624                           ; BSR set to: 0
 11625  002E9A  0100               	movlb	0	; () banked
 11626  002E9C  5192               	movf	___fttol@f1& (0+255),w,b
 11627  002E9E  0100               	movlb	0	; () banked
 11628  002EA0  6F9C               	movwf	___fttol@lval& (0+255),b
 11629  002EA2  0100               	movlb	0	; () banked
 11630  002EA4  5193               	movf	(___fttol@f1+1)& (0+255),w,b
 11631  002EA6  0100               	movlb	0	; () banked
 11632  002EA8  6F9D               	movwf	(___fttol@lval+1)& (0+255),b
 11633  002EAA  0100               	movlb	0	; () banked
 11634  002EAC  5194               	movf	(___fttol@f1+2)& (0+255),w,b
 11635  002EAE  0100               	movlb	0	; () banked
 11636  002EB0  6F9E               	movwf	(___fttol@lval+2)& (0+255),b
 11637  002EB2  0100               	movlb	0	; () banked
 11638  002EB4  6B9F               	clrf	(___fttol@lval+3)& (0+255),b
 11639                           
 11640                           ; BSR set to: 0
 11641  002EB6  0E8E               	movlw	142
 11642  002EB8  0100               	movlb	0	; () banked
 11643  002EBA  5FA0               	subwf	___fttol@exp1& (0+255),f,b
 11644                           
 11645                           ; BSR set to: 0
 11646  002EBC  0100               	movlb	0	; () banked
 11647  002EBE  AFA0               	btfss	___fttol@exp1& (0+255),7,b
 11648  002EC0  D01A               	goto	l3921
 11649                           
 11650                           ; BSR set to: 0
 11651  002EC2  0100               	movlb	0	; () banked
 11652  002EC4  51A0               	movf	___fttol@exp1& (0+255),w,b
 11653  002EC6  0A80               	xorlw	128
 11654  002EC8  0F8F               	addlw	143
 11655  002ECA  B0D8               	btfsc	status,0,c
 11656  002ECC  D00A               	goto	l3917
 11657                           
 11658                           ; BSR set to: 0
 11659  002ECE  0E00               	movlw	0
 11660  002ED0  0100               	movlb	0	; () banked
 11661  002ED2  6F92               	movwf	?___fttol& (0+255),b
 11662  002ED4  0E00               	movlw	0
 11663  002ED6  6F93               	movwf	(?___fttol+1)& (0+255),b
 11664  002ED8  0E00               	movlw	0
 11665  002EDA  6F94               	movwf	(?___fttol+2)& (0+255),b
 11666  002EDC  0E00               	movlw	0
 11667  002EDE  6F95               	movwf	(?___fttol+3)& (0+255),b
 11668                           
 11669                           ; BSR set to: 0
 11670  002EE0  0012               	return	
 11671  002EE2                     l3917:
 11672                           
 11673                           ; BSR set to: 0
 11674  002EE2  0100               	movlb	0	; () banked
 11675  002EE4  90D8               	bcf	status,0,c
 11676  002EE6  339F               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11677  002EE8  339E               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11678  002EEA  339D               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11679  002EEC  339C               	rrcf	___fttol@lval& (0+255),f,b
 11680                           
 11681                           ; BSR set to: 0
 11682  002EEE  0100               	movlb	0	; () banked
 11683  002EF0  3FA0               	incfsz	___fttol@exp1& (0+255),f,b
 11684  002EF2  D7F7               	goto	l3917
 11685                           
 11686                           ; BSR set to: 0
 11687  002EF4  D01B               	goto	l3931
 11688  002EF6                     l3921:
 11689                           
 11690                           ; BSR set to: 0
 11691  002EF6  0E17               	movlw	23
 11692  002EF8  0100               	movlb	0	; () banked
 11693  002EFA  65A0               	cpfsgt	___fttol@exp1& (0+255),b
 11694  002EFC  D012               	goto	l3929
 11695                           
 11696                           ; BSR set to: 0
 11697  002EFE  0E00               	movlw	0
 11698  002F00  0100               	movlb	0	; () banked
 11699  002F02  6F92               	movwf	?___fttol& (0+255),b
 11700  002F04  0E00               	movlw	0
 11701  002F06  6F93               	movwf	(?___fttol+1)& (0+255),b
 11702  002F08  0E00               	movlw	0
 11703  002F0A  6F94               	movwf	(?___fttol+2)& (0+255),b
 11704  002F0C  0E00               	movlw	0
 11705  002F0E  6F95               	movwf	(?___fttol+3)& (0+255),b
 11706                           
 11707                           ; BSR set to: 0
 11708  002F10  0012               	return	
 11709  002F12                     l3927:
 11710                           
 11711                           ; BSR set to: 0
 11712  002F12  0100               	movlb	0	; () banked
 11713  002F14  90D8               	bcf	status,0,c
 11714  002F16  379C               	rlcf	___fttol@lval& (0+255),f,b
 11715  002F18  379D               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11716  002F1A  379E               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11717  002F1C  379F               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11718  002F1E  0100               	movlb	0	; () banked
 11719  002F20  07A0               	decf	___fttol@exp1& (0+255),f,b
 11720  002F22                     l3929:
 11721                           
 11722                           ; BSR set to: 0
 11723  002F22  0100               	movlb	0	; () banked
 11724  002F24  51A0               	movf	___fttol@exp1& (0+255),w,b
 11725  002F26  0100               	movlb	0	; () banked
 11726  002F28  A4D8               	btfss	status,2,c
 11727  002F2A  D7F3               	goto	l3927
 11728  002F2C                     l3931:
 11729                           
 11730                           ; BSR set to: 0
 11731  002F2C  0100               	movlb	0	; () banked
 11732  002F2E  519B               	movf	___fttol@sign1& (0+255),w,b
 11733  002F30  0100               	movlb	0	; () banked
 11734  002F32  B4D8               	btfsc	status,2,c
 11735  002F34  D009               	goto	l3935
 11736                           
 11737                           ; BSR set to: 0
 11738  002F36  0100               	movlb	0	; () banked
 11739  002F38  1F9F               	comf	(___fttol@lval+3)& (0+255),f,b
 11740  002F3A  1F9E               	comf	(___fttol@lval+2)& (0+255),f,b
 11741  002F3C  1F9D               	comf	(___fttol@lval+1)& (0+255),f,b
 11742  002F3E  6D9C               	negf	___fttol@lval& (0+255),b
 11743  002F40  0E00               	movlw	0
 11744  002F42  239D               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11745  002F44  239E               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11746  002F46  239F               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11747  002F48                     l3935:
 11748                           
 11749                           ; BSR set to: 0
 11750  002F48  C09C  F092         	movff	___fttol@lval,?___fttol
 11751  002F4C  C09D  F093         	movff	___fttol@lval+1,?___fttol+1
 11752  002F50  C09E  F094         	movff	___fttol@lval+2,?___fttol+2
 11753  002F54  C09F  F095         	movff	___fttol@lval+3,?___fttol+3
 11754  002F58  0012               	return	
 11755  002F5A                     __end_of___fttol:
 11756                           	opt stack 0
 11757                           tblptru	equ	0xFF8
 11758                           tblptrh	equ	0xFF7
 11759                           tblptrl	equ	0xFF6
 11760                           tablat	equ	0xFF5
 11761                           prodh	equ	0xFF4
 11762                           prodl	equ	0xFF3
 11763                           intcon	equ	0xFF2
 11764                           intcon2	equ	0xFF1
 11765                           indf0	equ	0xFEF
 11766                           postinc0	equ	0xFEE
 11767                           fsr0h	equ	0xFEA
 11768                           fsr0l	equ	0xFE9
 11769                           wreg	equ	0xFE8
 11770                           postinc1	equ	0xFE6
 11771                           postdec1	equ	0xFE5
 11772                           plusw1	equ	0xFE3
 11773                           fsr1h	equ	0xFE2
 11774                           fsr1l	equ	0xFE1
 11775                           indf2	equ	0xFDF
 11776                           postinc2	equ	0xFDE
 11777                           postdec2	equ	0xFDD
 11778                           fsr2h	equ	0xFDA
 11779                           fsr2l	equ	0xFD9
 11780                           status	equ	0xFD8
 11781                           
 11782 ;; *************** function ___ftsub *****************
 11783 ;; Defined at:
 11784 ;;		line 20 in file "/Applications/microchip/xc8/v1.38/sources/common/ftsub.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  f1              3    9[BANK0 ] float 
 11787 ;;  f2              3   12[BANK0 ] float 
 11788 ;; Auto vars:     Size  Location     Type
 11789 ;;		None
 11790 ;; Return value:  Size  Location     Type
 11791 ;;                  3    9[BANK0 ] float 
 11792 ;; Registers used:
 11793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
 11794 ;; Tracked objects:
 11795 ;;		On entry : 0/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: 0/0
 11798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11799 ;;      Params:         0       6       0       0       0       0       0
 11800 ;;      Locals:         0       0       0       0       0       0       0
 11801 ;;      Temps:          0       0       0       0       0       0       0
 11802 ;;      Totals:         0       6       0       0       0       0       0
 11803 ;;Total ram usage:        6 bytes
 11804 ;; Hardware stack levels used:    1
 11805 ;; Hardware stack levels required when called:   12
 11806 ;; This function calls:
 11807 ;;		___ftadd
 11808 ;; This function is called by:
 11809 ;;		_sprintf
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           	psect	text29
 11814  004046                     __ptext29:
 11815                           	opt stack 0
 11816  004046                     ___ftsub:
 11817                           	opt stack 13
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;incstack = 0
 11821  004046  0100               	movlb	0	; () banked
 11822  004048  518C               	movf	___ftsub@f2& (0+255),w,b
 11823  00404A  0100               	movlb	0	; () banked
 11824  00404C  118D               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11825  00404E  0100               	movlb	0	; () banked
 11826  004050  118E               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11827  004052  B4D8               	btfsc	status,2,c
 11828  004054  D009               	goto	l6065
 11829                           
 11830                           ; BSR set to: 0
 11831  004056  0E00               	movlw	0
 11832  004058  0100               	movlb	0	; () banked
 11833  00405A  1B8C               	xorwf	___ftsub@f2& (0+255),f,b
 11834  00405C  0E00               	movlw	0
 11835  00405E  0100               	movlb	0	; () banked
 11836  004060  1B8D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11837  004062  0E80               	movlw	128
 11838  004064  0100               	movlb	0	; () banked
 11839  004066  1B8E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11840  004068                     l6065:
 11841                           
 11842                           ; BSR set to: 0
 11843  004068  C08C  FFE6         	movff	___ftsub@f2,postinc1
 11844  00406C  C08D  FFE6         	movff	___ftsub@f2+1,postinc1
 11845  004070  C08E  FFE6         	movff	___ftsub@f2+2,postinc1
 11846  004074  C089  FFE6         	movff	___ftsub@f1,postinc1
 11847  004078  C08A  FFE6         	movff	___ftsub@f1+1,postinc1
 11848  00407C  C08B  FFE6         	movff	___ftsub@f1+2,postinc1
 11849  004080  EC76  F00B         	call	___ftadd	;wreg free
 11850  004084  C03A  F089         	movff	btemp,?___ftsub
 11851  004088  C03B  F08A         	movff	btemp+1,?___ftsub+1
 11852  00408C  C03C  F08B         	movff	btemp+2,?___ftsub+2
 11853  004090  0012               	return	
 11854  004092                     __end_of___ftsub:
 11855                           	opt stack 0
 11856                           tblptru	equ	0xFF8
 11857                           tblptrh	equ	0xFF7
 11858                           tblptrl	equ	0xFF6
 11859                           tablat	equ	0xFF5
 11860                           prodh	equ	0xFF4
 11861                           prodl	equ	0xFF3
 11862                           intcon	equ	0xFF2
 11863                           intcon2	equ	0xFF1
 11864                           indf0	equ	0xFEF
 11865                           postinc0	equ	0xFEE
 11866                           fsr0h	equ	0xFEA
 11867                           fsr0l	equ	0xFE9
 11868                           wreg	equ	0xFE8
 11869                           postinc1	equ	0xFE6
 11870                           postdec1	equ	0xFE5
 11871                           plusw1	equ	0xFE3
 11872                           fsr1h	equ	0xFE2
 11873                           fsr1l	equ	0xFE1
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           postdec2	equ	0xFDD
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           
 11881 ;; *************** function ___ftadd *****************
 11882 ;; Defined at:
 11883 ;;		line 86 in file "/Applications/microchip/xc8/v1.38/sources/common/ftadd.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;  f1              3  [STACK] float 
 11886 ;;  f2              3  [STACK] float 
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;  exp1            1  [STACK] unsigned char 
 11889 ;;  exp2            1  [STACK] unsigned char 
 11890 ;;  sign            1  [STACK] unsigned char 
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  3  [STACK] float 
 11893 ;; Registers used:
 11894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11
 11895 ;; Tracked objects:
 11896 ;;		On entry : 0/0
 11897 ;;		On exit  : 0/0
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11900 ;;      Params:         0       0       0       0       0       0       0
 11901 ;;      Locals:         0       0       0       0       0       0       0
 11902 ;;      Temps:          0       0       0       0       0       0       0
 11903 ;;      Totals:         0       0       0       0       0       0       0
 11904 ;;Total ram usage:        0 bytes
 11905 ;; Hardware stack levels used:    1
 11906 ;; Hardware stack levels required when called:   11
 11907 ;; This function calls:
 11908 ;;		___ftpack
 11909 ;; This function is called by:
 11910 ;;		_FindCurrentTemp
 11911 ;;		_sprintf
 11912 ;;		___ftsub
 11913 ;; This function uses a reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text30
 11917  0016EC                     __ptext30:
 11918                           	opt stack 0
 11919  0016EC                     ___ftadd:
 11920                           	opt stack 0
 11921                           
 11922                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
 11923  0016EC  52E6               	movf	postinc1,f,c
 11924  0016EE  52E6               	movf	postinc1,f,c
 11925  0016F0  52E6               	movf	postinc1,f,c
 11926                           
 11927                           ;incstack = 0
 11928  0016F2  0E0F               	movlw	15
 11929  0016F4  6E45               	movwf	btemp+11,c
 11930                           
 11931                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 11932  0016F6  0EFA               	movlw	-6
 11933  0016F8  CFE3 F040          	movff	plusw1,btemp+6
 11934  0016FC  0EFB               	movlw	-5
 11935  0016FE  CFE3 F041          	movff	plusw1,btemp+7
 11936  001702  0EFC               	movlw	-4
 11937  001704  CFE3 F042          	movff	plusw1,btemp+8
 11938  001708  2845               	incf	btemp+11,w,c
 11939  00170A  6E3A               	movwf	btemp,c
 11940  00170C  D004               	goto	u8270
 11941  00170E                     u8275:
 11942  00170E  90D8               	bcf	status,0,c
 11943  001710  3242               	rrcf	btemp+8,f,c
 11944  001712  3241               	rrcf	btemp+7,f,c
 11945  001714  3240               	rrcf	btemp+6,f,c
 11946  001716                     u8270:
 11947  001716  2E3A               	decfsz	btemp,f,c
 11948  001718  D7FA               	goto	u8275
 11949  00171A  5040               	movf	btemp+6,w,c
 11950  00171C  6E45               	movwf	btemp+11,c
 11951                           
 11952                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 11953  00171E  0EFD               	movlw	-3
 11954  001720  C045  FFE3         	movff	btemp+11,plusw1
 11955  001724  0E0F               	movlw	15
 11956  001726  6E45               	movwf	btemp+11,c
 11957                           
 11958                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 11959  001728  0EF7               	movlw	-9
 11960  00172A  CFE3 F040          	movff	plusw1,btemp+6
 11961  00172E  0EF8               	movlw	-8
 11962  001730  CFE3 F041          	movff	plusw1,btemp+7
 11963  001734  0EF9               	movlw	-7
 11964  001736  CFE3 F042          	movff	plusw1,btemp+8
 11965  00173A  2845               	incf	btemp+11,w,c
 11966  00173C  6E3A               	movwf	btemp,c
 11967  00173E  D004               	goto	u8280
 11968  001740                     u8285:
 11969  001740  90D8               	bcf	status,0,c
 11970  001742  3242               	rrcf	btemp+8,f,c
 11971  001744  3241               	rrcf	btemp+7,f,c
 11972  001746  3240               	rrcf	btemp+6,f,c
 11973  001748                     u8280:
 11974  001748  2E3A               	decfsz	btemp,f,c
 11975  00174A  D7FA               	goto	u8285
 11976  00174C  5040               	movf	btemp+6,w,c
 11977  00174E  6E45               	movwf	btemp+11,c
 11978                           
 11979                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 11980  001750  0EFE               	movlw	-2
 11981  001752  C045  FFE3         	movff	btemp+11,plusw1
 11982                           
 11983                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 11984  001756  0EFD               	movlw	-3
 11985  001758  50E3               	movf	plusw1,w,c
 11986  00175A  B4D8               	btfsc	status,2,c
 11987  00175C  D018               	goto	l7075
 11988                           
 11989                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 11990                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 11991  00175E  50E1               	movf	fsr1l,w,c
 11992  001760  0FFD               	addlw	-3
 11993  001762  6ED9               	movwf	fsr2l,c
 11994  001764  50E2               	movf	fsr1h,w,c
 11995  001766  6EDA               	movwf	fsr2h,c
 11996  001768  0EFF               	movlw	255
 11997  00176A  22DA               	addwfc	fsr2h,f,c
 11998  00176C  0EFE               	movlw	-2
 11999  00176E  50E3               	movf	plusw1,w,c
 12000  001770  5CDE               	subwf	postinc2,w,c
 12001  001772  B0D8               	btfsc	status,0,c
 12002  001774  D014               	goto	l7079
 12003                           
 12004                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12005  001776  0EFD               	movlw	-3
 12006  001778  CFE3 F045          	movff	plusw1,btemp+11
 12007                           
 12008                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12009  00177C  0EFE               	movlw	-2
 12010  00177E  CFE3 F044          	movff	plusw1,btemp+10
 12011  001782  5045               	movf	btemp+11,w,c
 12012  001784  5C44               	subwf	btemp+10,w,c
 12013  001786  6E45               	movwf	btemp+11,c
 12014  001788  0E18               	movlw	24
 12015  00178A  6445               	cpfsgt	btemp+11,c
 12016  00178C  D008               	goto	l7079
 12017  00178E                     l7075:
 12018                           
 12019                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12020  00178E  0EF7               	movlw	-9
 12021  001790  CFE3 F03A          	movff	plusw1,btemp
 12022  001794  0EF8               	movlw	-8
 12023  001796  CFE3 F03B          	movff	plusw1,btemp+1
 12024  00179A  0EF9               	movlw	-7
 12025  00179C  D023               	goto	L6
 12026  00179E                     l7079:
 12027                           
 12028                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12029  00179E  0EFE               	movlw	-2
 12030  0017A0  50E3               	movf	plusw1,w,c
 12031  0017A2  B4D8               	btfsc	status,2,c
 12032  0017A4  D018               	goto	l7085
 12033                           
 12034                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12035                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12036  0017A6  50E1               	movf	fsr1l,w,c
 12037  0017A8  0FFE               	addlw	-2
 12038  0017AA  6ED9               	movwf	fsr2l,c
 12039  0017AC  50E2               	movf	fsr1h,w,c
 12040  0017AE  6EDA               	movwf	fsr2h,c
 12041  0017B0  0EFF               	movlw	255
 12042  0017B2  22DA               	addwfc	fsr2h,f,c
 12043  0017B4  0EFD               	movlw	-3
 12044  0017B6  50E3               	movf	plusw1,w,c
 12045  0017B8  5CDE               	subwf	postinc2,w,c
 12046  0017BA  B0D8               	btfsc	status,0,c
 12047  0017BC  D016               	goto	l7089
 12048                           
 12049                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12050  0017BE  0EFE               	movlw	-2
 12051  0017C0  CFE3 F045          	movff	plusw1,btemp+11
 12052                           
 12053                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12054  0017C4  0EFD               	movlw	-3
 12055  0017C6  CFE3 F044          	movff	plusw1,btemp+10
 12056  0017CA  5045               	movf	btemp+11,w,c
 12057  0017CC  5C44               	subwf	btemp+10,w,c
 12058  0017CE  6E45               	movwf	btemp+11,c
 12059  0017D0  0E18               	movlw	24
 12060  0017D2  6445               	cpfsgt	btemp+11,c
 12061  0017D4  D00A               	goto	l7089
 12062  0017D6                     l7085:
 12063                           
 12064                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12065  0017D6  0EFA               	movlw	-6
 12066  0017D8  CFE3 F03A          	movff	plusw1,btemp
 12067  0017DC  0EFB               	movlw	-5
 12068  0017DE  CFE3 F03B          	movff	plusw1,btemp+1
 12069  0017E2  0EFC               	movlw	-4
 12070  0017E4                     L6:
 12071  0017E4  CFE3 F03C          	movff	plusw1,btemp+2
 12072  0017E8  D102               	goto	l1008
 12073  0017EA                     l7089:
 12074                           
 12075                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12076  0017EA  0EFF               	movlw	-1
 12077  0017EC  6AE3               	clrf	plusw1,c
 12078  0017EE  82E3               	bsf	plusw1,1,c
 12079  0017F0  84E3               	bsf	plusw1,2,c	;indir
 12080                           
 12081                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12082  0017F2  0EFC               	movlw	-4
 12083  0017F4  AEE3               	btfss	plusw1,7,c
 12084  0017F6  D002               	goto	l1012
 12085                           
 12086                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12087  0017F8  0EFF               	movlw	-1
 12088  0017FA  8EE3               	bsf	plusw1,7,c
 12089  0017FC                     l1012:
 12090                           
 12091                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12092  0017FC  0EF9               	movlw	-7
 12093  0017FE  AEE3               	btfss	plusw1,7,c
 12094  001800  D002               	goto	l1013
 12095                           
 12096                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12097  001802  0EFF               	movlw	-1
 12098  001804  8CE3               	bsf	plusw1,6,c
 12099  001806                     l1013:
 12100                           
 12101                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12102  001806  0EFB               	movlw	-5
 12103  001808  8EE3               	bsf	plusw1,7,c
 12104                           
 12105                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12106  00180A  0EFC               	movlw	-4
 12107  00180C  6AE3               	clrf	plusw1,c
 12108                           
 12109                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12110  00180E  0EF8               	movlw	-8
 12111  001810  8EE3               	bsf	plusw1,7,c
 12112                           
 12113                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12114  001812  0EF9               	movlw	-7
 12115  001814  6AE3               	clrf	plusw1,c
 12116                           
 12117                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12118                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12119  001816  50E1               	movf	fsr1l,w,c
 12120  001818  0FFD               	addlw	-3
 12121  00181A  6ED9               	movwf	fsr2l,c
 12122  00181C  50E2               	movf	fsr1h,w,c
 12123  00181E  6EDA               	movwf	fsr2h,c
 12124  001820  0EFF               	movlw	255
 12125  001822  22DA               	addwfc	fsr2h,f,c
 12126  001824  0EFE               	movlw	-2
 12127  001826  50E3               	movf	plusw1,w,c
 12128  001828  5CDE               	subwf	postinc2,w,c
 12129  00182A  B0D8               	btfsc	status,0,c
 12130  00182C  D035               	goto	l7111
 12131  00182E                     l7101:
 12132                           
 12133                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12134  00182E  90D8               	bcf	status,0,c
 12135  001830  0EF7               	movlw	-9
 12136  001832  36E3               	rlcf	plusw1,f,c
 12137  001834  0EF8               	movlw	-8
 12138  001836  36E3               	rlcf	plusw1,f,c
 12139  001838  0EF9               	movlw	-7
 12140  00183A  36E3               	rlcf	plusw1,f,c
 12141                           
 12142                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12143  00183C  0EFE               	movlw	-2
 12144  00183E  06E3               	decf	plusw1,f,c
 12145                           
 12146                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12147                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12148  001840  50E1               	movf	fsr1l,w,c
 12149  001842  0FFE               	addlw	-2
 12150  001844  6ED9               	movwf	fsr2l,c
 12151  001846  50E2               	movf	fsr1h,w,c
 12152  001848  6EDA               	movwf	fsr2h,c
 12153  00184A  0EFF               	movlw	255
 12154  00184C  22DA               	addwfc	fsr2h,f,c
 12155  00184E  0EFD               	movlw	-3
 12156  001850  50E3               	movf	plusw1,w,c
 12157  001852  18DE               	xorwf	postinc2,w,c
 12158  001854  B4D8               	btfsc	status,2,c
 12159  001856  D013               	goto	l7109
 12160                           
 12161                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12162  001858  0EFF               	movlw	-1
 12163  00185A  06E3               	decf	plusw1,f,c
 12164  00185C  0EFF               	movlw	-1
 12165  00185E  CFE3 F045          	movff	plusw1,btemp+11
 12166  001862  0E07               	movlw	7
 12167  001864  1645               	andwf	btemp+11,f,c
 12168  001866  B4D8               	btfsc	status,2,c
 12169  001868  D00A               	goto	l7109
 12170  00186A  D7E1               	goto	l7101
 12171  00186C                     l7107:
 12172                           
 12173                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12174  00186C  90D8               	bcf	status,0,c
 12175  00186E  0EFC               	movlw	-4
 12176  001870  32E3               	rrcf	plusw1,f,c
 12177  001872  0EFB               	movlw	-5
 12178  001874  32E3               	rrcf	plusw1,f,c
 12179  001876  0EFA               	movlw	-6
 12180  001878  32E3               	rrcf	plusw1,f,c
 12181                           
 12182                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12183  00187A  0EFD               	movlw	-3
 12184  00187C  2AE3               	incf	plusw1,f,c
 12185  00187E                     l7109:
 12186                           
 12187                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12188                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12189  00187E  50E1               	movf	fsr1l,w,c
 12190  001880  0FFD               	addlw	-3
 12191  001882  6ED9               	movwf	fsr2l,c
 12192  001884  50E2               	movf	fsr1h,w,c
 12193  001886  6EDA               	movwf	fsr2h,c
 12194  001888  0EFF               	movlw	255
 12195  00188A  22DA               	addwfc	fsr2h,f,c
 12196  00188C  0EFE               	movlw	-2
 12197  00188E  50E3               	movf	plusw1,w,c
 12198  001890  18DE               	xorwf	postinc2,w,c
 12199  001892  B4D8               	btfsc	status,2,c
 12200  001894  D041               	goto	l7123
 12201  001896  D7EA               	goto	l7107
 12202  001898                     l7111:
 12203                           
 12204                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12205                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12206  001898  50E1               	movf	fsr1l,w,c
 12207  00189A  0FFE               	addlw	-2
 12208  00189C  6ED9               	movwf	fsr2l,c
 12209  00189E  50E2               	movf	fsr1h,w,c
 12210  0018A0  6EDA               	movwf	fsr2h,c
 12211  0018A2  0EFF               	movlw	255
 12212  0018A4  22DA               	addwfc	fsr2h,f,c
 12213  0018A6  0EFD               	movlw	-3
 12214  0018A8  50E3               	movf	plusw1,w,c
 12215  0018AA  5CDE               	subwf	postinc2,w,c
 12216  0018AC  B0D8               	btfsc	status,0,c
 12217  0018AE  D034               	goto	l7123
 12218  0018B0                     l7113:
 12219                           
 12220                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12221  0018B0  90D8               	bcf	status,0,c
 12222  0018B2  0EFA               	movlw	-6
 12223  0018B4  36E3               	rlcf	plusw1,f,c
 12224  0018B6  0EFB               	movlw	-5
 12225  0018B8  36E3               	rlcf	plusw1,f,c
 12226  0018BA  0EFC               	movlw	-4
 12227  0018BC  36E3               	rlcf	plusw1,f,c
 12228                           
 12229                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12230  0018BE  0EFD               	movlw	-3
 12231  0018C0  06E3               	decf	plusw1,f,c
 12232                           
 12233                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12234                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12235  0018C2  50E1               	movf	fsr1l,w,c
 12236  0018C4  0FFE               	addlw	-2
 12237  0018C6  6ED9               	movwf	fsr2l,c
 12238  0018C8  50E2               	movf	fsr1h,w,c
 12239  0018CA  6EDA               	movwf	fsr2h,c
 12240  0018CC  0EFF               	movlw	255
 12241  0018CE  22DA               	addwfc	fsr2h,f,c
 12242  0018D0  0EFD               	movlw	-3
 12243  0018D2  50E3               	movf	plusw1,w,c
 12244  0018D4  18DE               	xorwf	postinc2,w,c
 12245  0018D6  B4D8               	btfsc	status,2,c
 12246  0018D8  D013               	goto	l7121
 12247                           
 12248                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12249  0018DA  0EFF               	movlw	-1
 12250  0018DC  06E3               	decf	plusw1,f,c
 12251  0018DE  0EFF               	movlw	-1
 12252  0018E0  CFE3 F045          	movff	plusw1,btemp+11
 12253  0018E4  0E07               	movlw	7
 12254  0018E6  1645               	andwf	btemp+11,f,c
 12255  0018E8  B4D8               	btfsc	status,2,c
 12256  0018EA  D00A               	goto	l7121
 12257  0018EC  D7E1               	goto	l7113
 12258  0018EE                     l7119:
 12259                           
 12260                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12261  0018EE  90D8               	bcf	status,0,c
 12262  0018F0  0EF9               	movlw	-7
 12263  0018F2  32E3               	rrcf	plusw1,f,c
 12264  0018F4  0EF8               	movlw	-8
 12265  0018F6  32E3               	rrcf	plusw1,f,c
 12266  0018F8  0EF7               	movlw	-9
 12267  0018FA  32E3               	rrcf	plusw1,f,c
 12268                           
 12269                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12270  0018FC  0EFE               	movlw	-2
 12271  0018FE  2AE3               	incf	plusw1,f,c
 12272  001900                     l7121:
 12273                           
 12274                           ;stkvar	___ftadd@exp2 @ sp[(-3)+1]
 12275                           ;stkvar	___ftadd@exp1 @ sp[(-3)+0]
 12276  001900  50E1               	movf	fsr1l,w,c
 12277  001902  0FFD               	addlw	-3
 12278  001904  6ED9               	movwf	fsr2l,c
 12279  001906  50E2               	movf	fsr1h,w,c
 12280  001908  6EDA               	movwf	fsr2h,c
 12281  00190A  0EFF               	movlw	255
 12282  00190C  22DA               	addwfc	fsr2h,f,c
 12283  00190E  0EFE               	movlw	-2
 12284  001910  50E3               	movf	plusw1,w,c
 12285  001912  18DE               	xorwf	postinc2,w,c
 12286  001914  A4D8               	btfss	status,2,c
 12287  001916  D7EB               	goto	l7119
 12288  001918                     l7123:
 12289                           
 12290                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12291  001918  0EFF               	movlw	-1
 12292  00191A  AEE3               	btfss	plusw1,7,c
 12293  00191C  D011               	goto	l7129
 12294                           
 12295                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12296  00191E  0EFA               	movlw	-6
 12297  001920  1EE3               	comf	plusw1,f,c
 12298  001922  0EFB               	movlw	-5
 12299  001924  1EE3               	comf	plusw1,f,c
 12300  001926  0EFC               	movlw	-4
 12301  001928  1EE3               	comf	plusw1,f,c
 12302                           
 12303                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12304  00192A  50E1               	movf	fsr1l,w,c
 12305  00192C  0FFA               	addlw	-6
 12306  00192E  6ED9               	movwf	fsr2l,c
 12307  001930  50E2               	movf	fsr1h,w,c
 12308  001932  6EDA               	movwf	fsr2h,c
 12309  001934  0EFF               	movlw	255
 12310  001936  22DA               	addwfc	fsr2h,f,c
 12311  001938  2ADE               	incf	postinc2,f,c
 12312  00193A  0E00               	movlw	0
 12313  00193C  22DE               	addwfc	postinc2,f,c
 12314  00193E  22DE               	addwfc	postinc2,f,c
 12315  001940                     l7129:
 12316                           
 12317                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12318  001940  0EFF               	movlw	-1
 12319  001942  ACE3               	btfss	plusw1,6,c
 12320  001944  D011               	goto	l7135
 12321                           
 12322                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12323  001946  0EF7               	movlw	-9
 12324  001948  1EE3               	comf	plusw1,f,c
 12325  00194A  0EF8               	movlw	-8
 12326  00194C  1EE3               	comf	plusw1,f,c
 12327  00194E  0EF9               	movlw	-7
 12328  001950  1EE3               	comf	plusw1,f,c
 12329                           
 12330                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12331  001952  50E1               	movf	fsr1l,w,c
 12332  001954  0FF7               	addlw	-9
 12333  001956  6ED9               	movwf	fsr2l,c
 12334  001958  50E2               	movf	fsr1h,w,c
 12335  00195A  6EDA               	movwf	fsr2h,c
 12336  00195C  0EFF               	movlw	255
 12337  00195E  22DA               	addwfc	fsr2h,f,c
 12338  001960  2ADE               	incf	postinc2,f,c
 12339  001962  0E00               	movlw	0
 12340  001964  22DE               	addwfc	postinc2,f,c
 12341  001966  22DE               	addwfc	postinc2,f,c
 12342  001968                     l7135:
 12343                           
 12344                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12345  001968  0EFF               	movlw	-1
 12346  00196A  6AE3               	clrf	plusw1,c
 12347                           
 12348                           ;stkvar	___ftadd@f1 @ sp[(-3)+-3]
 12349                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12350  00196C  0EF7               	movlw	-9
 12351  00196E  50E3               	movf	plusw1,w,c
 12352  001970  6E3A               	movwf	btemp,c
 12353  001972  0EFA               	movlw	-6
 12354  001974  50E3               	movf	plusw1,w,c
 12355  001976  263A               	addwf	btemp,f,c
 12356  001978  0EF7               	movlw	-9
 12357  00197A  C03A  FFE3         	movff	btemp,plusw1
 12358  00197E  0EF8               	movlw	-8
 12359  001980  50E3               	movf	plusw1,w,c
 12360  001982  6E3A               	movwf	btemp,c
 12361  001984  0EFB               	movlw	-5
 12362  001986  50E3               	movf	plusw1,w,c
 12363  001988  223A               	addwfc	btemp,f,c
 12364  00198A  0EF8               	movlw	-8
 12365  00198C  C03A  FFE3         	movff	btemp,plusw1
 12366  001990  0EF9               	movlw	-7
 12367  001992  50E3               	movf	plusw1,w,c
 12368  001994  6E3A               	movwf	btemp,c
 12369  001996  0EFC               	movlw	-4
 12370  001998  50E3               	movf	plusw1,w,c
 12371  00199A  223A               	addwfc	btemp,f,c
 12372  00199C  0EF9               	movlw	-7
 12373  00199E  C03A  FFE3         	movff	btemp,plusw1
 12374                           
 12375                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12376  0019A2  0EF9               	movlw	-7
 12377  0019A4  AEE3               	btfss	plusw1,7,c
 12378  0019A6  D014               	goto	l7147
 12379                           
 12380                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12381  0019A8  0EF7               	movlw	-9
 12382  0019AA  1EE3               	comf	plusw1,f,c
 12383  0019AC  0EF8               	movlw	-8
 12384  0019AE  1EE3               	comf	plusw1,f,c
 12385  0019B0  0EF9               	movlw	-7
 12386  0019B2  1EE3               	comf	plusw1,f,c
 12387                           
 12388                           ;stkvar	___ftadd@f2 @ sp[(-3)+-6]
 12389  0019B4  50E1               	movf	fsr1l,w,c
 12390  0019B6  0FF7               	addlw	-9
 12391  0019B8  6ED9               	movwf	fsr2l,c
 12392  0019BA  50E2               	movf	fsr1h,w,c
 12393  0019BC  6EDA               	movwf	fsr2h,c
 12394  0019BE  0EFF               	movlw	255
 12395  0019C0  22DA               	addwfc	fsr2h,f,c
 12396  0019C2  2ADE               	incf	postinc2,f,c
 12397  0019C4  0E00               	movlw	0
 12398  0019C6  22DE               	addwfc	postinc2,f,c
 12399  0019C8  22DE               	addwfc	postinc2,f,c
 12400                           
 12401                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12402  0019CA  0EFF               	movlw	-1
 12403  0019CC  6AE3               	clrf	plusw1,c
 12404  0019CE  2AE3               	incf	plusw1,f,c
 12405  0019D0                     l7147:
 12406                           
 12407                           ;stkvar	___ftadd@sign @ sp[(-3)+2]
 12408  0019D0  0EFF               	movlw	-1
 12409  0019D2  50E3               	movf	plusw1,w,c
 12410  0019D4  6EE6               	movwf	postinc1,c
 12411                           
 12412                           ;stkvar	___ftadd@exp1 @ sp[(-4)+0]
 12413  0019D6  0EFC               	movlw	-4
 12414  0019D8  50E3               	movf	plusw1,w,c
 12415  0019DA  6EE6               	movwf	postinc1,c
 12416                           
 12417                           ;stkvar	___ftadd@f2 @ sp[(-5)+-6]
 12418  0019DC  0EF5               	movlw	-11
 12419  0019DE  CFE3 FFE6          	movff	plusw1,postinc1
 12420  0019E2  CFE3 FFE6          	movff	plusw1,postinc1
 12421  0019E6  CFE3 FFE6          	movff	plusw1,postinc1
 12422  0019EA  EC9F  F01A         	call	___ftpack	;wreg free
 12423  0019EE                     l1008:
 12424                           
 12425                           ; ___ftadd: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 12426  0019EE  0EF7               	movlw	247
 12427  0019F0  26E1               	addwf	fsr1l,f,c
 12428  0019F2  0EFF               	movlw	255
 12429  0019F4  22E2               	addwfc	fsr1h,f,c
 12430  0019F6  0012               	return		;funcret
 12431  0019F8                     __end_of___ftadd:
 12432                           	opt stack 0
 12433                           tblptru	equ	0xFF8
 12434                           tblptrh	equ	0xFF7
 12435                           tblptrl	equ	0xFF6
 12436                           tablat	equ	0xFF5
 12437                           prodh	equ	0xFF4
 12438                           prodl	equ	0xFF3
 12439                           intcon	equ	0xFF2
 12440                           intcon2	equ	0xFF1
 12441                           indf0	equ	0xFEF
 12442                           postinc0	equ	0xFEE
 12443                           fsr0h	equ	0xFEA
 12444                           fsr0l	equ	0xFE9
 12445                           wreg	equ	0xFE8
 12446                           postinc1	equ	0xFE6
 12447                           postdec1	equ	0xFE5
 12448                           plusw1	equ	0xFE3
 12449                           fsr1h	equ	0xFE2
 12450                           fsr1l	equ	0xFE1
 12451                           indf2	equ	0xFDF
 12452                           postinc2	equ	0xFDE
 12453                           postdec2	equ	0xFDD
 12454                           fsr2h	equ	0xFDA
 12455                           fsr2l	equ	0xFD9
 12456                           status	equ	0xFD8
 12457                           
 12458 ;; *************** function ___ftpack *****************
 12459 ;; Defined at:
 12460 ;;		line 62 in file "/Applications/microchip/xc8/v1.38/sources/common/float.c"
 12461 ;; Parameters:    Size  Location     Type
 12462 ;;  arg             3  [STACK] unsigned um
 12463 ;;  exp             1  [STACK] unsigned char 
 12464 ;;  sign            1  [STACK] unsigned char 
 12465 ;; Auto vars:     Size  Location     Type
 12466 ;;		None
 12467 ;; Return value:  Size  Location     Type
 12468 ;;                  3  [STACK] float 
 12469 ;; Registers used:
 12470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+9, btemp+10, btemp+11
 12471 ;; Tracked objects:
 12472 ;;		On entry : 0/0
 12473 ;;		On exit  : 0/0
 12474 ;;		Unchanged: 0/0
 12475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12476 ;;      Params:         0       0       0       0       0       0       0
 12477 ;;      Locals:         0       0       0       0       0       0       0
 12478 ;;      Temps:          0       0       0       0       0       0       0
 12479 ;;      Totals:         0       0       0       0       0       0       0
 12480 ;;Total ram usage:        0 bytes
 12481 ;; Hardware stack levels used:    1
 12482 ;; Hardware stack levels required when called:   10
 12483 ;; This function calls:
 12484 ;;		Nothing
 12485 ;; This function is called by:
 12486 ;;		___ftadd
 12487 ;;		___ftdiv
 12488 ;;		___ftmul
 12489 ;;		___lltoft
 12490 ;;		___lwtoft
 12491 ;; This function uses a reentrant model
 12492 ;;
 12493                           
 12494                           	psect	text31
 12495  00353E                     __ptext31:
 12496                           	opt stack 0
 12497  00353E                     ___ftpack:
 12498                           	opt stack 10
 12499                           
 12500                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 12501                           
 12502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0
 12503                           ;incstack = 0
 12504  00353E  0EFC               	movlw	-4
 12505  003540  50E3               	movf	plusw1,w,c
 12506  003542  B4D8               	btfsc	status,2,c
 12507  003544  D00A               	goto	l6991
 12508                           
 12509                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12510  003546  0EFD               	movlw	-3
 12511  003548  50E3               	movf	plusw1,w,c
 12512  00354A  E117               	bnz	l6997
 12513  00354C  0EFE               	movlw	-2
 12514  00354E  50E3               	movf	plusw1,w,c
 12515  003550  E114               	bnz	l6997
 12516  003552  0EFF               	movlw	-1
 12517  003554  50E3               	movf	plusw1,w,c
 12518  003556  A4D8               	btfss	status,2,c
 12519  003558  D010               	goto	l6997
 12520  00355A                     l6991:
 12521  00355A  0E00               	movlw	0
 12522  00355C  6E3A               	movwf	btemp,c
 12523  00355E  0E00               	movlw	0
 12524  003560  6E3B               	movwf	btemp+1,c
 12525  003562  0E00               	movlw	0
 12526  003564  6E3C               	movwf	btemp+2,c
 12527  003566  D072               	goto	l973
 12528  003568                     l6995:
 12529                           
 12530                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 12531  003568  0EFC               	movlw	-4
 12532  00356A  2AE3               	incf	plusw1,f,c
 12533                           
 12534                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12535  00356C  90D8               	bcf	status,0,c
 12536  00356E  0EFF               	movlw	-1
 12537  003570  32E3               	rrcf	plusw1,f,c
 12538  003572  0EFE               	movlw	-2
 12539  003574  32E3               	rrcf	plusw1,f,c
 12540  003576  0EFD               	movlw	-3
 12541  003578  32E3               	rrcf	plusw1,f,c
 12542  00357A                     l6997:
 12543                           
 12544                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12545  00357A  6A43               	clrf	btemp+9,c
 12546  00357C  6A44               	clrf	btemp+10,c
 12547  00357E  0EFF               	movlw	-1
 12548  003580  CFE3 F045          	movff	plusw1,btemp+11
 12549  003584  0EFE               	movlw	254
 12550  003586  1645               	andwf	btemp+11,f,c
 12551  003588  B4D8               	btfsc	status,2,c
 12552  00358A  D015               	goto	l7005
 12553  00358C  D7ED               	goto	l6995
 12554  00358E                     l6999:
 12555                           
 12556                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 12557  00358E  0EFC               	movlw	-4
 12558  003590  2AE3               	incf	plusw1,f,c
 12559                           
 12560                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12561  003592  50E1               	movf	fsr1l,w,c
 12562  003594  0FFD               	addlw	-3
 12563  003596  6ED9               	movwf	fsr2l,c
 12564  003598  50E2               	movf	fsr1h,w,c
 12565  00359A  6EDA               	movwf	fsr2h,c
 12566  00359C  0EFF               	movlw	255
 12567  00359E  22DA               	addwfc	fsr2h,f,c
 12568  0035A0  2ADE               	incf	postinc2,f,c
 12569  0035A2  0E00               	movlw	0
 12570  0035A4  22DE               	addwfc	postinc2,f,c
 12571  0035A6  22DE               	addwfc	postinc2,f,c
 12572                           
 12573                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12574  0035A8  90D8               	bcf	status,0,c
 12575  0035AA  0EFF               	movlw	-1
 12576  0035AC  32E3               	rrcf	plusw1,f,c
 12577  0035AE  0EFE               	movlw	-2
 12578  0035B0  32E3               	rrcf	plusw1,f,c
 12579  0035B2  0EFD               	movlw	-3
 12580  0035B4  32E3               	rrcf	plusw1,f,c
 12581  0035B6                     l7005:
 12582                           
 12583                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12584  0035B6  6A43               	clrf	btemp+9,c
 12585  0035B8  6A44               	clrf	btemp+10,c
 12586  0035BA  0EFF               	movlw	-1
 12587  0035BC  CFE3 F045          	movff	plusw1,btemp+11
 12588  0035C0  0EFF               	movlw	255
 12589  0035C2  1645               	andwf	btemp+11,f,c
 12590  0035C4  B4D8               	btfsc	status,2,c
 12591  0035C6  D00A               	goto	l7009
 12592  0035C8  D7E2               	goto	l6999
 12593  0035CA                     l7007:
 12594                           
 12595                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 12596  0035CA  0EFC               	movlw	-4
 12597  0035CC  06E3               	decf	plusw1,f,c
 12598                           
 12599                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12600  0035CE  90D8               	bcf	status,0,c
 12601  0035D0  0EFD               	movlw	-3
 12602  0035D2  36E3               	rlcf	plusw1,f,c
 12603  0035D4  0EFE               	movlw	-2
 12604  0035D6  36E3               	rlcf	plusw1,f,c
 12605  0035D8  0EFF               	movlw	-1
 12606  0035DA  36E3               	rlcf	plusw1,f,c
 12607  0035DC                     l7009:
 12608                           
 12609                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12610  0035DC  0EFE               	movlw	-2
 12611  0035DE  BEE3               	btfsc	plusw1,7,c
 12612  0035E0  D006               	goto	l7013
 12613                           
 12614                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 12615  0035E2  0EFC               	movlw	-4
 12616  0035E4  CFE3 F03A          	movff	plusw1,btemp
 12617  0035E8  0E02               	movlw	2
 12618  0035EA  603A               	cpfslt	btemp,c
 12619  0035EC  D7EE               	goto	l7007
 12620  0035EE                     l7013:
 12621                           
 12622                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 12623  0035EE  0EFC               	movlw	-4
 12624  0035F0  B0E3               	btfsc	plusw1,0,c
 12625  0035F2  D002               	goto	l7017
 12626                           
 12627                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12628  0035F4  0EFE               	movlw	-2
 12629  0035F6  9EE3               	bcf	plusw1,7,c
 12630  0035F8                     l7017:
 12631                           
 12632                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 12633  0035F8  50E1               	movf	fsr1l,w,c
 12634  0035FA  0FFC               	addlw	-4
 12635  0035FC  6ED9               	movwf	fsr2l,c
 12636  0035FE  50E2               	movf	fsr1h,w,c
 12637  003600  6EDA               	movwf	fsr2h,c
 12638  003602  0EFF               	movlw	255
 12639  003604  22DA               	addwfc	fsr2h,f,c
 12640  003606  90D8               	bcf	status,0,c
 12641  003608  32DF               	rrcf	indf2,f,c
 12642                           
 12643                           ;stkvar	___ftpack@exp @ sp[(0)+-4]
 12644  00360A  0EFC               	movlw	-4
 12645  00360C  50E3               	movf	plusw1,w,c
 12646  00360E  6E45               	movwf	btemp+11,c
 12647  003610  6A44               	clrf	btemp+10,c
 12648  003612  6A43               	clrf	btemp+9,c
 12649                           
 12650                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12651  003614  50E1               	movf	fsr1l,w,c
 12652  003616  0FFD               	addlw	-3
 12653  003618  6ED9               	movwf	fsr2l,c
 12654  00361A  50E2               	movf	fsr1h,w,c
 12655  00361C  6EDA               	movwf	fsr2h,c
 12656  00361E  0EFF               	movlw	255
 12657  003620  22DA               	addwfc	fsr2h,f,c
 12658  003622  5043               	movf	btemp+9,w,c
 12659  003624  12DE               	iorwf	postinc2,f,c
 12660  003626  5044               	movf	btemp+10,w,c
 12661  003628  12DE               	iorwf	postinc2,f,c
 12662  00362A  5045               	movf	btemp+11,w,c
 12663  00362C  12DE               	iorwf	postinc2,f,c
 12664                           
 12665                           ;stkvar	___ftpack@sign @ sp[(0)+-5]
 12666  00362E  0EFB               	movlw	-5
 12667  003630  50E3               	movf	plusw1,w,c
 12668  003632  B4D8               	btfsc	status,2,c
 12669  003634  D002               	goto	l7025
 12670                           
 12671                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12672  003636  0EFF               	movlw	-1
 12673  003638  8EE3               	bsf	plusw1,7,c
 12674  00363A                     l7025:
 12675                           
 12676                           ;stkvar	___ftpack@arg @ sp[(0)+-3]
 12677  00363A  0EFD               	movlw	-3
 12678  00363C  CFE3 F03A          	movff	plusw1,btemp
 12679  003640  0EFE               	movlw	-2
 12680  003642  CFE3 F03B          	movff	plusw1,btemp+1
 12681  003646  0EFF               	movlw	-1
 12682  003648  CFE3 F03C          	movff	plusw1,btemp+2
 12683  00364C                     l973:
 12684                           
 12685                           ; ___ftpack: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 12686  00364C  0EFB               	movlw	251
 12687  00364E  26E1               	addwf	fsr1l,f,c
 12688  003650  0EFF               	movlw	255
 12689  003652  22E2               	addwfc	fsr1h,f,c
 12690  003654  0012               	return		;funcret
 12691  003656                     __end_of___ftpack:
 12692                           	opt stack 0
 12693                           tblptru	equ	0xFF8
 12694                           tblptrh	equ	0xFF7
 12695                           tblptrl	equ	0xFF6
 12696                           tablat	equ	0xFF5
 12697                           prodh	equ	0xFF4
 12698                           prodl	equ	0xFF3
 12699                           intcon	equ	0xFF2
 12700                           intcon2	equ	0xFF1
 12701                           indf0	equ	0xFEF
 12702                           postinc0	equ	0xFEE
 12703                           fsr0h	equ	0xFEA
 12704                           fsr0l	equ	0xFE9
 12705                           wreg	equ	0xFE8
 12706                           postinc1	equ	0xFE6
 12707                           postdec1	equ	0xFE5
 12708                           plusw1	equ	0xFE3
 12709                           fsr1h	equ	0xFE2
 12710                           fsr1l	equ	0xFE1
 12711                           indf2	equ	0xFDF
 12712                           postinc2	equ	0xFDE
 12713                           postdec2	equ	0xFDD
 12714                           fsr2h	equ	0xFDA
 12715                           fsr2l	equ	0xFD9
 12716                           status	equ	0xFD8
 12717                           
 12718 ;; *************** function ___ftneg *****************
 12719 ;; Defined at:
 12720 ;;		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/ftneg.c"
 12721 ;; Parameters:    Size  Location     Type
 12722 ;;  f1              3    0[BANK0 ] float 
 12723 ;; Auto vars:     Size  Location     Type
 12724 ;;		None
 12725 ;; Return value:  Size  Location     Type
 12726 ;;                  3    0[BANK0 ] float 
 12727 ;; Registers used:
 12728 ;;		wreg, status,2, status,0
 12729 ;; Tracked objects:
 12730 ;;		On entry : 0/0
 12731 ;;		On exit  : 0/0
 12732 ;;		Unchanged: 0/0
 12733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12734 ;;      Params:         0       3       0       0       0       0       0
 12735 ;;      Locals:         0       0       0       0       0       0       0
 12736 ;;      Temps:          0       0       0       0       0       0       0
 12737 ;;      Totals:         0       3       0       0       0       0       0
 12738 ;;Total ram usage:        3 bytes
 12739 ;; Hardware stack levels used:    1
 12740 ;; Hardware stack levels required when called:   10
 12741 ;; This function calls:
 12742 ;;		Nothing
 12743 ;; This function is called by:
 12744 ;;		_sprintf
 12745 ;; This function uses a non-reentrant model
 12746 ;;
 12747                           
 12748                           	psect	text32
 12749  0040FE                     __ptext32:
 12750                           	opt stack 0
 12751  0040FE                     ___ftneg:
 12752                           	opt stack 15
 12753                           
 12754                           ;incstack = 0
 12755  0040FE  0100               	movlb	0	; () banked
 12756  004100  5180               	movf	___ftneg@f1& (0+255),w,b
 12757  004102  0100               	movlb	0	; () banked
 12758  004104  1181               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 12759  004106  0100               	movlb	0	; () banked
 12760  004108  1182               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 12761  00410A  B4D8               	btfsc	status,2,c
 12762  00410C  D009               	goto	l1081
 12763                           
 12764                           ; BSR set to: 0
 12765  00410E  0E00               	movlw	0
 12766  004110  0100               	movlb	0	; () banked
 12767  004112  1B80               	xorwf	___ftneg@f1& (0+255),f,b
 12768  004114  0E00               	movlw	0
 12769  004116  0100               	movlb	0	; () banked
 12770  004118  1B81               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 12771  00411A  0E80               	movlw	128
 12772  00411C  0100               	movlb	0	; () banked
 12773  00411E  1B82               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 12774  004120                     l1081:
 12775                           
 12776                           ; BSR set to: 0
 12777  004120  C080  F080         	movff	___ftneg@f1,?___ftneg
 12778  004124  C081  F081         	movff	___ftneg@f1+1,?___ftneg+1
 12779  004128  C082  F082         	movff	___ftneg@f1+2,?___ftneg+2
 12780                           
 12781                           ; BSR set to: 0
 12782  00412C  0012               	return		;funcret
 12783  00412E                     __end_of___ftneg:
 12784                           	opt stack 0
 12785                           tblptru	equ	0xFF8
 12786                           tblptrh	equ	0xFF7
 12787                           tblptrl	equ	0xFF6
 12788                           tablat	equ	0xFF5
 12789                           prodh	equ	0xFF4
 12790                           prodl	equ	0xFF3
 12791                           intcon	equ	0xFF2
 12792                           intcon2	equ	0xFF1
 12793                           indf0	equ	0xFEF
 12794                           postinc0	equ	0xFEE
 12795                           fsr0h	equ	0xFEA
 12796                           fsr0l	equ	0xFE9
 12797                           wreg	equ	0xFE8
 12798                           postinc1	equ	0xFE6
 12799                           postdec1	equ	0xFE5
 12800                           plusw1	equ	0xFE3
 12801                           fsr1h	equ	0xFE2
 12802                           fsr1l	equ	0xFE1
 12803                           indf2	equ	0xFDF
 12804                           postinc2	equ	0xFDE
 12805                           postdec2	equ	0xFDD
 12806                           fsr2h	equ	0xFDA
 12807                           fsr2l	equ	0xFD9
 12808                           status	equ	0xFD8
 12809                           
 12810 ;; *************** function ___ftge *****************
 12811 ;; Defined at:
 12812 ;;		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/ftge.c"
 12813 ;; Parameters:    Size  Location     Type
 12814 ;;  ff1             3  [STACK] float 
 12815 ;;  ff2             3  [STACK] float 
 12816 ;; Auto vars:     Size  Location     Type
 12817 ;;		None
 12818 ;; Return value:  Size  Location     Type
 12819 ;;		None               void
 12820 ;; Registers used:
 12821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12822 ;; Tracked objects:
 12823 ;;		On entry : 0/0
 12824 ;;		On exit  : 0/0
 12825 ;;		Unchanged: 0/0
 12826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12827 ;;      Params:         0       0       0       0       0       0       0
 12828 ;;      Locals:         0       0       0       0       0       0       0
 12829 ;;      Temps:          0       0       0       0       0       0       0
 12830 ;;      Totals:         0       0       0       0       0       0       0
 12831 ;;Total ram usage:        0 bytes
 12832 ;; Hardware stack levels used:    1
 12833 ;; Hardware stack levels required when called:   10
 12834 ;; This function calls:
 12835 ;;		Nothing
 12836 ;; This function is called by:
 12837 ;;		_My_ISR_Low_TempSensor
 12838 ;;		_sprintf
 12839 ;; This function uses a reentrant model
 12840 ;;
 12841                           
 12842                           	psect	text33
 12843  0039BC                     __ptext33:
 12844                           	opt stack 0
 12845  0039BC                     ___ftge:
 12846                           	opt stack 11
 12847                           
 12848                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 12849                           
 12850                           ; BSR set to: 0
 12851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0
 12852                           ;incstack = 0
 12853  0039BC  0EFF               	movlw	-1
 12854  0039BE  AEE3               	btfss	plusw1,7,c
 12855  0039C0  D019               	goto	l5523
 12856                           
 12857                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 12858                           ;load constant 0x800000
 12859  0039C2  0E80               	movlw	128
 12860  0039C4  6E45               	movwf	btemp+11,c
 12861  0039C6  6A44               	clrf	btemp+10,c
 12862  0039C8  6A43               	clrf	btemp+9,c
 12863  0039CA  0EFD               	movlw	-3
 12864  0039CC  50E3               	movf	plusw1,w,c
 12865  0039CE  5C43               	subwf	btemp+9,w,c
 12866  0039D0  6E40               	movwf	btemp+6,c
 12867  0039D2  0EFE               	movlw	-2
 12868  0039D4  50E3               	movf	plusw1,w,c
 12869  0039D6  5844               	subwfb	btemp+10,w,c
 12870  0039D8  6E41               	movwf	btemp+7,c
 12871  0039DA  0EFF               	movlw	-1
 12872  0039DC  50E3               	movf	plusw1,w,c
 12873  0039DE  5845               	subwfb	btemp+11,w,c
 12874  0039E0  6E42               	movwf	btemp+8,c
 12875                           
 12876                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 12877  0039E2  0EFD               	movlw	-3
 12878  0039E4  C040  FFE3         	movff	btemp+6,plusw1
 12879  0039E8  0EFE               	movlw	-2
 12880  0039EA  C041  FFE3         	movff	btemp+7,plusw1
 12881  0039EE  0EFF               	movlw	-1
 12882  0039F0  C042  FFE3         	movff	btemp+8,plusw1
 12883  0039F4                     l5523:
 12884                           
 12885                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 12886  0039F4  0EFC               	movlw	-4
 12887  0039F6  AEE3               	btfss	plusw1,7,c
 12888  0039F8  D019               	goto	l5527
 12889                           
 12890                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 12891                           ;load constant 0x800000
 12892  0039FA  0E80               	movlw	128
 12893  0039FC  6E45               	movwf	btemp+11,c
 12894  0039FE  6A44               	clrf	btemp+10,c
 12895  003A00  6A43               	clrf	btemp+9,c
 12896  003A02  0EFA               	movlw	-6
 12897  003A04  50E3               	movf	plusw1,w,c
 12898  003A06  5C43               	subwf	btemp+9,w,c
 12899  003A08  6E40               	movwf	btemp+6,c
 12900  003A0A  0EFB               	movlw	-5
 12901  003A0C  50E3               	movf	plusw1,w,c
 12902  003A0E  5844               	subwfb	btemp+10,w,c
 12903  003A10  6E41               	movwf	btemp+7,c
 12904  003A12  0EFC               	movlw	-4
 12905  003A14  50E3               	movf	plusw1,w,c
 12906  003A16  5845               	subwfb	btemp+11,w,c
 12907  003A18  6E42               	movwf	btemp+8,c
 12908                           
 12909                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 12910  003A1A  0EFA               	movlw	-6
 12911  003A1C  C040  FFE3         	movff	btemp+6,plusw1
 12912  003A20  0EFB               	movlw	-5
 12913  003A22  C041  FFE3         	movff	btemp+7,plusw1
 12914  003A26  0EFC               	movlw	-4
 12915  003A28  C042  FFE3         	movff	btemp+8,plusw1
 12916  003A2C                     l5527:
 12917                           
 12918                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 12919  003A2C  0EFF               	movlw	-1
 12920  003A2E  7EE3               	btg	plusw1,7,c
 12921                           
 12922                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 12923  003A30  0EFC               	movlw	-4
 12924  003A32  7EE3               	btg	plusw1,7,c
 12925                           
 12926                           ;stkvar	___ftge@ff2 @ sp[(0)+-6]
 12927                           ;stkvar	___ftge@ff1 @ sp[(0)+-3]
 12928  003A34  50E1               	movf	fsr1l,w,c
 12929  003A36  0FFD               	addlw	-3
 12930  003A38  6ED9               	movwf	fsr2l,c
 12931  003A3A  50E2               	movf	fsr1h,w,c
 12932  003A3C  6EDA               	movwf	fsr2h,c
 12933  003A3E  0EFF               	movlw	255
 12934  003A40  22DA               	addwfc	fsr2h,f,c
 12935  003A42  0EFA               	movlw	-6
 12936  003A44  50E3               	movf	plusw1,w,c
 12937  003A46  5CDE               	subwf	postinc2,w,c
 12938  003A48  0EFB               	movlw	-5
 12939  003A4A  50E3               	movf	plusw1,w,c
 12940  003A4C  58DE               	subwfb	postinc2,w,c
 12941  003A4E  0EFC               	movlw	-4
 12942  003A50  50E3               	movf	plusw1,w,c
 12943  003A52  58DE               	subwfb	postinc2,w,c
 12944  003A54  B0D8               	btfsc	status,0,c
 12945  003A56  D002               	goto	l5535
 12946  003A58  903A               	bcf	btemp,0,c
 12947  003A5A  D001               	goto	l1065
 12948  003A5C                     l5535:
 12949  003A5C  803A               	bsf	btemp,0,c
 12950  003A5E                     l1065:
 12951                           
 12952                           ; ___ftge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 12953  003A5E  0EFA               	movlw	250
 12954  003A60  26E1               	addwf	fsr1l,f,c
 12955  003A62  0EFF               	movlw	255
 12956  003A64  22E2               	addwfc	fsr1h,f,c
 12957  003A66  0012               	return		;funcret
 12958  003A68                     __end_of___ftge:
 12959                           	opt stack 0
 12960                           tblptru	equ	0xFF8
 12961                           tblptrh	equ	0xFF7
 12962                           tblptrl	equ	0xFF6
 12963                           tablat	equ	0xFF5
 12964                           prodh	equ	0xFF4
 12965                           prodl	equ	0xFF3
 12966                           intcon	equ	0xFF2
 12967                           intcon2	equ	0xFF1
 12968                           indf0	equ	0xFEF
 12969                           postinc0	equ	0xFEE
 12970                           fsr0h	equ	0xFEA
 12971                           fsr0l	equ	0xFE9
 12972                           wreg	equ	0xFE8
 12973                           postinc1	equ	0xFE6
 12974                           postdec1	equ	0xFE5
 12975                           plusw1	equ	0xFE3
 12976                           fsr1h	equ	0xFE2
 12977                           fsr1l	equ	0xFE1
 12978                           indf2	equ	0xFDF
 12979                           postinc2	equ	0xFDE
 12980                           postdec2	equ	0xFDD
 12981                           fsr2h	equ	0xFDA
 12982                           fsr2l	equ	0xFD9
 12983                           status	equ	0xFD8
 12984                           
 12985 ;; *************** function _option_passcode *****************
 12986 ;; Defined at:
 12987 ;;		line 524 in file "FinalProject.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;		None
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;  i               2   11[BANK0 ] int 
 12992 ;;  i               2    9[BANK0 ] int 
 12993 ;;  my_correctPa    2    7[BANK0 ] int 
 12994 ;; Return value:  Size  Location     Type
 12995 ;;                  1    wreg      void 
 12996 ;; Registers used:
 12997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru, cstack
 12998 ;; Tracked objects:
 12999 ;;		On entry : 0/0
 13000 ;;		On exit  : 0/0
 13001 ;;		Unchanged: 0/0
 13002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13003 ;;      Params:         0       0       0       0       0       0       0
 13004 ;;      Locals:         0       6       0       0       0       0       0
 13005 ;;      Temps:          0       0       0       0       0       0       0
 13006 ;;      Totals:         0       6       0       0       0       0       0
 13007 ;;Total ram usage:        6 bytes
 13008 ;; Hardware stack levels used:    1
 13009 ;; Hardware stack levels required when called:   13
 13010 ;; This function calls:
 13011 ;;		_changePassword
 13012 ;;		_choiceKeypad
 13013 ;;		_halfSecDelay
 13014 ;;		_initialScreen
 13015 ;;		_my_print
 13016 ;;		_reception
 13017 ;;		_write_EEPROM
 13018 ;; This function is called by:
 13019 ;;		_mainScreen
 13020 ;; This function uses a non-reentrant model
 13021 ;;
 13022                           
 13023                           	psect	text34
 13024  0019F8                     __ptext34:
 13025                           	opt stack 0
 13026  0019F8                     _option_passcode:
 13027                           	opt stack 13
 13028  0019F8                     
 13029                           ;FinalProject.c: 527: {
 13030                           ;FinalProject.c: 528: initialScreen();
 13031  0019F8  ECFC  F01F         	call	_initialScreen	;wreg free
 13032                           
 13033                           ;FinalProject.c: 529: my_print("\n\r*********         Passcode Menu               ******
      +                          ********");
 13034  0019FC  0E47               	movlw	low STR_41
 13035  0019FE  6EE6               	movwf	postinc1,c
 13036  001A00  0E78               	movlw	high STR_41
 13037  001A02  6EE6               	movwf	postinc1,c
 13038  001A04  ECF8  F01E         	call	_my_print	;wreg free
 13039                           
 13040                           ;FinalProject.c: 530: my_print("\n\rSelect One of the Following:");
 13041  001A08  0E1E               	movlw	low STR_32
 13042  001A0A  6EE6               	movwf	postinc1,c
 13043  001A0C  0E7E               	movlw	high STR_32
 13044  001A0E  6EE6               	movwf	postinc1,c
 13045  001A10  ECF8  F01E         	call	_my_print	;wreg free
 13046                           
 13047                           ;FinalProject.c: 531: my_print("\n\r                 1.Change passcode");
 13048  001A14  0E5C               	movlw	low STR_43
 13049  001A16  6EE6               	movwf	postinc1,c
 13050  001A18  0E7C               	movlw	high STR_43
 13051  001A1A  6EE6               	movwf	postinc1,c
 13052  001A1C  ECF8  F01E         	call	_my_print	;wreg free
 13053                           
 13054                           ;FinalProject.c: 532: my_print("\n\r                 0.Return to Main Menu");
 13055  001A20  0EBC               	movlw	low STR_44
 13056  001A22  6EE6               	movwf	postinc1,c
 13057  001A24  0E7B               	movlw	high STR_44
 13058  001A26  6EE6               	movwf	postinc1,c
 13059  001A28  ECF8  F01E         	call	_my_print	;wreg free
 13060                           
 13061                           ;FinalProject.c: 534: my_print("\n\rInput: ");
 13062  001A2C  0ECD               	movlw	low STR_39
 13063  001A2E  6EE6               	movwf	postinc1,c
 13064  001A30  0E7F               	movlw	high STR_39
 13065  001A32  6EE6               	movwf	postinc1,c
 13066  001A34  ECF8  F01E         	call	_my_print	;wreg free
 13067                           
 13068                           ;FinalProject.c: 535: halfSecDelay();
 13069  001A38  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13070                           
 13071                           ;FinalProject.c: 538: if(PORTBbits.RB4 == 1)
 13072  001A3C  A881               	btfss	3969,4,c	;volatile
 13073  001A3E  D013               	goto	l6429
 13074                           
 13075                           ;FinalProject.c: 539: {
 13076                           ;FinalProject.c: 540: choiceKeypad();
 13077  001A40  EC85  F01D         	call	_choiceKeypad	;wreg free
 13078  001A44                     l291:
 13079  001A44  A2AC               	btfss	4012,1,c	;volatile
 13080  001A46  D7FE               	goto	l291
 13081                           
 13082                           ;FinalProject.c: 542: TXREG = keypadValue;
 13083  001A48  C0E0  FFAD         	movff	_keypadValue,4013	;volatile
 13084                           
 13085                           ;FinalProject.c: 543: choice = keypadValue;
 13086  001A4C  C0E0  F0DF         	movff	_keypadValue,_choice
 13087                           
 13088                           ;FinalProject.c: 544: halfSecDelay();
 13089  001A50  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13090                           
 13091                           ;FinalProject.c: 545: while(keypadValue != 'A'){
 13092  001A54  D002               	goto	l6427
 13093  001A56                     l6425:
 13094                           
 13095                           ;FinalProject.c: 546: choiceKeypad();
 13096  001A56  EC85  F01D         	call	_choiceKeypad	;wreg free
 13097  001A5A                     l6427:
 13098  001A5A  0E41               	movlw	65
 13099  001A5C  0100               	movlb	0	; () banked
 13100  001A5E  19E0               	xorwf	_keypadValue& (0+255),w,b
 13101  001A60  B4D8               	btfsc	status,2,c
 13102  001A62  D00E               	goto	l6433
 13103  001A64  D7F8               	goto	l6425
 13104  001A66                     l6429:
 13105                           
 13106                           ;FinalProject.c: 549: else
 13107                           ;FinalProject.c: 550: {
 13108                           ;FinalProject.c: 551: choice = reception();
 13109  001A66  ECF3  F020         	call	_reception	;wreg free
 13110  001A6A  503A               	movf	btemp,w,c
 13111  001A6C  0100               	movlb	0	; () banked
 13112  001A6E  6FDF               	movwf	_choice& (0+255),b
 13113  001A70                     l298:
 13114  001A70  A2AC               	btfss	4012,1,c	;volatile
 13115  001A72  D7FE               	goto	l298
 13116                           
 13117                           ;FinalProject.c: 553: TXREG = choice;
 13118  001A74  C0DF  FFAD         	movff	_choice,4013	;volatile
 13119  001A78                     l6431:
 13120  001A78  0E0D               	movlw	13
 13121  001A7A  18AE               	xorwf	4014,w,c	;volatile
 13122  001A7C  A4D8               	btfss	status,2,c
 13123  001A7E  D7FC               	goto	l6431
 13124  001A80                     l6433:
 13125                           
 13126                           ;FinalProject.c: 555: }
 13127                           ;FinalProject.c: 557: flag = 0;
 13128  001A80  0E00               	movlw	0
 13129  001A82  0100               	movlb	0	; () banked
 13130  001A84  6FDC               	movwf	(_flag+1)& (0+255),b
 13131  001A86  0E00               	movlw	0
 13132  001A88  6FDB               	movwf	_flag& (0+255),b
 13133                           
 13134                           ; BSR set to: 0
 13135                           ;FinalProject.c: 558: if (choice == '0')
 13136  001A8A  0E30               	movlw	48
 13137  001A8C  0100               	movlb	0	; () banked
 13138  001A8E  19DF               	xorwf	_choice& (0+255),w,b
 13139  001A90  B4D8               	btfsc	status,2,c
 13140  001A92  D129               	goto	l6563
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;FinalProject.c: 561: else if(choice == '1')
 13144                           
 13145                           ; BSR set to: 0
 13146                           
 13147                           ; BSR set to: 0
 13148                           ;FinalProject.c: 559: {
 13149                           ;FinalProject.c: 560: }
 13150  001A94  0E31               	movlw	49
 13151  001A96  0100               	movlb	0	; () banked
 13152  001A98  19DF               	xorwf	_choice& (0+255),w,b
 13153  001A9A  A4D8               	btfss	status,2,c
 13154  001A9C  D115               	goto	l6555
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;FinalProject.c: 562: {
 13158                           ;FinalProject.c: 563: my_print("\n\rEnter Current Passcode:");
 13159  001A9E  0EE7               	movlw	low STR_46
 13160  001AA0  6EE6               	movwf	postinc1,c
 13161  001AA2  0E7E               	movlw	high STR_46
 13162  001AA4  6EE6               	movwf	postinc1,c
 13163  001AA6  ECF8  F01E         	call	_my_print	;wreg free
 13164                           
 13165                           ;FinalProject.c: 564: halfSecDelay();
 13166  001AAA  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13167                           
 13168                           ;FinalProject.c: 566: int i;
 13169                           ;FinalProject.c: 568: if(PORTBbits.RB4 == 1)
 13170  001AAE  A881               	btfss	3969,4,c	;volatile
 13171  001AB0  D030               	goto	l6469
 13172                           
 13173                           ;FinalProject.c: 569: {
 13174                           ;FinalProject.c: 570: for(i=0; i<4; i++)
 13175  001AB2  0E00               	movlw	0
 13176  001AB4  0100               	movlb	0	; () banked
 13177  001AB6  6F8A               	movwf	(option_passcode@i+1)& (0+255),b
 13178  001AB8  0E00               	movlw	0
 13179  001ABA  6F89               	movwf	option_passcode@i& (0+255),b
 13180  001ABC                     l6449:
 13181                           
 13182                           ; BSR set to: 0
 13183  001ABC  0100               	movlb	0	; () banked
 13184  001ABE  BF8A               	btfsc	(option_passcode@i+1)& (0+255),7,b
 13185  001AC0  D008               	goto	l6453
 13186  001AC2  0100               	movlb	0	; () banked
 13187  001AC4  518A               	movf	(option_passcode@i+1)& (0+255),w,b
 13188  001AC6  E11F               	bnz	l6467
 13189  001AC8  0E04               	movlw	4
 13190  001ACA  0100               	movlb	0	; () banked
 13191  001ACC  5D89               	subwf	option_passcode@i& (0+255),w,b
 13192  001ACE  B0D8               	btfsc	status,0,c
 13193  001AD0  D01A               	goto	l6467
 13194  001AD2                     l6453:
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;FinalProject.c: 571: {
 13198                           ;FinalProject.c: 572: choiceKeypad();
 13199  001AD2  EC85  F01D         	call	_choiceKeypad	;wreg free
 13200                           
 13201                           ;FinalProject.c: 573: tempPass[i] = keypadValue;
 13202  001AD6  0ED2               	movlw	low _tempPass
 13203  001AD8  0100               	movlb	0	; () banked
 13204  001ADA  2589               	addwf	option_passcode@i& (0+255),w,b
 13205  001ADC  6ED9               	movwf	fsr2l,c
 13206  001ADE  0E00               	movlw	high _tempPass
 13207  001AE0  0100               	movlb	0	; () banked
 13208  001AE2  218A               	addwfc	(option_passcode@i+1)& (0+255),w,b
 13209  001AE4  6EDA               	movwf	fsr2h,c
 13210  001AE6  C0E0  FFDF         	movff	_keypadValue,indf2
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;FinalProject.c: 574: halfSecDelay();
 13214  001AEA  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13215                           
 13216                           ;FinalProject.c: 575: my_print("*");
 13217  001AEE  0E49               	movlw	low (STR_16+61)
 13218  001AF0  6EE6               	movwf	postinc1,c
 13219  001AF2  0E77               	movlw	high (STR_16+61)
 13220  001AF4  6EE6               	movwf	postinc1,c
 13221  001AF6  ECF8  F01E         	call	_my_print	;wreg free
 13222  001AFA  0100               	movlb	0	; () banked
 13223  001AFC  4B89               	infsnz	option_passcode@i& (0+255),f,b
 13224  001AFE  2B8A               	incf	(option_passcode@i+1)& (0+255),f,b
 13225  001B00  D7DD               	goto	l6449
 13226  001B02                     l6465:
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;FinalProject.c: 579: choiceKeypad();
 13230  001B02  EC85  F01D         	call	_choiceKeypad	;wreg free
 13231  001B06                     l6467:
 13232  001B06  0E41               	movlw	65
 13233  001B08  0100               	movlb	0	; () banked
 13234  001B0A  19E0               	xorwf	_keypadValue& (0+255),w,b
 13235  001B0C  B4D8               	btfsc	status,2,c
 13236  001B0E  D02B               	goto	l6485
 13237  001B10  D7F8               	goto	l6465
 13238  001B12                     l6469:
 13239                           
 13240                           ;FinalProject.c: 582: else
 13241                           ;FinalProject.c: 583: {
 13242                           ;FinalProject.c: 584: for(i=0; i<4; i++)
 13243  001B12  0E00               	movlw	0
 13244  001B14  0100               	movlb	0	; () banked
 13245  001B16  6F8A               	movwf	(option_passcode@i+1)& (0+255),b
 13246  001B18  0E00               	movlw	0
 13247  001B1A  6F89               	movwf	option_passcode@i& (0+255),b
 13248  001B1C                     l6471:
 13249                           
 13250                           ; BSR set to: 0
 13251  001B1C  0100               	movlb	0	; () banked
 13252  001B1E  BF8A               	btfsc	(option_passcode@i+1)& (0+255),7,b
 13253  001B20  D008               	goto	l6475
 13254  001B22  0100               	movlb	0	; () banked
 13255  001B24  518A               	movf	(option_passcode@i+1)& (0+255),w,b
 13256  001B26  E11B               	bnz	l6483
 13257  001B28  0E04               	movlw	4
 13258  001B2A  0100               	movlb	0	; () banked
 13259  001B2C  5D89               	subwf	option_passcode@i& (0+255),w,b
 13260  001B2E  B0D8               	btfsc	status,0,c
 13261  001B30  D016               	goto	l6483
 13262  001B32                     l6475:
 13263                           
 13264                           ; BSR set to: 0
 13265                           ;FinalProject.c: 585: {
 13266                           ;FinalProject.c: 586: tempPass[i] = reception();
 13267  001B32  0ED2               	movlw	low _tempPass
 13268  001B34  0100               	movlb	0	; () banked
 13269  001B36  2589               	addwf	option_passcode@i& (0+255),w,b
 13270  001B38  6ED9               	movwf	fsr2l,c
 13271  001B3A  0E00               	movlw	high _tempPass
 13272  001B3C  0100               	movlb	0	; () banked
 13273  001B3E  218A               	addwfc	(option_passcode@i+1)& (0+255),w,b
 13274  001B40  6EDA               	movwf	fsr2h,c
 13275  001B42  ECF3  F020         	call	_reception	;wreg free
 13276  001B46  503A               	movf	btemp,w,c
 13277  001B48  6EDF               	movwf	indf2,c
 13278                           
 13279                           ;FinalProject.c: 587: my_print("*");
 13280  001B4A  0E49               	movlw	low (STR_16+61)
 13281  001B4C  6EE6               	movwf	postinc1,c
 13282  001B4E  0E77               	movlw	high (STR_16+61)
 13283  001B50  6EE6               	movwf	postinc1,c
 13284  001B52  ECF8  F01E         	call	_my_print	;wreg free
 13285  001B56  0100               	movlb	0	; () banked
 13286  001B58  4B89               	infsnz	option_passcode@i& (0+255),f,b
 13287  001B5A  2B8A               	incf	(option_passcode@i+1)& (0+255),f,b
 13288  001B5C  D7DF               	goto	l6471
 13289  001B5E                     l6483:
 13290  001B5E  0E0D               	movlw	13
 13291  001B60  18AE               	xorwf	4014,w,c	;volatile
 13292  001B62  A4D8               	btfss	status,2,c
 13293  001B64  D7FC               	goto	l6483
 13294  001B66                     l6485:
 13295                           
 13296                           ;FinalProject.c: 591: }
 13297                           ;FinalProject.c: 596: int my_correctPassword = changePassword();
 13298  001B66  ECB5  F01E         	call	_changePassword	;wreg free
 13299  001B6A  C080  F087         	movff	?_changePassword,option_passcode@my_correctPassword
 13300  001B6E  C081  F088         	movff	?_changePassword+1,option_passcode@my_correctPassword+1
 13301                           
 13302                           ;FinalProject.c: 598: if(my_correctPassword == 1)
 13303  001B72  0100               	movlb	0	; () banked
 13304  001B74  0587               	decf	option_passcode@my_correctPassword& (0+255),w,b
 13305  001B76  0100               	movlb	0	; () banked
 13306  001B78  1188               	iorwf	(option_passcode@my_correctPassword+1)& (0+255),w,b
 13307  001B7A  A4D8               	btfss	status,2,c
 13308  001B7C  D09A               	goto	l6549
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;FinalProject.c: 599: {
 13312                           ;FinalProject.c: 600: my_print("\r\nEnter new 4 digit password: ");
 13313  001B7E  0EFF               	movlw	low STR_49
 13314  001B80  6EE6               	movwf	postinc1,c
 13315  001B82  0E7D               	movlw	high STR_49
 13316  001B84  6EE6               	movwf	postinc1,c
 13317  001B86  ECF8  F01E         	call	_my_print	;wreg free
 13318                           
 13319                           ;FinalProject.c: 601: halfSecDelay();
 13320  001B8A  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13321                           
 13322                           ;FinalProject.c: 603: int i;
 13323                           ;FinalProject.c: 604: addr = 0x00;
 13324  001B8E  0E00               	movlw	0
 13325  001B90  0100               	movlb	0	; () banked
 13326  001B92  6FDA               	movwf	(_addr+1)& (0+255),b
 13327  001B94  0E00               	movlw	0
 13328  001B96  6FD9               	movwf	_addr& (0+255),b
 13329                           
 13330                           ; BSR set to: 0
 13331                           ;FinalProject.c: 606: if(PORTBbits.RB4 == 1)
 13332  001B98  A881               	btfss	3969,4,c	;volatile
 13333  001B9A  D043               	goto	l6523
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;FinalProject.c: 607: {
 13337                           ;FinalProject.c: 608: for(i=0; i<4; i++)
 13338  001B9C  0E00               	movlw	0
 13339  001B9E  0100               	movlb	0	; () banked
 13340  001BA0  6F8C               	movwf	(option_passcode@i_1127+1)& (0+255),b
 13341  001BA2  0E00               	movlw	0
 13342  001BA4  6F8B               	movwf	option_passcode@i_1127& (0+255),b
 13343  001BA6                     l6499:
 13344                           
 13345                           ; BSR set to: 0
 13346  001BA6  0100               	movlb	0	; () banked
 13347  001BA8  BF8C               	btfsc	(option_passcode@i_1127+1)& (0+255),7,b
 13348  001BAA  D008               	goto	l6503
 13349  001BAC  0100               	movlb	0	; () banked
 13350  001BAE  518C               	movf	(option_passcode@i_1127+1)& (0+255),w,b
 13351  001BB0  E132               	bnz	l6521
 13352  001BB2  0E04               	movlw	4
 13353  001BB4  0100               	movlb	0	; () banked
 13354  001BB6  5D8B               	subwf	option_passcode@i_1127& (0+255),w,b
 13355  001BB8  B0D8               	btfsc	status,0,c
 13356  001BBA  D02D               	goto	l6521
 13357  001BBC                     l6503:
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;FinalProject.c: 609: {
 13361                           ;FinalProject.c: 610: choiceKeypad();
 13362  001BBC  EC85  F01D         	call	_choiceKeypad	;wreg free
 13363                           
 13364                           ;FinalProject.c: 611: pass[i] = keypadValue;
 13365  001BC0  0ECE               	movlw	low _pass
 13366  001BC2  0100               	movlb	0	; () banked
 13367  001BC4  258B               	addwf	option_passcode@i_1127& (0+255),w,b
 13368  001BC6  6ED9               	movwf	fsr2l,c
 13369  001BC8  0E00               	movlw	high _pass
 13370  001BCA  0100               	movlb	0	; () banked
 13371  001BCC  218C               	addwfc	(option_passcode@i_1127+1)& (0+255),w,b
 13372  001BCE  6EDA               	movwf	fsr2h,c
 13373  001BD0  C0E0  FFDF         	movff	_keypadValue,indf2
 13374                           
 13375                           ; BSR set to: 0
 13376                           ;FinalProject.c: 612: halfSecDelay();
 13377  001BD4  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13378                           
 13379                           ;FinalProject.c: 613: my_print("*");
 13380  001BD8  0E49               	movlw	low (STR_16+61)
 13381  001BDA  6EE6               	movwf	postinc1,c
 13382  001BDC  0E77               	movlw	high (STR_16+61)
 13383  001BDE  6EE6               	movwf	postinc1,c
 13384  001BE0  ECF8  F01E         	call	_my_print	;wreg free
 13385                           
 13386                           ;FinalProject.c: 614: write_EEPROM(addr, pass[i]);
 13387  001BE4  0ECE               	movlw	low _pass
 13388  001BE6  0100               	movlb	0	; () banked
 13389  001BE8  258B               	addwf	option_passcode@i_1127& (0+255),w,b
 13390  001BEA  6ED9               	movwf	fsr2l,c
 13391  001BEC  0E00               	movlw	high _pass
 13392  001BEE  0100               	movlb	0	; () banked
 13393  001BF0  218C               	addwfc	(option_passcode@i_1127+1)& (0+255),w,b
 13394  001BF2  6EDA               	movwf	fsr2h,c
 13395  001BF4  50DF               	movf	indf2,w,c
 13396  001BF6  6EE6               	movwf	postinc1,c
 13397  001BF8  C0D9  FFE6         	movff	_addr,postinc1
 13398  001BFC  C0DA  FFE6         	movff	_addr+1,postinc1
 13399  001C00  EC97  F020         	call	_write_EEPROM	;wreg free
 13400                           
 13401                           ;FinalProject.c: 615: addr++;
 13402  001C04  0100               	movlb	0	; () banked
 13403  001C06  4BD9               	infsnz	_addr& (0+255),f,b
 13404  001C08  2BDA               	incf	(_addr+1)& (0+255),f,b
 13405                           
 13406                           ; BSR set to: 0
 13407  001C0A  0100               	movlb	0	; () banked
 13408  001C0C  4B8B               	infsnz	option_passcode@i_1127& (0+255),f,b
 13409  001C0E  2B8C               	incf	(option_passcode@i_1127+1)& (0+255),f,b
 13410  001C10  D7CA               	goto	l6499
 13411  001C12                     l6519:
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;FinalProject.c: 618: choiceKeypad();
 13415  001C12  EC85  F01D         	call	_choiceKeypad	;wreg free
 13416  001C16                     l6521:
 13417  001C16  0E41               	movlw	65
 13418  001C18  0100               	movlb	0	; () banked
 13419  001C1A  19E0               	xorwf	_keypadValue& (0+255),w,b
 13420  001C1C  B4D8               	btfsc	status,2,c
 13421  001C1E  D03E               	goto	l6543
 13422  001C20  D7F8               	goto	l6519
 13423  001C22                     l6523:
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;FinalProject.c: 621: else
 13427                           ;FinalProject.c: 622: {
 13428                           ;FinalProject.c: 623: for(i=0; i<4; i++)
 13429  001C22  0E00               	movlw	0
 13430  001C24  0100               	movlb	0	; () banked
 13431  001C26  6F8C               	movwf	(option_passcode@i_1127+1)& (0+255),b
 13432  001C28  0E00               	movlw	0
 13433  001C2A  6F8B               	movwf	option_passcode@i_1127& (0+255),b
 13434  001C2C                     l6525:
 13435                           
 13436                           ; BSR set to: 0
 13437  001C2C  0100               	movlb	0	; () banked
 13438  001C2E  BF8C               	btfsc	(option_passcode@i_1127+1)& (0+255),7,b
 13439  001C30  D008               	goto	l6529
 13440  001C32  0100               	movlb	0	; () banked
 13441  001C34  518C               	movf	(option_passcode@i_1127+1)& (0+255),w,b
 13442  001C36  E12E               	bnz	l6541
 13443  001C38  0E04               	movlw	4
 13444  001C3A  0100               	movlb	0	; () banked
 13445  001C3C  5D8B               	subwf	option_passcode@i_1127& (0+255),w,b
 13446  001C3E  B0D8               	btfsc	status,0,c
 13447  001C40  D029               	goto	l6541
 13448  001C42                     l6529:
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;FinalProject.c: 624: {
 13452                           ;FinalProject.c: 625: pass[i] = reception();
 13453  001C42  0ECE               	movlw	low _pass
 13454  001C44  0100               	movlb	0	; () banked
 13455  001C46  258B               	addwf	option_passcode@i_1127& (0+255),w,b
 13456  001C48  6ED9               	movwf	fsr2l,c
 13457  001C4A  0E00               	movlw	high _pass
 13458  001C4C  0100               	movlb	0	; () banked
 13459  001C4E  218C               	addwfc	(option_passcode@i_1127+1)& (0+255),w,b
 13460  001C50  6EDA               	movwf	fsr2h,c
 13461  001C52  ECF3  F020         	call	_reception	;wreg free
 13462  001C56  503A               	movf	btemp,w,c
 13463  001C58  6EDF               	movwf	indf2,c
 13464                           
 13465                           ;FinalProject.c: 626: my_print("*");
 13466  001C5A  0E49               	movlw	low (STR_16+61)
 13467  001C5C  6EE6               	movwf	postinc1,c
 13468  001C5E  0E77               	movlw	high (STR_16+61)
 13469  001C60  6EE6               	movwf	postinc1,c
 13470  001C62  ECF8  F01E         	call	_my_print	;wreg free
 13471                           
 13472                           ;FinalProject.c: 627: write_EEPROM(addr, pass[i]);
 13473  001C66  0ECE               	movlw	low _pass
 13474  001C68  0100               	movlb	0	; () banked
 13475  001C6A  258B               	addwf	option_passcode@i_1127& (0+255),w,b
 13476  001C6C  6ED9               	movwf	fsr2l,c
 13477  001C6E  0E00               	movlw	high _pass
 13478  001C70  0100               	movlb	0	; () banked
 13479  001C72  218C               	addwfc	(option_passcode@i_1127+1)& (0+255),w,b
 13480  001C74  6EDA               	movwf	fsr2h,c
 13481  001C76  50DF               	movf	indf2,w,c
 13482  001C78  6EE6               	movwf	postinc1,c
 13483  001C7A  C0D9  FFE6         	movff	_addr,postinc1
 13484  001C7E  C0DA  FFE6         	movff	_addr+1,postinc1
 13485  001C82  EC97  F020         	call	_write_EEPROM	;wreg free
 13486                           
 13487                           ;FinalProject.c: 628: addr++;
 13488  001C86  0100               	movlb	0	; () banked
 13489  001C88  4BD9               	infsnz	_addr& (0+255),f,b
 13490  001C8A  2BDA               	incf	(_addr+1)& (0+255),f,b
 13491                           
 13492                           ; BSR set to: 0
 13493  001C8C  0100               	movlb	0	; () banked
 13494  001C8E  4B8B               	infsnz	option_passcode@i_1127& (0+255),f,b
 13495  001C90  2B8C               	incf	(option_passcode@i_1127+1)& (0+255),f,b
 13496  001C92  D7CC               	goto	l6525
 13497  001C94                     l6541:
 13498  001C94  0E0D               	movlw	13
 13499  001C96  18AE               	xorwf	4014,w,c	;volatile
 13500  001C98  A4D8               	btfss	status,2,c
 13501  001C9A  D7FC               	goto	l6541
 13502  001C9C                     l6543:
 13503                           
 13504                           ;FinalProject.c: 631: }
 13505                           ;FinalProject.c: 635: my_print("\r\nYour Password has been changed!\n\r");
 13506  001C9C  0E81               	movlw	low STR_52
 13507  001C9E  6EE6               	movwf	postinc1,c
 13508  001CA0  0E7C               	movlw	high STR_52
 13509  001CA2  6EE6               	movwf	postinc1,c
 13510  001CA4  ECF8  F01E         	call	_my_print	;wreg free
 13511                           
 13512                           ;FinalProject.c: 636: halfSecDelay();
 13513  001CA8  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13514                           
 13515                           ;FinalProject.c: 637: halfSecDelay();
 13516  001CAC  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13517                           
 13518                           ;FinalProject.c: 643: }
 13519  001CB0  D01A               	goto	l6563
 13520  001CB2                     l6549:
 13521                           
 13522                           ;FinalProject.c: 645: else
 13523                           ;FinalProject.c: 646: {
 13524                           ;FinalProject.c: 647: my_print("\n\rIncorrect Password. Cannot change password.\n\r");
 13525  001CB2  0E84               	movlw	low STR_53
 13526  001CB4  6EE6               	movwf	postinc1,c
 13527  001CB6  0E7A               	movlw	high STR_53
 13528  001CB8  6EE6               	movwf	postinc1,c
 13529  001CBA  ECF8  F01E         	call	_my_print	;wreg free
 13530                           
 13531                           ;FinalProject.c: 648: halfSecDelay();
 13532  001CBE  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13533                           
 13534                           ;FinalProject.c: 649: halfSecDelay();
 13535  001CC2  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13536                           
 13537                           ;FinalProject.c: 652: }
 13538                           ;FinalProject.c: 657: }
 13539  001CC6  D00F               	goto	l6563
 13540  001CC8                     l6555:
 13541                           
 13542                           ;FinalProject.c: 658: else
 13543                           ;FinalProject.c: 659: {
 13544                           ;FinalProject.c: 660: my_print("Invalid Selection\n\r");
 13545  001CC8  0EA5               	movlw	low STR_54
 13546  001CCA  6EE6               	movwf	postinc1,c
 13547  001CCC  0E7F               	movlw	high STR_54
 13548  001CCE  6EE6               	movwf	postinc1,c
 13549  001CD0  ECF8  F01E         	call	_my_print	;wreg free
 13550                           
 13551                           ;FinalProject.c: 661: halfSecDelay();
 13552  001CD4  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13553                           
 13554                           ;FinalProject.c: 662: halfSecDelay();
 13555  001CD8  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13556                           
 13557                           ;FinalProject.c: 663: flag = 1;
 13558  001CDC  0E00               	movlw	0
 13559  001CDE  0100               	movlb	0	; () banked
 13560  001CE0  6FDC               	movwf	(_flag+1)& (0+255),b
 13561  001CE2  0E01               	movlw	1
 13562  001CE4  6FDB               	movwf	_flag& (0+255),b
 13563  001CE6                     l6563:
 13564                           
 13565                           ;FinalProject.c: 664: }
 13566                           ;FinalProject.c: 666: }while(flag == 1);
 13567  001CE6  0100               	movlb	0	; () banked
 13568  001CE8  05DB               	decf	_flag& (0+255),w,b
 13569  001CEA  0100               	movlb	0	; () banked
 13570  001CEC  11DC               	iorwf	(_flag+1)& (0+255),w,b
 13571  001CEE  A4D8               	btfss	status,2,c
 13572  001CF0  0012               	return	
 13573  001CF2  D682               	goto	l6415
 13574  001CF4                     __end_of_option_passcode:
 13575                           	opt stack 0
 13576                           tblptru	equ	0xFF8
 13577                           tblptrh	equ	0xFF7
 13578                           tblptrl	equ	0xFF6
 13579                           tablat	equ	0xFF5
 13580                           prodh	equ	0xFF4
 13581                           prodl	equ	0xFF3
 13582                           intcon	equ	0xFF2
 13583                           intcon2	equ	0xFF1
 13584                           indf0	equ	0xFEF
 13585                           postinc0	equ	0xFEE
 13586                           fsr0h	equ	0xFEA
 13587                           fsr0l	equ	0xFE9
 13588                           wreg	equ	0xFE8
 13589                           postinc1	equ	0xFE6
 13590                           postdec1	equ	0xFE5
 13591                           plusw1	equ	0xFE3
 13592                           fsr1h	equ	0xFE2
 13593                           fsr1l	equ	0xFE1
 13594                           indf2	equ	0xFDF
 13595                           postinc2	equ	0xFDE
 13596                           postdec2	equ	0xFDD
 13597                           fsr2h	equ	0xFDA
 13598                           fsr2l	equ	0xFD9
 13599                           status	equ	0xFD8
 13600                           
 13601 ;; *************** function _changePassword *****************
 13602 ;; Defined at:
 13603 ;;		line 1344 in file "FinalProject.c"
 13604 ;; Parameters:    Size  Location     Type
 13605 ;;		None
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;  i               2    5[BANK0 ] int 
 13608 ;;  a_correctPas    2    3[BANK0 ] int 
 13609 ;; Return value:  Size  Location     Type
 13610 ;;                  2    0[BANK0 ] int 
 13611 ;; Registers used:
 13612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13613 ;; Tracked objects:
 13614 ;;		On entry : 0/0
 13615 ;;		On exit  : 0/0
 13616 ;;		Unchanged: 0/0
 13617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13618 ;;      Params:         0       2       0       0       0       0       0
 13619 ;;      Locals:         0       4       0       0       0       0       0
 13620 ;;      Temps:          0       1       0       0       0       0       0
 13621 ;;      Totals:         0       7       0       0       0       0       0
 13622 ;;Total ram usage:        7 bytes
 13623 ;; Hardware stack levels used:    1
 13624 ;; Hardware stack levels required when called:   11
 13625 ;; This function calls:
 13626 ;;		_read_EEPROM
 13627 ;; This function is called by:
 13628 ;;		_option_passcode
 13629 ;; This function uses a non-reentrant model
 13630 ;;
 13631                           
 13632                           	psect	text35
 13633  003D6A                     __ptext35:
 13634                           	opt stack 0
 13635  003D6A                     _changePassword:
 13636                           	opt stack 14
 13637                           
 13638                           ;FinalProject.c: 1346: int i;
 13639                           ;FinalProject.c: 1347: int a_correctPassword = 1;
 13640                           
 13641                           ; BSR set to: 0
 13642                           ;incstack = 0
 13643  003D6A  0E00               	movlw	0
 13644  003D6C  0100               	movlb	0	; () banked
 13645  003D6E  6F84               	movwf	(changePassword@a_correctPassword+1)& (0+255),b
 13646  003D70  0E01               	movlw	1
 13647  003D72  6F83               	movwf	changePassword@a_correctPassword& (0+255),b
 13648                           
 13649                           ;FinalProject.c: 1348: for(i = 0, addr = 0x00; i < 4; addr++,i++)
 13650  003D74  0E00               	movlw	0
 13651  003D76  0100               	movlb	0	; () banked
 13652  003D78  6F86               	movwf	(changePassword@i+1)& (0+255),b
 13653  003D7A  0E00               	movlw	0
 13654  003D7C  6F85               	movwf	changePassword@i& (0+255),b
 13655  003D7E  0E00               	movlw	0
 13656  003D80  0100               	movlb	0	; () banked
 13657  003D82  6FDA               	movwf	(_addr+1)& (0+255),b
 13658  003D84  0E00               	movlw	0
 13659  003D86  6FD9               	movwf	_addr& (0+255),b
 13660                           
 13661                           ; BSR set to: 0
 13662  003D88  0100               	movlb	0	; () banked
 13663  003D8A  BF86               	btfsc	(changePassword@i+1)& (0+255),7,b
 13664  003D8C  D008               	goto	l5933
 13665  003D8E  0100               	movlb	0	; () banked
 13666  003D90  5186               	movf	(changePassword@i+1)& (0+255),w,b
 13667  003D92  E129               	bnz	l541
 13668  003D94  0E04               	movlw	4
 13669  003D96  0100               	movlb	0	; () banked
 13670  003D98  5D85               	subwf	changePassword@i& (0+255),w,b
 13671  003D9A  B0D8               	btfsc	status,0,c
 13672  003D9C  D024               	goto	l541
 13673  003D9E                     l5933:
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;FinalProject.c: 1349: {
 13677                           ;FinalProject.c: 1350: if(read_EEPROM(addr) == tempPass[i])
 13678  003D9E  0ED2               	movlw	low _tempPass
 13679  003DA0  0100               	movlb	0	; () banked
 13680  003DA2  2585               	addwf	changePassword@i& (0+255),w,b
 13681  003DA4  6ED9               	movwf	fsr2l,c
 13682  003DA6  0E00               	movlw	high _tempPass
 13683  003DA8  0100               	movlb	0	; () banked
 13684  003DAA  2186               	addwfc	(changePassword@i+1)& (0+255),w,b
 13685  003DAC  6EDA               	movwf	fsr2h,c
 13686  003DAE  C0D9  FFE6         	movff	_addr,postinc1
 13687  003DB2  C0DA  FFE6         	movff	_addr+1,postinc1
 13688  003DB6  ECE8  F020         	call	_read_EEPROM	;wreg free
 13689  003DBA  50DE               	movf	postinc2,w,c
 13690  003DBC  183A               	xorwf	btemp,w,c
 13691  003DBE  B4D8               	btfsc	status,2,c
 13692  003DC0  D005               	goto	l5939
 13693                           
 13694                           ;FinalProject.c: 1354: else
 13695                           ;FinalProject.c: 1355: {
 13696                           ;FinalProject.c: 1356: a_correctPassword = 0;
 13697                           
 13698                           ;FinalProject.c: 1351: {
 13699                           ;FinalProject.c: 1353: }
 13700  003DC2  0E00               	movlw	0
 13701  003DC4  0100               	movlb	0	; () banked
 13702  003DC6  6F84               	movwf	(changePassword@a_correctPassword+1)& (0+255),b
 13703  003DC8  0E00               	movlw	0
 13704  003DCA  6F83               	movwf	changePassword@a_correctPassword& (0+255),b
 13705  003DCC                     l5939:
 13706  003DCC  0100               	movlb	0	; () banked
 13707  003DCE  4BD9               	infsnz	_addr& (0+255),f,b
 13708  003DD0  2BDA               	incf	(_addr+1)& (0+255),f,b
 13709                           
 13710                           ; BSR set to: 0
 13711  003DD2  0100               	movlb	0	; () banked
 13712  003DD4  4B85               	infsnz	changePassword@i& (0+255),f,b
 13713  003DD6  2B86               	incf	(changePassword@i+1)& (0+255),f,b
 13714                           
 13715                           ; BSR set to: 0
 13716  003DD8  0100               	movlb	0	; () banked
 13717  003DDA  BF86               	btfsc	(changePassword@i+1)& (0+255),7,b
 13718  003DDC  D7E0               	goto	l5933
 13719  003DDE  0100               	movlb	0	; () banked
 13720  003DE0  5186               	movf	(changePassword@i+1)& (0+255),w,b
 13721  003DE2  E101               	bnz	u6670
 13722  003DE4  D7D7               	goto	L7
 13723  003DE6                     u6670:
 13724  003DE6                     l541:
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;FinalProject.c: 1358: }
 13728                           ;FinalProject.c: 1359: }
 13729                           ;FinalProject.c: 1360: return a_correctPassword;
 13730  003DE6  C083  F080         	movff	changePassword@a_correctPassword,?_changePassword
 13731  003DEA  C084  F081         	movff	changePassword@a_correctPassword+1,?_changePassword+1
 13732                           
 13733                           ; BSR set to: 0
 13734  003DEE  0012               	return		;funcret
 13735  003DF0                     __end_of_changePassword:
 13736                           	opt stack 0
 13737                           tblptru	equ	0xFF8
 13738                           tblptrh	equ	0xFF7
 13739                           tblptrl	equ	0xFF6
 13740                           tablat	equ	0xFF5
 13741                           prodh	equ	0xFF4
 13742                           prodl	equ	0xFF3
 13743                           intcon	equ	0xFF2
 13744                           intcon2	equ	0xFF1
 13745                           indf0	equ	0xFEF
 13746                           postinc0	equ	0xFEE
 13747                           fsr0h	equ	0xFEA
 13748                           fsr0l	equ	0xFE9
 13749                           wreg	equ	0xFE8
 13750                           postinc1	equ	0xFE6
 13751                           postdec1	equ	0xFE5
 13752                           plusw1	equ	0xFE3
 13753                           fsr1h	equ	0xFE2
 13754                           fsr1l	equ	0xFE1
 13755                           indf2	equ	0xFDF
 13756                           postinc2	equ	0xFDE
 13757                           postdec2	equ	0xFDD
 13758                           fsr2h	equ	0xFDA
 13759                           fsr2l	equ	0xFD9
 13760                           status	equ	0xFD8
 13761                           
 13762 ;; *************** function _option_TempSensor *****************
 13763 ;; Defined at:
 13764 ;;		line 752 in file "FinalProject.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;		None
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;		None
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1    wreg      void 
 13771 ;; Registers used:
 13772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 13773 ;; Tracked objects:
 13774 ;;		On entry : 0/0
 13775 ;;		On exit  : 0/0
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13778 ;;      Params:         0       0       0       0       0       0       0
 13779 ;;      Locals:         0       0       0       0       0       0       0
 13780 ;;      Temps:          0       0       0       0       0       0       0
 13781 ;;      Totals:         0       0       0       0       0       0       0
 13782 ;;Total ram usage:        0 bytes
 13783 ;; Hardware stack levels used:    1
 13784 ;; Hardware stack levels required when called:   13
 13785 ;; This function calls:
 13786 ;;		_choiceKeypad
 13787 ;;		_halfSecDelay
 13788 ;;		_initialScreen
 13789 ;;		_initialize_tempSensor
 13790 ;;		_my_print
 13791 ;;		_reception
 13792 ;;		_updateThreshold
 13793 ;;		_write_EEPROM
 13794 ;; This function is called by:
 13795 ;;		_mainScreen
 13796 ;; This function uses a non-reentrant model
 13797 ;;
 13798                           
 13799                           	psect	text36
 13800  002B20                     __ptext36:
 13801                           	opt stack 0
 13802  002B20                     _option_TempSensor:
 13803                           	opt stack 13
 13804  002B20                     
 13805                           ;FinalProject.c: 756: initialScreen();
 13806  002B20  ECFC  F01F         	call	_initialScreen	;wreg free
 13807                           
 13808                           ;FinalProject.c: 757: my_print("\n\r*********       Temperature Sensor Alarm Menu       
      +                            ********");
 13809  002B24  0E0C               	movlw	low STR_66
 13810  002B26  6EE6               	movwf	postinc1,c
 13811  002B28  0E76               	movlw	high STR_66
 13812  002B2A  6EE6               	movwf	postinc1,c
 13813  002B2C  ECF8  F01E         	call	_my_print	;wreg free
 13814                           
 13815                           ;FinalProject.c: 758: my_print("\n\rSelect One of the Following:");
 13816  002B30  0E1E               	movlw	low STR_32
 13817  002B32  6EE6               	movwf	postinc1,c
 13818  002B34  0E7E               	movlw	high STR_32
 13819  002B36  6EE6               	movwf	postinc1,c
 13820  002B38  ECF8  F01E         	call	_my_print	;wreg free
 13821                           
 13822                           ;FinalProject.c: 759: my_print("\n\r                 1.Enable Temperature Sensor Alarm")
      +                          ;
 13823  002B3C  0E1C               	movlw	low STR_68
 13824  002B3E  6EE6               	movwf	postinc1,c
 13825  002B40  0E7A               	movlw	high STR_68
 13826  002B42  6EE6               	movwf	postinc1,c
 13827  002B44  ECF8  F01E         	call	_my_print	;wreg free
 13828                           
 13829                           ;FinalProject.c: 760: my_print("\n\r                 2.Disable Temperature Sensor Alarm"
      +                          );
 13830  002B48  0EE6               	movlw	low STR_69
 13831  002B4A  6EE6               	movwf	postinc1,c
 13832  002B4C  0E79               	movlw	high STR_69
 13833  002B4E  6EE6               	movwf	postinc1,c
 13834  002B50  ECF8  F01E         	call	_my_print	;wreg free
 13835                           
 13836                           ;FinalProject.c: 761: my_print("\n\r                 3.Change Temperature Sensor Alarm T
      +                          hreshold");
 13837  002B54  0EC5               	movlw	low STR_70
 13838  002B56  6EE6               	movwf	postinc1,c
 13839  002B58  0E78               	movlw	high STR_70
 13840  002B5A  6EE6               	movwf	postinc1,c
 13841  002B5C  ECF8  F01E         	call	_my_print	;wreg free
 13842                           
 13843                           ;FinalProject.c: 762: my_print("\n\r                 0.Return to Main Menu");
 13844  002B60  0EBC               	movlw	low STR_44
 13845  002B62  6EE6               	movwf	postinc1,c
 13846  002B64  0E7B               	movlw	high STR_44
 13847  002B66  6EE6               	movwf	postinc1,c
 13848  002B68  ECF8  F01E         	call	_my_print	;wreg free
 13849                           
 13850                           ;FinalProject.c: 764: my_print("\n\rInput: ");
 13851  002B6C  0ECD               	movlw	low STR_39
 13852  002B6E  6EE6               	movwf	postinc1,c
 13853  002B70  0E7F               	movlw	high STR_39
 13854  002B72  6EE6               	movwf	postinc1,c
 13855  002B74  ECF8  F01E         	call	_my_print	;wreg free
 13856                           
 13857                           ;FinalProject.c: 765: halfSecDelay();
 13858  002B78  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13859                           
 13860                           ;FinalProject.c: 768: if(PORTBbits.RB4 == 1)
 13861  002B7C  A881               	btfss	3969,4,c	;volatile
 13862  002B7E  D013               	goto	l6579
 13863                           
 13864                           ;FinalProject.c: 769: {
 13865                           ;FinalProject.c: 771: choiceKeypad();
 13866  002B80  EC85  F01D         	call	_choiceKeypad	;wreg free
 13867  002B84                     l365:
 13868  002B84  A2AC               	btfss	4012,1,c	;volatile
 13869  002B86  D7FE               	goto	l365
 13870                           
 13871                           ;FinalProject.c: 773: TXREG = keypadValue;
 13872  002B88  C0E0  FFAD         	movff	_keypadValue,4013	;volatile
 13873                           
 13874                           ;FinalProject.c: 774: choice = keypadValue;
 13875  002B8C  C0E0  F0DF         	movff	_keypadValue,_choice
 13876                           
 13877                           ;FinalProject.c: 775: halfSecDelay();
 13878  002B90  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13879                           
 13880                           ;FinalProject.c: 776: while(keypadValue != 'A'){
 13881  002B94  D002               	goto	l6577
 13882  002B96                     l6575:
 13883                           
 13884                           ;FinalProject.c: 777: choiceKeypad();
 13885  002B96  EC85  F01D         	call	_choiceKeypad	;wreg free
 13886  002B9A                     l6577:
 13887  002B9A  0E41               	movlw	65
 13888  002B9C  0100               	movlb	0	; () banked
 13889  002B9E  19E0               	xorwf	_keypadValue& (0+255),w,b
 13890  002BA0  B4D8               	btfsc	status,2,c
 13891  002BA2  D00E               	goto	l6583
 13892  002BA4  D7F8               	goto	l6575
 13893  002BA6                     l6579:
 13894                           
 13895                           ;FinalProject.c: 781: else
 13896                           ;FinalProject.c: 782: {
 13897                           ;FinalProject.c: 783: choice = reception();
 13898  002BA6  ECF3  F020         	call	_reception	;wreg free
 13899  002BAA  503A               	movf	btemp,w,c
 13900  002BAC  0100               	movlb	0	; () banked
 13901  002BAE  6FDF               	movwf	_choice& (0+255),b
 13902  002BB0                     l372:
 13903  002BB0  A2AC               	btfss	4012,1,c	;volatile
 13904  002BB2  D7FE               	goto	l372
 13905                           
 13906                           ;FinalProject.c: 785: TXREG = choice;
 13907  002BB4  C0DF  FFAD         	movff	_choice,4013	;volatile
 13908  002BB8                     l6581:
 13909  002BB8  0E0D               	movlw	13
 13910  002BBA  18AE               	xorwf	4014,w,c	;volatile
 13911  002BBC  A4D8               	btfss	status,2,c
 13912  002BBE  D7FC               	goto	l6581
 13913  002BC0                     l6583:
 13914                           
 13915                           ;FinalProject.c: 787: }
 13916                           ;FinalProject.c: 789: flag = 0;
 13917  002BC0  0E00               	movlw	0
 13918  002BC2  0100               	movlb	0	; () banked
 13919  002BC4  6FDC               	movwf	(_flag+1)& (0+255),b
 13920  002BC6  0E00               	movlw	0
 13921  002BC8  6FDB               	movwf	_flag& (0+255),b
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;FinalProject.c: 790: if (choice == '0')
 13925  002BCA  0E30               	movlw	48
 13926  002BCC  0100               	movlb	0	; () banked
 13927  002BCE  19DF               	xorwf	_choice& (0+255),w,b
 13928  002BD0  B4D8               	btfsc	status,2,c
 13929  002BD2  D05D               	goto	l6637
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;FinalProject.c: 794: else if(choice == '1')
 13933                           
 13934                           ; BSR set to: 0
 13935                           
 13936                           ; BSR set to: 0
 13937                           ;FinalProject.c: 791: {
 13938                           ;FinalProject.c: 793: }
 13939  002BD4  0E31               	movlw	49
 13940  002BD6  0100               	movlb	0	; () banked
 13941  002BD8  19DF               	xorwf	_choice& (0+255),w,b
 13942  002BDA  A4D8               	btfss	status,2,c
 13943  002BDC  D01E               	goto	l6605
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;FinalProject.c: 795: {
 13947                           ;FinalProject.c: 797: initialize_tempSensor();
 13948  002BDE  EC14  F021         	call	_initialize_tempSensor	;wreg free
 13949                           
 13950                           ;FinalProject.c: 798: T0CONbits.TMR0ON = 1;
 13951  002BE2  8ED5               	bsf	4053,7,c	;volatile
 13952                           
 13953                           ;FinalProject.c: 799: initialScreen();
 13954  002BE4  ECFC  F01F         	call	_initialScreen	;wreg free
 13955                           
 13956                           ;FinalProject.c: 800: write_EEPROM(tempStatusAddr,'E');
 13957  002BE8  0E45               	movlw	69
 13958  002BEA  6EE6               	movwf	postinc1,c
 13959  002BEC  C050  FFE6         	movff	_tempStatusAddr,postinc1
 13960  002BF0  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
 13961  002BF4  EC97  F020         	call	_write_EEPROM	;wreg free
 13962                           
 13963                           ;FinalProject.c: 801: my_print("\n\r Temperature Sensor Alarm Enabled.\n\r");
 13964  002BF8  0E35               	movlw	low STR_73
 13965  002BFA  6EE6               	movwf	postinc1,c
 13966  002BFC  0E7C               	movlw	high STR_73
 13967  002BFE  6EE6               	movwf	postinc1,c
 13968  002C00  ECF8  F01E         	call	_my_print	;wreg free
 13969                           
 13970                           ;FinalProject.c: 802: statusOfTemp = "ACTIVE";
 13971  002C04  0EE2               	movlw	low (STR_1+2)
 13972  002C06  0100               	movlb	0	; () banked
 13973  002C08  6FF2               	movwf	_statusOfTemp& (0+255),b
 13974  002C0A  0E7F               	movlw	high (STR_1+2)
 13975  002C0C  0100               	movlb	0	; () banked
 13976  002C0E  6FF3               	movwf	(_statusOfTemp+1)& (0+255),b
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;FinalProject.c: 803: halfSecDelay();
 13980  002C10  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13981                           
 13982                           ;FinalProject.c: 804: halfSecDelay();
 13983  002C14  ECA6  F01F         	call	_halfSecDelay	;wreg free
 13984                           
 13985                           ;FinalProject.c: 805: }
 13986  002C18  D03A               	goto	l6637
 13987  002C1A                     l6605:
 13988                           
 13989                           ;FinalProject.c: 806: else if(choice == '2')
 13990  002C1A  0E32               	movlw	50
 13991  002C1C  0100               	movlb	0	; () banked
 13992  002C1E  19DF               	xorwf	_choice& (0+255),w,b
 13993  002C20  A4D8               	btfss	status,2,c
 13994  002C22  D01E               	goto	l6625
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;FinalProject.c: 807: {
 13998                           ;FinalProject.c: 808: statusOfTemp = "INACTIVE";
 13999  002C24  0EE0               	movlw	low STR_1
 14000  002C26  0100               	movlb	0	; () banked
 14001  002C28  6FF2               	movwf	_statusOfTemp& (0+255),b
 14002  002C2A  0E7F               	movlw	high STR_1
 14003  002C2C  0100               	movlb	0	; () banked
 14004  002C2E  6FF3               	movwf	(_statusOfTemp+1)& (0+255),b
 14005                           
 14006                           ; BSR set to: 0
 14007                           ;FinalProject.c: 809: T0CONbits.TMR0ON = 0;
 14008  002C30  9ED5               	bcf	4053,7,c	;volatile
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;FinalProject.c: 810: PIE1bits.ADIE = 0;
 14012  002C32  9C9D               	bcf	3997,6,c	;volatile
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;FinalProject.c: 811: PORTBbits.RB5 =0;
 14016  002C34  9A81               	bcf	3969,5,c	;volatile
 14017                           
 14018                           ; BSR set to: 0
 14019                           ;FinalProject.c: 812: write_EEPROM(tempStatusAddr,'D');
 14020  002C36  0E44               	movlw	68
 14021  002C38  6EE6               	movwf	postinc1,c
 14022  002C3A  C050  FFE6         	movff	_tempStatusAddr,postinc1
 14023  002C3E  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
 14024  002C42  EC97  F020         	call	_write_EEPROM	;wreg free
 14025                           
 14026                           ;FinalProject.c: 813: initialScreen();
 14027  002C46  ECFC  F01F         	call	_initialScreen	;wreg free
 14028                           
 14029                           ;FinalProject.c: 814: my_print("\n\r Temperature Sensor Alarm Disabled.\n\r");
 14030  002C4A  0EE5               	movlw	low STR_76
 14031  002C4C  6EE6               	movwf	postinc1,c
 14032  002C4E  0E7B               	movlw	high STR_76
 14033  002C50  6EE6               	movwf	postinc1,c
 14034  002C52  ECF8  F01E         	call	_my_print	;wreg free
 14035                           
 14036                           ;FinalProject.c: 816: halfSecDelay();
 14037  002C56  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14038                           
 14039                           ;FinalProject.c: 817: halfSecDelay();
 14040  002C5A  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14041                           
 14042                           ;FinalProject.c: 820: }
 14043  002C5E  D017               	goto	l6637
 14044  002C60                     l6625:
 14045                           
 14046                           ;FinalProject.c: 822: else if (choice == '3')
 14047  002C60  0E33               	movlw	51
 14048  002C62  0100               	movlb	0	; () banked
 14049  002C64  19DF               	xorwf	_choice& (0+255),w,b
 14050  002C66  A4D8               	btfss	status,2,c
 14051  002C68  D003               	goto	l6629
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;FinalProject.c: 823: {
 14055                           ;FinalProject.c: 825: updateThreshold();
 14056  002C6A  ECE2  F010         	call	_updateThreshold	;wreg free
 14057                           
 14058                           ;FinalProject.c: 826: }
 14059  002C6E  D00F               	goto	l6637
 14060  002C70                     l6629:
 14061                           
 14062                           ;FinalProject.c: 827: else
 14063                           ;FinalProject.c: 828: {
 14064                           ;FinalProject.c: 829: my_print("\n\rInvalid Selection.\n\r");
 14065  002C70  0E4B               	movlw	low STR_40
 14066  002C72  6EE6               	movwf	postinc1,c
 14067  002C74  0E7F               	movlw	high STR_40
 14068  002C76  6EE6               	movwf	postinc1,c
 14069  002C78  ECF8  F01E         	call	_my_print	;wreg free
 14070                           
 14071                           ;FinalProject.c: 830: halfSecDelay();
 14072  002C7C  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14073                           
 14074                           ;FinalProject.c: 831: halfSecDelay();
 14075  002C80  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14076                           
 14077                           ;FinalProject.c: 832: flag = 1;
 14078  002C84  0E00               	movlw	0
 14079  002C86  0100               	movlb	0	; () banked
 14080  002C88  6FDC               	movwf	(_flag+1)& (0+255),b
 14081  002C8A  0E01               	movlw	1
 14082  002C8C  6FDB               	movwf	_flag& (0+255),b
 14083  002C8E                     l6637:
 14084                           
 14085                           ;FinalProject.c: 833: }
 14086                           ;FinalProject.c: 835: }while(flag == 1);
 14087  002C8E  0100               	movlb	0	; () banked
 14088  002C90  05DB               	decf	_flag& (0+255),w,b
 14089  002C92  0100               	movlb	0	; () banked
 14090  002C94  11DC               	iorwf	(_flag+1)& (0+255),w,b
 14091  002C96  A4D8               	btfss	status,2,c
 14092  002C98  0012               	return	
 14093  002C9A  D742               	goto	l6565
 14094  002C9C                     __end_of_option_TempSensor:
 14095                           	opt stack 0
 14096                           tblptru	equ	0xFF8
 14097                           tblptrh	equ	0xFF7
 14098                           tblptrl	equ	0xFF6
 14099                           tablat	equ	0xFF5
 14100                           prodh	equ	0xFF4
 14101                           prodl	equ	0xFF3
 14102                           intcon	equ	0xFF2
 14103                           intcon2	equ	0xFF1
 14104                           indf0	equ	0xFEF
 14105                           postinc0	equ	0xFEE
 14106                           fsr0h	equ	0xFEA
 14107                           fsr0l	equ	0xFE9
 14108                           wreg	equ	0xFE8
 14109                           postinc1	equ	0xFE6
 14110                           postdec1	equ	0xFE5
 14111                           plusw1	equ	0xFE3
 14112                           fsr1h	equ	0xFE2
 14113                           fsr1l	equ	0xFE1
 14114                           indf2	equ	0xFDF
 14115                           postinc2	equ	0xFDE
 14116                           postdec2	equ	0xFDD
 14117                           fsr2h	equ	0xFDA
 14118                           fsr2l	equ	0xFD9
 14119                           status	equ	0xFD8
 14120                           
 14121 ;; *************** function _updateThreshold *****************
 14122 ;; Defined at:
 14123 ;;		line 1286 in file "FinalProject.c"
 14124 ;; Parameters:    Size  Location     Type
 14125 ;;		None
 14126 ;; Auto vars:     Size  Location     Type
 14127 ;;  i               2  [STACK] int 
 14128 ;;  i               2  [STACK] int 
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  1  [STACK] void 
 14131 ;; Registers used:
 14132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14138 ;;      Params:         0       0       0       0       0       0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0
 14141 ;;      Totals:         0       0       0       0       0       0       0
 14142 ;;Total ram usage:        0 bytes
 14143 ;; Hardware stack levels used:    1
 14144 ;; Hardware stack levels required when called:   12
 14145 ;; This function calls:
 14146 ;;		_atoi
 14147 ;;		_choiceKeypad
 14148 ;;		_halfSecDelay
 14149 ;;		_my_print
 14150 ;;		_read_EEPROM
 14151 ;;		_reception
 14152 ;;		_write_EEPROM
 14153 ;; This function is called by:
 14154 ;;		_setUpPassword
 14155 ;;		_option_TempSensor
 14156 ;;		_My_ISR_Low_TempSensor
 14157 ;; This function uses a reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text37
 14161  0021C4                     __ptext37:
 14162                           	opt stack 0
 14163  0021C4                     _updateThreshold:
 14164                           	opt stack 0
 14165                           
 14166                           ; BSR set to: 0
 14167                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 14168  0021C4  52E6               	movf	postinc1,f,c
 14169  0021C6  52E6               	movf	postinc1,f,c
 14170  0021C8  52E6               	movf	postinc1,f,c
 14171  0021CA  52E6               	movf	postinc1,f,c
 14172                           
 14173                           ;FinalProject.c: 1288: my_print("\n\r Enter Temperature threshold in Fahrenheit(2 digits
      +                          ): ");
 14174                           
 14175                           ;incstack = 0
 14176  0021CC  0E3E               	movlw	low STR_120
 14177  0021CE  6EE6               	movwf	postinc1,c
 14178  0021D0  0E79               	movlw	high STR_120
 14179  0021D2  6EE6               	movwf	postinc1,c
 14180  0021D4  ECF8  F01E         	call	_my_print	;wreg free
 14181                           
 14182                           ;FinalProject.c: 1290: halfSecDelay();
 14183  0021D8  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14184                           
 14185                           ;FinalProject.c: 1292: int i;
 14186                           ;FinalProject.c: 1293: thresholdAddr = 0xD0;
 14187  0021DC  0E00               	movlw	0
 14188  0021DE  0100               	movlb	0	; () banked
 14189  0021E0  6FF5               	movwf	(_thresholdAddr+1)& (0+255),b
 14190  0021E2  0ED0               	movlw	208
 14191  0021E4  6FF4               	movwf	_thresholdAddr& (0+255),b
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;FinalProject.c: 1296: if(PORTBbits.RB4 == 1)
 14195  0021E6  A881               	btfss	3969,4,c	;volatile
 14196  0021E8  D060               	goto	l7373
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;FinalProject.c: 1297: {
 14200                           ;FinalProject.c: 1298: for(i=0; i<2; i++)
 14201                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14202  0021EA  0EFE               	movlw	-2
 14203  0021EC  6AE3               	clrf	plusw1,c
 14204  0021EE  0EFF               	movlw	-1
 14205  0021F0  6AE3               	clrf	plusw1,c
 14206  0021F2                     l7353:
 14207                           
 14208                           ; BSR set to: 0
 14209                           ;FinalProject.c: 1299: {
 14210                           ;FinalProject.c: 1300: choiceKeypad();
 14211  0021F2  EC85  F01D         	call	_choiceKeypad	;wreg free
 14212                           
 14213                           ;FinalProject.c: 1301: thresholdArray[i] = keypadValue;
 14214                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14215  0021F6  0EFE               	movlw	-2
 14216  0021F8  CFE3 F03B          	movff	plusw1,btemp+1
 14217  0021FC  0EFF               	movlw	-1
 14218  0021FE  CFE3 F03C          	movff	plusw1,btemp+2
 14219  002202  0EE7               	movlw	low _thresholdArray
 14220  002204  243B               	addwf	btemp+1,w,c
 14221  002206  6ED9               	movwf	fsr2l,c
 14222  002208  0E00               	movlw	high _thresholdArray
 14223  00220A  203C               	addwfc	btemp+2,w,c
 14224  00220C  6EDA               	movwf	fsr2h,c
 14225  00220E  C0E0  FFDF         	movff	_keypadValue,indf2
 14226                           
 14227                           ;FinalProject.c: 1303: halfSecDelay();
 14228  002212  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14229                           
 14230                           ;FinalProject.c: 1304: TXREG = thresholdArray[i];
 14231                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14232  002216  0EFE               	movlw	-2
 14233  002218  CFE3 F03B          	movff	plusw1,btemp+1
 14234  00221C  0EFF               	movlw	-1
 14235  00221E  CFE3 F03C          	movff	plusw1,btemp+2
 14236  002222  0EE7               	movlw	low _thresholdArray
 14237  002224  243B               	addwf	btemp+1,w,c
 14238  002226  6ED9               	movwf	fsr2l,c
 14239  002228  0E00               	movlw	high _thresholdArray
 14240  00222A  203C               	addwfc	btemp+2,w,c
 14241  00222C  6EDA               	movwf	fsr2h,c
 14242  00222E  50DF               	movf	indf2,w,c
 14243  002230  6EAD               	movwf	4013,c	;volatile
 14244                           
 14245                           ;FinalProject.c: 1305: write_EEPROM(thresholdAddr, thresholdArray[i]);
 14246                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14247  002232  0EFE               	movlw	-2
 14248  002234  CFE3 F03B          	movff	plusw1,btemp+1
 14249  002238  0EFF               	movlw	-1
 14250  00223A  CFE3 F03C          	movff	plusw1,btemp+2
 14251  00223E  0EE7               	movlw	low _thresholdArray
 14252  002240  243B               	addwf	btemp+1,w,c
 14253  002242  6ED9               	movwf	fsr2l,c
 14254  002244  0E00               	movlw	high _thresholdArray
 14255  002246  203C               	addwfc	btemp+2,w,c
 14256  002248  6EDA               	movwf	fsr2h,c
 14257  00224A  50DF               	movf	indf2,w,c
 14258  00224C  6EE6               	movwf	postinc1,c
 14259  00224E  C0F4  FFE6         	movff	_thresholdAddr,postinc1
 14260  002252  C0F5  FFE6         	movff	_thresholdAddr+1,postinc1
 14261  002256  EC97  F020         	call	_write_EEPROM	;wreg free
 14262                           
 14263                           ;FinalProject.c: 1307: thresholdAddr++;
 14264  00225A  0100               	movlb	0	; () banked
 14265  00225C  4BF4               	infsnz	_thresholdAddr& (0+255),f,b
 14266  00225E  2BF5               	incf	(_thresholdAddr+1)& (0+255),f,b
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14270  002260  0EFE               	movlw	-2
 14271  002262  50E3               	movf	plusw1,w,c
 14272  002264  0F01               	addlw	1
 14273  002266  6E3A               	movwf	btemp,c
 14274  002268  0EFE               	movlw	-2
 14275  00226A  C03A  FFE3         	movff	btemp,plusw1
 14276  00226E  6A3A               	clrf	btemp,c
 14277  002270  0EFF               	movlw	-1
 14278  002272  50E3               	movf	plusw1,w,c
 14279  002274  203A               	addwfc	btemp,w,c
 14280  002276  6E3A               	movwf	btemp,c
 14281  002278  0EFF               	movlw	-1
 14282  00227A  C03A  FFE3         	movff	btemp,plusw1
 14283                           
 14284                           ; BSR set to: 0
 14285                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14286  00227E  0EFF               	movlw	-1
 14287  002280  BEE3               	btfsc	plusw1,7,c
 14288  002282  D7B7               	goto	l7353
 14289  002284  0EFF               	movlw	-1
 14290  002286  50E3               	movf	plusw1,w,c
 14291  002288  E10A               	bnz	l7371
 14292  00228A  0EFE               	movlw	-2
 14293  00228C  CFE3 F03A          	movff	plusw1,btemp
 14294  002290  0E02               	movlw	2
 14295  002292  5E3A               	subwf	btemp,f,c
 14296  002294  B0D8               	btfsc	status,0,c
 14297  002296  D003               	goto	l7371
 14298  002298  D7AC               	goto	l7353
 14299  00229A                     l7369:
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;FinalProject.c: 1310: choiceKeypad();
 14303  00229A  EC85  F01D         	call	_choiceKeypad	;wreg free
 14304  00229E                     l7371:
 14305  00229E  0E41               	movlw	65
 14306  0022A0  0100               	movlb	0	; () banked
 14307  0022A2  19E0               	xorwf	_keypadValue& (0+255),w,b
 14308  0022A4  B4D8               	btfsc	status,2,c
 14309  0022A6  D05A               	goto	l7393
 14310  0022A8  D7F8               	goto	l7369
 14311  0022AA                     l7373:
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;FinalProject.c: 1313: else
 14315                           ;FinalProject.c: 1314: {
 14316                           ;FinalProject.c: 1315: for(i=0; i<2; i++)
 14317                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14318  0022AA  0EFE               	movlw	-2
 14319  0022AC  6AE3               	clrf	plusw1,c
 14320  0022AE  0EFF               	movlw	-1
 14321  0022B0  6AE3               	clrf	plusw1,c
 14322  0022B2                     l7379:
 14323                           
 14324                           ; BSR set to: 0
 14325                           ;FinalProject.c: 1316: {
 14326                           ;FinalProject.c: 1317: thresholdArray[i] = reception();
 14327                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14328  0022B2  0EFE               	movlw	-2
 14329  0022B4  CFE3 F03B          	movff	plusw1,btemp+1
 14330  0022B8  0EFF               	movlw	-1
 14331  0022BA  CFE3 F03C          	movff	plusw1,btemp+2
 14332  0022BE  0EE7               	movlw	low _thresholdArray
 14333  0022C0  243B               	addwf	btemp+1,w,c
 14334  0022C2  6ED9               	movwf	fsr2l,c
 14335  0022C4  0E00               	movlw	high _thresholdArray
 14336  0022C6  203C               	addwfc	btemp+2,w,c
 14337  0022C8  6EDA               	movwf	fsr2h,c
 14338  0022CA  ECF3  F020         	call	_reception	;wreg free
 14339  0022CE  503A               	movf	btemp,w,c
 14340  0022D0  6EDF               	movwf	indf2,c
 14341                           
 14342                           ;FinalProject.c: 1318: TXREG = thresholdArray[i];
 14343                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14344  0022D2  0EFE               	movlw	-2
 14345  0022D4  CFE3 F03B          	movff	plusw1,btemp+1
 14346  0022D8  0EFF               	movlw	-1
 14347  0022DA  CFE3 F03C          	movff	plusw1,btemp+2
 14348  0022DE  0EE7               	movlw	low _thresholdArray
 14349  0022E0  243B               	addwf	btemp+1,w,c
 14350  0022E2  6ED9               	movwf	fsr2l,c
 14351  0022E4  0E00               	movlw	high _thresholdArray
 14352  0022E6  203C               	addwfc	btemp+2,w,c
 14353  0022E8  6EDA               	movwf	fsr2h,c
 14354  0022EA  50DF               	movf	indf2,w,c
 14355  0022EC  6EAD               	movwf	4013,c	;volatile
 14356                           
 14357                           ;FinalProject.c: 1319: write_EEPROM(thresholdAddr, thresholdArray[i]);
 14358                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14359  0022EE  0EFE               	movlw	-2
 14360  0022F0  CFE3 F03B          	movff	plusw1,btemp+1
 14361  0022F4  0EFF               	movlw	-1
 14362  0022F6  CFE3 F03C          	movff	plusw1,btemp+2
 14363  0022FA  0EE7               	movlw	low _thresholdArray
 14364  0022FC  243B               	addwf	btemp+1,w,c
 14365  0022FE  6ED9               	movwf	fsr2l,c
 14366  002300  0E00               	movlw	high _thresholdArray
 14367  002302  203C               	addwfc	btemp+2,w,c
 14368  002304  6EDA               	movwf	fsr2h,c
 14369  002306  50DF               	movf	indf2,w,c
 14370  002308  6EE6               	movwf	postinc1,c
 14371  00230A  C0F4  FFE6         	movff	_thresholdAddr,postinc1
 14372  00230E  C0F5  FFE6         	movff	_thresholdAddr+1,postinc1
 14373  002312  EC97  F020         	call	_write_EEPROM	;wreg free
 14374                           
 14375                           ;FinalProject.c: 1320: thresholdAddr++;
 14376  002316  0100               	movlb	0	; () banked
 14377  002318  4BF4               	infsnz	_thresholdAddr& (0+255),f,b
 14378  00231A  2BF5               	incf	(_thresholdAddr+1)& (0+255),f,b
 14379                           
 14380                           ; BSR set to: 0
 14381                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14382  00231C  0EFE               	movlw	-2
 14383  00231E  50E3               	movf	plusw1,w,c
 14384  002320  0F01               	addlw	1
 14385  002322  6E3A               	movwf	btemp,c
 14386  002324  0EFE               	movlw	-2
 14387  002326  C03A  FFE3         	movff	btemp,plusw1
 14388  00232A  6A3A               	clrf	btemp,c
 14389  00232C  0EFF               	movlw	-1
 14390  00232E  50E3               	movf	plusw1,w,c
 14391  002330  203A               	addwfc	btemp,w,c
 14392  002332  6E3A               	movwf	btemp,c
 14393  002334  0EFF               	movlw	-1
 14394  002336  C03A  FFE3         	movff	btemp,plusw1
 14395                           
 14396                           ; BSR set to: 0
 14397                           ;stkvar	updateThreshold@i @ sp[(-4)+2]
 14398  00233A  0EFF               	movlw	-1
 14399  00233C  BEE3               	btfsc	plusw1,7,c
 14400  00233E  D7B9               	goto	l7379
 14401  002340  0EFF               	movlw	-1
 14402  002342  50E3               	movf	plusw1,w,c
 14403  002344  E107               	bnz	u8690
 14404  002346  0EFE               	movlw	-2
 14405  002348  CFE3 F03A          	movff	plusw1,btemp
 14406  00234C  0E02               	movlw	2
 14407  00234E  5E3A               	subwf	btemp,f,c
 14408  002350  A0D8               	btfss	status,0,c
 14409  002352  D7AF               	goto	l7379
 14410  002354                     u8690:
 14411  002354                     l7391:
 14412  002354  0E0D               	movlw	13
 14413  002356  18AE               	xorwf	4014,w,c	;volatile
 14414  002358  A4D8               	btfss	status,2,c
 14415  00235A  D7FC               	goto	l7391
 14416  00235C                     l7393:
 14417                           
 14418                           ;FinalProject.c: 1323: }
 14419                           ;FinalProject.c: 1325: int i;
 14420                           ;FinalProject.c: 1326: for(int i = 0; i < 3; i++)
 14421                           ;stkvar	updateThreshold@i_1232 @ sp[(-4)+0]
 14422  00235C  0EFC               	movlw	-4
 14423  00235E  6AE3               	clrf	plusw1,c
 14424  002360  0EFD               	movlw	-3
 14425  002362  6AE3               	clrf	plusw1,c
 14426  002364                     l7399:
 14427                           
 14428                           ;FinalProject.c: 1327: {
 14429                           ;FinalProject.c: 1328: if(i<3)
 14430                           ;stkvar	updateThreshold@i_1232 @ sp[(-4)+0]
 14431  002364  0EFD               	movlw	-3
 14432  002366  BEE3               	btfsc	plusw1,7,c
 14433  002368  D00A               	goto	l7401
 14434  00236A  0EFD               	movlw	-3
 14435  00236C  50E3               	movf	plusw1,w,c
 14436  00236E  E11F               	bnz	l7405
 14437  002370  0EFC               	movlw	-4
 14438  002372  CFE3 F03A          	movff	plusw1,btemp
 14439  002376  0E03               	movlw	3
 14440  002378  5E3A               	subwf	btemp,f,c
 14441  00237A  B0D8               	btfsc	status,0,c
 14442  00237C  D018               	goto	l7405
 14443  00237E                     l7401:
 14444                           
 14445                           ;FinalProject.c: 1329: {
 14446                           ;FinalProject.c: 1330: thresholdArray[i] = read_EEPROM(thresholdAddr);
 14447                           ;stkvar	updateThreshold@i_1232 @ sp[(-4)+0]
 14448  00237E  0EFC               	movlw	-4
 14449  002380  CFE3 F03B          	movff	plusw1,btemp+1
 14450  002384  0EFD               	movlw	-3
 14451  002386  CFE3 F03C          	movff	plusw1,btemp+2
 14452  00238A  0EE7               	movlw	low _thresholdArray
 14453  00238C  243B               	addwf	btemp+1,w,c
 14454  00238E  6ED9               	movwf	fsr2l,c
 14455  002390  0E00               	movlw	high _thresholdArray
 14456  002392  203C               	addwfc	btemp+2,w,c
 14457  002394  6EDA               	movwf	fsr2h,c
 14458  002396  C0F4  FFE6         	movff	_thresholdAddr,postinc1
 14459  00239A  C0F5  FFE6         	movff	_thresholdAddr+1,postinc1
 14460  00239E  ECE8  F020         	call	_read_EEPROM	;wreg free
 14461  0023A2  503A               	movf	btemp,w,c
 14462  0023A4  6EDF               	movwf	indf2,c
 14463                           
 14464                           ;FinalProject.c: 1331: thresholdAddr++;
 14465  0023A6  0100               	movlb	0	; () banked
 14466  0023A8  4BF4               	infsnz	_thresholdAddr& (0+255),f,b
 14467  0023AA  2BF5               	incf	(_thresholdAddr+1)& (0+255),f,b
 14468                           
 14469                           ;FinalProject.c: 1332: }
 14470  0023AC  D00E               	goto	l7407
 14471  0023AE                     l7405:
 14472                           
 14473                           ;FinalProject.c: 1333: else
 14474                           ;FinalProject.c: 1334: {
 14475                           ;FinalProject.c: 1335: thresholdArray[i] = '\0';
 14476                           ;stkvar	updateThreshold@i_1232 @ sp[(-4)+0]
 14477  0023AE  0EFC               	movlw	-4
 14478  0023B0  CFE3 F03B          	movff	plusw1,btemp+1
 14479  0023B4  0EFD               	movlw	-3
 14480  0023B6  CFE3 F03C          	movff	plusw1,btemp+2
 14481  0023BA  0EE7               	movlw	low _thresholdArray
 14482  0023BC  243B               	addwf	btemp+1,w,c
 14483  0023BE  6ED9               	movwf	fsr2l,c
 14484  0023C0  0E00               	movlw	high _thresholdArray
 14485  0023C2  203C               	addwfc	btemp+2,w,c
 14486  0023C4  6EDA               	movwf	fsr2h,c
 14487  0023C6  0E00               	movlw	0
 14488  0023C8  6EDF               	movwf	indf2,c
 14489  0023CA                     l7407:
 14490                           
 14491                           ;stkvar	updateThreshold@i_1232 @ sp[(-4)+0]
 14492  0023CA  0EFC               	movlw	-4
 14493  0023CC  50E3               	movf	plusw1,w,c
 14494  0023CE  0F01               	addlw	1
 14495  0023D0  6E3A               	movwf	btemp,c
 14496  0023D2  0EFC               	movlw	-4
 14497  0023D4  C03A  FFE3         	movff	btemp,plusw1
 14498  0023D8  6A3A               	clrf	btemp,c
 14499  0023DA  0EFD               	movlw	-3
 14500  0023DC  50E3               	movf	plusw1,w,c
 14501  0023DE  203A               	addwfc	btemp,w,c
 14502  0023E0  6E3A               	movwf	btemp,c
 14503  0023E2  0EFD               	movlw	-3
 14504  0023E4  C03A  FFE3         	movff	btemp,plusw1
 14505                           
 14506                           ;stkvar	updateThreshold@i_1232 @ sp[(-4)+0]
 14507  0023E8  0EFD               	movlw	-3
 14508  0023EA  BEE3               	btfsc	plusw1,7,c
 14509  0023EC  D7BB               	goto	l7399
 14510  0023EE  0EFD               	movlw	-3
 14511  0023F0  50E3               	movf	plusw1,w,c
 14512  0023F2  E107               	bnz	u8720
 14513  0023F4  0EFC               	movlw	-4
 14514  0023F6  CFE3 F03A          	movff	plusw1,btemp
 14515  0023FA  0E03               	movlw	3
 14516  0023FC  5E3A               	subwf	btemp,f,c
 14517  0023FE  A0D8               	btfss	status,0,c
 14518  002400  D7B1               	goto	l7399
 14519  002402                     u8720:
 14520                           
 14521                           ;FinalProject.c: 1336: }
 14522                           ;FinalProject.c: 1337: }
 14523                           ;FinalProject.c: 1339: tempThreshold = atoi(thresholdArray);
 14524  002402  0EE7               	movlw	low _thresholdArray
 14525  002404  6EE6               	movwf	postinc1,c
 14526  002406  0E00               	movlw	high _thresholdArray
 14527  002408  6EE6               	movwf	postinc1,c
 14528  00240A  ECAD  F017         	call	_atoi	;wreg free
 14529  00240E  C03A  F0DD         	movff	btemp,_tempThreshold
 14530  002412  C03B  F0DE         	movff	btemp+1,_tempThreshold+1
 14531                           
 14532                           ; _updateThreshold: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14533  002416  52E5               	movf	postdec1,f,c
 14534  002418  52E5               	movf	postdec1,f,c
 14535  00241A  52E5               	movf	postdec1,f,c
 14536  00241C  52E5               	movf	postdec1,f,c
 14537  00241E  0012               	return		;funcret
 14538  002420                     __end_of_updateThreshold:
 14539                           	opt stack 0
 14540                           tblptru	equ	0xFF8
 14541                           tblptrh	equ	0xFF7
 14542                           tblptrl	equ	0xFF6
 14543                           tablat	equ	0xFF5
 14544                           prodh	equ	0xFF4
 14545                           prodl	equ	0xFF3
 14546                           intcon	equ	0xFF2
 14547                           intcon2	equ	0xFF1
 14548                           indf0	equ	0xFEF
 14549                           postinc0	equ	0xFEE
 14550                           fsr0h	equ	0xFEA
 14551                           fsr0l	equ	0xFE9
 14552                           wreg	equ	0xFE8
 14553                           postinc1	equ	0xFE6
 14554                           postdec1	equ	0xFE5
 14555                           plusw1	equ	0xFE3
 14556                           fsr1h	equ	0xFE2
 14557                           fsr1l	equ	0xFE1
 14558                           indf2	equ	0xFDF
 14559                           postinc2	equ	0xFDE
 14560                           postdec2	equ	0xFDD
 14561                           fsr2h	equ	0xFDA
 14562                           fsr2l	equ	0xFD9
 14563                           status	equ	0xFD8
 14564                           
 14565 ;; *************** function _halfSecDelay *****************
 14566 ;; Defined at:
 14567 ;;		line 866 in file "FinalProject.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;		None
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;  i               2  [STACK] int 
 14572 ;; Return value:  Size  Location     Type
 14573 ;;                  1  [STACK] void 
 14574 ;; Registers used:
 14575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 14576 ;; Tracked objects:
 14577 ;;		On entry : 0/0
 14578 ;;		On exit  : 0/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14581 ;;      Params:         0       0       0       0       0       0       0
 14582 ;;      Locals:         0       0       0       0       0       0       0
 14583 ;;      Temps:          0       0       0       0       0       0       0
 14584 ;;      Totals:         0       0       0       0       0       0       0
 14585 ;;Total ram usage:        0 bytes
 14586 ;; Hardware stack levels used:    1
 14587 ;; Hardware stack levels required when called:   10
 14588 ;; This function calls:
 14589 ;;		Nothing
 14590 ;; This function is called by:
 14591 ;;		_main
 14592 ;;		_setUpPassword
 14593 ;;		_verifyPassword
 14594 ;;		_mainScreen
 14595 ;;		_option_passcode
 14596 ;;		_option_PIR
 14597 ;;		_option_TempSensor
 14598 ;;		_My_ISR_High
 14599 ;;		_My_ISR_Low_TempSensor
 14600 ;;		_PIR_reset
 14601 ;;		_temp_reset
 14602 ;;		_updateThreshold
 14603 ;; This function uses a reentrant model
 14604 ;;
 14605                           
 14606                           	psect	text38
 14607  003F4C                     __ptext38:
 14608                           	opt stack 0
 14609  003F4C                     _halfSecDelay:
 14610                           	opt stack 0
 14611                           
 14612                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 14613  003F4C  52E6               	movf	postinc1,f,c
 14614  003F4E  52E6               	movf	postinc1,f,c
 14615                           
 14616                           ;FinalProject.c: 868: int i;
 14617                           ;FinalProject.c: 869: for (i = 0; i < 50; i++)
 14618                           ;stkvar	halfSecDelay@i @ sp[(-2)+0]
 14619                           
 14620                           ;incstack = 0
 14621  003F50  0EFE               	movlw	-2
 14622  003F52  6AE3               	clrf	plusw1,c
 14623  003F54  0EFF               	movlw	-1
 14624  003F56  6AE3               	clrf	plusw1,c
 14625  003F58                     l4921:
 14626                           
 14627                           ;FinalProject.c: 870: {
 14628                           ;FinalProject.c: 871: _delay((unsigned long)((10)*(20000000/4000.0)));
 14629  003F58  0E41               	movlw	65
 14630  003F5A  6E3A               	movwf	btemp,c
 14631  003F5C  0EEE               	movlw	238
 14632  003F5E                     u8977:
 14633  003F5E  2EE8               	decfsz	wreg,f,c
 14634  003F60  D7FE               	goto	u8977
 14635  003F62  2E3A               	decfsz	btemp,f,c
 14636  003F64  D7FC               	goto	u8977
 14637  003F66  D000               	nop2	
 14638                           
 14639                           ;stkvar	halfSecDelay@i @ sp[(-2)+0]
 14640  003F68  0EFE               	movlw	-2
 14641  003F6A  50E3               	movf	plusw1,w,c
 14642  003F6C  0F01               	addlw	1
 14643  003F6E  6E3A               	movwf	btemp,c
 14644  003F70  0EFE               	movlw	-2
 14645  003F72  C03A  FFE3         	movff	btemp,plusw1
 14646  003F76  6A3A               	clrf	btemp,c
 14647  003F78  0EFF               	movlw	-1
 14648  003F7A  50E3               	movf	plusw1,w,c
 14649  003F7C  203A               	addwfc	btemp,w,c
 14650  003F7E  6E3A               	movwf	btemp,c
 14651  003F80  0EFF               	movlw	-1
 14652  003F82  C03A  FFE3         	movff	btemp,plusw1
 14653                           
 14654                           ;stkvar	halfSecDelay@i @ sp[(-2)+0]
 14655  003F86  0EFF               	movlw	-1
 14656  003F88  BEE3               	btfsc	plusw1,7,c
 14657  003F8A  D7E6               	goto	l4921
 14658  003F8C  0EFF               	movlw	-1
 14659  003F8E  50E3               	movf	plusw1,w,c
 14660  003F90  E107               	bnz	u5190
 14661  003F92  0EFE               	movlw	-2
 14662  003F94  CFE3 F03A          	movff	plusw1,btemp
 14663  003F98  0E32               	movlw	50
 14664  003F9A  5E3A               	subwf	btemp,f,c
 14665  003F9C  A0D8               	btfss	status,0,c
 14666  003F9E  D7DC               	goto	l4921
 14667  003FA0                     u5190:
 14668                           
 14669                           ; _halfSecDelay: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 14670  003FA0  52E5               	movf	postdec1,f,c
 14671  003FA2  52E5               	movf	postdec1,f,c
 14672  003FA4  0012               	return		;funcret
 14673  003FA6                     __end_of_halfSecDelay:
 14674                           	opt stack 0
 14675                           tblptru	equ	0xFF8
 14676                           tblptrh	equ	0xFF7
 14677                           tblptrl	equ	0xFF6
 14678                           tablat	equ	0xFF5
 14679                           prodh	equ	0xFF4
 14680                           prodl	equ	0xFF3
 14681                           intcon	equ	0xFF2
 14682                           intcon2	equ	0xFF1
 14683                           indf0	equ	0xFEF
 14684                           postinc0	equ	0xFEE
 14685                           fsr0h	equ	0xFEA
 14686                           fsr0l	equ	0xFE9
 14687                           wreg	equ	0xFE8
 14688                           postinc1	equ	0xFE6
 14689                           postdec1	equ	0xFE5
 14690                           plusw1	equ	0xFE3
 14691                           fsr1h	equ	0xFE2
 14692                           fsr1l	equ	0xFE1
 14693                           indf2	equ	0xFDF
 14694                           postinc2	equ	0xFDE
 14695                           postdec2	equ	0xFDD
 14696                           fsr2h	equ	0xFDA
 14697                           fsr2l	equ	0xFD9
 14698                           status	equ	0xFD8
 14699                           
 14700 ;; *************** function _option_Refresh *****************
 14701 ;; Defined at:
 14702 ;;		line 860 in file "FinalProject.c"
 14703 ;; Parameters:    Size  Location     Type
 14704 ;;		None
 14705 ;; Auto vars:     Size  Location     Type
 14706 ;;		None
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  1    wreg      void 
 14709 ;; Registers used:
 14710 ;;		None
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14716 ;;      Params:         0       0       0       0       0       0       0
 14717 ;;      Locals:         0       0       0       0       0       0       0
 14718 ;;      Temps:          0       0       0       0       0       0       0
 14719 ;;      Totals:         0       0       0       0       0       0       0
 14720 ;;Total ram usage:        0 bytes
 14721 ;; Hardware stack levels used:    1
 14722 ;; Hardware stack levels required when called:   10
 14723 ;; This function calls:
 14724 ;;		Nothing
 14725 ;; This function is called by:
 14726 ;;		_mainScreen
 14727 ;; This function uses a non-reentrant model
 14728 ;;
 14729                           
 14730                           	psect	text39
 14731  004232                     __ptext39:
 14732                           	opt stack 0
 14733  004232                     _option_Refresh:
 14734                           	opt stack 16
 14735                           
 14736                           ;incstack = 0
 14737  004232  0012               	return		;funcret
 14738  004234                     __end_of_option_Refresh:
 14739                           	opt stack 0
 14740                           tblptru	equ	0xFF8
 14741                           tblptrh	equ	0xFF7
 14742                           tblptrl	equ	0xFF6
 14743                           tablat	equ	0xFF5
 14744                           prodh	equ	0xFF4
 14745                           prodl	equ	0xFF3
 14746                           intcon	equ	0xFF2
 14747                           intcon2	equ	0xFF1
 14748                           indf0	equ	0xFEF
 14749                           postinc0	equ	0xFEE
 14750                           fsr0h	equ	0xFEA
 14751                           fsr0l	equ	0xFE9
 14752                           wreg	equ	0xFE8
 14753                           postinc1	equ	0xFE6
 14754                           postdec1	equ	0xFE5
 14755                           plusw1	equ	0xFE3
 14756                           fsr1h	equ	0xFE2
 14757                           fsr1l	equ	0xFE1
 14758                           indf2	equ	0xFDF
 14759                           postinc2	equ	0xFDE
 14760                           postdec2	equ	0xFDD
 14761                           fsr2h	equ	0xFDA
 14762                           fsr2l	equ	0xFD9
 14763                           status	equ	0xFD8
 14764                           
 14765 ;; *************** function _option_PIR *****************
 14766 ;; Defined at:
 14767 ;;		line 670 in file "FinalProject.c"
 14768 ;; Parameters:    Size  Location     Type
 14769 ;;		None
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;		None
 14772 ;; Return value:  Size  Location     Type
 14773 ;;                  1    wreg      void 
 14774 ;; Registers used:
 14775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+3, btemp+4
      +, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblptru, prodl, pr
      +odh, bsr, cstack
 14776 ;; Tracked objects:
 14777 ;;		On entry : 0/0
 14778 ;;		On exit  : 0/0
 14779 ;;		Unchanged: 0/0
 14780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14781 ;;      Params:         0       0       0       0       0       0       0
 14782 ;;      Locals:         0       0       0       0       0       0       0
 14783 ;;      Temps:          0       0       0       0       0       0       0
 14784 ;;      Totals:         0       0       0       0       0       0       0
 14785 ;;Total ram usage:        0 bytes
 14786 ;; Hardware stack levels used:    1
 14787 ;; Hardware stack levels required when called:   13
 14788 ;; This function calls:
 14789 ;;		_choiceKeypad
 14790 ;;		_halfSecDelay
 14791 ;;		_initialScreen
 14792 ;;		_initialize_PIR
 14793 ;;		_mainScreen
 14794 ;;		_my_print
 14795 ;;		_reception
 14796 ;;		_write_EEPROM
 14797 ;; This function is called by:
 14798 ;;		_mainScreen
 14799 ;; This function uses a non-reentrant model
 14800 ;;
 14801                           
 14802                           	psect	text40
 14803  002C9C                     __ptext40:
 14804                           	opt stack 0
 14805  002C9C                     _option_PIR:
 14806                           	opt stack 13
 14807  002C9C                     
 14808                           ;FinalProject.c: 673: {
 14809                           ;FinalProject.c: 674: initialScreen();
 14810  002C9C  ECFC  F01F         	call	_initialScreen	;wreg free
 14811                           
 14812                           ;FinalProject.c: 675: my_print("\n\r*********       PIR Sensor Alarm Menu           ****
      +                          **********");
 14813  002CA0  0E4D               	movlw	low STR_55
 14814  002CA2  6EE6               	movwf	postinc1,c
 14815  002CA4  0E76               	movlw	high STR_55
 14816  002CA6  6EE6               	movwf	postinc1,c
 14817  002CA8  ECF8  F01E         	call	_my_print	;wreg free
 14818                           
 14819                           ;FinalProject.c: 676: my_print("\n\rSelect One of the Following:");
 14820  002CAC  0E1E               	movlw	low STR_32
 14821  002CAE  6EE6               	movwf	postinc1,c
 14822  002CB0  0E7E               	movlw	high STR_32
 14823  002CB2  6EE6               	movwf	postinc1,c
 14824  002CB4  ECF8  F01E         	call	_my_print	;wreg free
 14825                           
 14826                           ;FinalProject.c: 677: my_print("\n\r                 1.Enable PIR Sensor Alarm");
 14827  002CB8  0EE2               	movlw	low STR_57
 14828  002CBA  6EE6               	movwf	postinc1,c
 14829  002CBC  0E7A               	movlw	high STR_57
 14830  002CBE  6EE6               	movwf	postinc1,c
 14831  002CC0  ECF8  F01E         	call	_my_print	;wreg free
 14832                           
 14833                           ;FinalProject.c: 678: my_print("\n\r                 2.Disable PIR Sensor Alarm");
 14834  002CC4  0EB4               	movlw	low STR_58
 14835  002CC6  6EE6               	movwf	postinc1,c
 14836  002CC8  0E7A               	movlw	high STR_58
 14837  002CCA  6EE6               	movwf	postinc1,c
 14838  002CCC  ECF8  F01E         	call	_my_print	;wreg free
 14839                           
 14840                           ;FinalProject.c: 679: my_print("\n\r                 0.Return to Main Menu");
 14841  002CD0  0EBC               	movlw	low STR_44
 14842  002CD2  6EE6               	movwf	postinc1,c
 14843  002CD4  0E7B               	movlw	high STR_44
 14844  002CD6  6EE6               	movwf	postinc1,c
 14845  002CD8  ECF8  F01E         	call	_my_print	;wreg free
 14846                           
 14847                           ;FinalProject.c: 681: my_print("\n\rInput: ");
 14848  002CDC  0ECD               	movlw	low STR_39
 14849  002CDE  6EE6               	movwf	postinc1,c
 14850  002CE0  0E7F               	movlw	high STR_39
 14851  002CE2  6EE6               	movwf	postinc1,c
 14852  002CE4  ECF8  F01E         	call	_my_print	;wreg free
 14853                           
 14854                           ;FinalProject.c: 682: halfSecDelay();
 14855  002CE8  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14856                           
 14857                           ;FinalProject.c: 684: if(PORTBbits.RB4 == 1)
 14858  002CEC  A881               	btfss	3969,4,c	;volatile
 14859  002CEE  D013               	goto	l6771
 14860                           
 14861                           ;FinalProject.c: 685: {
 14862                           ;FinalProject.c: 686: choiceKeypad();
 14863  002CF0  EC85  F01D         	call	_choiceKeypad	;wreg free
 14864  002CF4                     l340:
 14865  002CF4  A2AC               	btfss	4012,1,c	;volatile
 14866  002CF6  D7FE               	goto	l340
 14867                           
 14868                           ;FinalProject.c: 688: TXREG = keypadValue;
 14869  002CF8  C0E0  FFAD         	movff	_keypadValue,4013	;volatile
 14870                           
 14871                           ;FinalProject.c: 689: choice = keypadValue;
 14872  002CFC  C0E0  F0DF         	movff	_keypadValue,_choice
 14873                           
 14874                           ;FinalProject.c: 690: halfSecDelay();
 14875  002D00  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14876                           
 14877                           ;FinalProject.c: 691: while(keypadValue != 'A'){
 14878  002D04  D002               	goto	l6769
 14879  002D06                     l6767:
 14880                           
 14881                           ;FinalProject.c: 692: choiceKeypad();
 14882  002D06  EC85  F01D         	call	_choiceKeypad	;wreg free
 14883  002D0A                     l6769:
 14884  002D0A  0E41               	movlw	65
 14885  002D0C  0100               	movlb	0	; () banked
 14886  002D0E  19E0               	xorwf	_keypadValue& (0+255),w,b
 14887  002D10  B4D8               	btfsc	status,2,c
 14888  002D12  D00E               	goto	l6775
 14889  002D14  D7F8               	goto	l6767
 14890  002D16                     l6771:
 14891                           
 14892                           ;FinalProject.c: 695: else
 14893                           ;FinalProject.c: 696: {
 14894                           ;FinalProject.c: 697: choice = reception();
 14895  002D16  ECF3  F020         	call	_reception	;wreg free
 14896  002D1A  503A               	movf	btemp,w,c
 14897  002D1C  0100               	movlb	0	; () banked
 14898  002D1E  6FDF               	movwf	_choice& (0+255),b
 14899  002D20                     l347:
 14900  002D20  A2AC               	btfss	4012,1,c	;volatile
 14901  002D22  D7FE               	goto	l347
 14902                           
 14903                           ;FinalProject.c: 699: TXREG = choice;
 14904  002D24  C0DF  FFAD         	movff	_choice,4013	;volatile
 14905  002D28                     l6773:
 14906  002D28  0E0D               	movlw	13
 14907  002D2A  18AE               	xorwf	4014,w,c	;volatile
 14908  002D2C  A4D8               	btfss	status,2,c
 14909  002D2E  D7FC               	goto	l6773
 14910  002D30                     l6775:
 14911                           
 14912                           ;FinalProject.c: 701: }
 14913                           ;FinalProject.c: 703: flag = 0;
 14914  002D30  0E00               	movlw	0
 14915  002D32  0100               	movlb	0	; () banked
 14916  002D34  6FDC               	movwf	(_flag+1)& (0+255),b
 14917  002D36  0E00               	movlw	0
 14918  002D38  6FDB               	movwf	_flag& (0+255),b
 14919                           
 14920                           ; BSR set to: 0
 14921                           ;FinalProject.c: 705: if (choice == '0')
 14922  002D3A  0E30               	movlw	48
 14923  002D3C  0100               	movlb	0	; () banked
 14924  002D3E  19DF               	xorwf	_choice& (0+255),w,b
 14925  002D40  A4D8               	btfss	status,2,c
 14926  002D42  D003               	goto	l6781
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;FinalProject.c: 706: {
 14930                           ;FinalProject.c: 707: mainScreen();
 14931  002D44  ECDA  F009         	call	_mainScreen	;wreg free
 14932                           
 14933                           ;FinalProject.c: 708: }
 14934  002D48  D05F               	goto	l6835
 14935  002D4A                     l6781:
 14936                           
 14937                           ; BSR set to: 0
 14938                           ;FinalProject.c: 709: else if(choice == '1')
 14939  002D4A  0E31               	movlw	49
 14940  002D4C  0100               	movlb	0	; () banked
 14941  002D4E  19DF               	xorwf	_choice& (0+255),w,b
 14942  002D50  A4D8               	btfss	status,2,c
 14943  002D52  D022               	goto	l6803
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;FinalProject.c: 710: {
 14947                           ;FinalProject.c: 711: initialScreen();
 14948  002D54  ECFC  F01F         	call	_initialScreen	;wreg free
 14949                           
 14950                           ;FinalProject.c: 712: initialize_PIR();
 14951  002D58  ECFE  F020         	call	_initialize_PIR	;wreg free
 14952                           
 14953                           ;FinalProject.c: 713: INTCONbits.INT0IE = 1;
 14954  002D5C  88F2               	bsf	intcon,4,c	;volatile
 14955                           
 14956                           ;FinalProject.c: 714: write_EEPROM(PIRStatusAddr,'E');
 14957  002D5E  0E45               	movlw	69
 14958  002D60  6EE6               	movwf	postinc1,c
 14959  002D62  C0EA  FFE6         	movff	_PIRStatusAddr,postinc1
 14960  002D66  C0EB  FFE6         	movff	_PIRStatusAddr+1,postinc1
 14961  002D6A  EC97  F020         	call	_write_EEPROM	;wreg free
 14962                           
 14963                           ;FinalProject.c: 715: my_print("\n\r PIR Sensor Alarm Enabled.\n\r");
 14964  002D6E  0EE0               	movlw	low STR_61
 14965  002D70  6EE6               	movwf	postinc1,c
 14966  002D72  0E7D               	movlw	high STR_61
 14967  002D74  6EE6               	movwf	postinc1,c
 14968  002D76  ECF8  F01E         	call	_my_print	;wreg free
 14969                           
 14970                           ;FinalProject.c: 716: statusOfPir = "ACTIVE";
 14971  002D7A  0EE2               	movlw	low (STR_1+2)
 14972  002D7C  0100               	movlb	0	; () banked
 14973  002D7E  6FF0               	movwf	_statusOfPir& (0+255),b
 14974  002D80  0E7F               	movlw	high (STR_1+2)
 14975  002D82  0100               	movlb	0	; () banked
 14976  002D84  6FF1               	movwf	(_statusOfPir+1)& (0+255),b
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;FinalProject.c: 717: halfSecDelay();
 14980  002D86  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14981                           
 14982                           ;FinalProject.c: 718: halfSecDelay();
 14983  002D8A  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14984                           
 14985                           ;FinalProject.c: 719: halfSecDelay();
 14986  002D8E  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14987                           
 14988                           ;FinalProject.c: 720: halfSecDelay();
 14989  002D92  ECA6  F01F         	call	_halfSecDelay	;wreg free
 14990                           
 14991                           ;FinalProject.c: 723: }
 14992  002D96  D038               	goto	l6835
 14993  002D98                     l6803:
 14994                           
 14995                           ;FinalProject.c: 724: else if(choice == '2')
 14996  002D98  0E32               	movlw	50
 14997  002D9A  0100               	movlb	0	; () banked
 14998  002D9C  19DF               	xorwf	_choice& (0+255),w,b
 14999  002D9E  A4D8               	btfss	status,2,c
 15000  002DA0  D020               	goto	l6823
 15001                           
 15002                           ; BSR set to: 0
 15003                           ;FinalProject.c: 725: {
 15004                           ;FinalProject.c: 726: statusOfPir = "INACTIVE";
 15005  002DA2  0EE0               	movlw	low STR_1
 15006  002DA4  0100               	movlb	0	; () banked
 15007  002DA6  6FF0               	movwf	_statusOfPir& (0+255),b
 15008  002DA8  0E7F               	movlw	high STR_1
 15009  002DAA  0100               	movlb	0	; () banked
 15010  002DAC  6FF1               	movwf	(_statusOfPir+1)& (0+255),b
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;FinalProject.c: 727: initialScreen();
 15014  002DAE  ECFC  F01F         	call	_initialScreen	;wreg free
 15015                           
 15016                           ;FinalProject.c: 728: INTCONbits.INT0IE = 0;
 15017  002DB2  98F2               	bcf	intcon,4,c	;volatile
 15018                           
 15019                           ;FinalProject.c: 729: write_EEPROM(PIRStatusAddr,'D');
 15020  002DB4  0E44               	movlw	68
 15021  002DB6  6EE6               	movwf	postinc1,c
 15022  002DB8  C0EA  FFE6         	movff	_PIRStatusAddr,postinc1
 15023  002DBC  C0EB  FFE6         	movff	_PIRStatusAddr+1,postinc1
 15024  002DC0  EC97  F020         	call	_write_EEPROM	;wreg free
 15025                           
 15026                           ;FinalProject.c: 730: my_print("\n\r PIR Sensor Alarm Disabled.\n\r");
 15027  002DC4  0EA0               	movlw	low STR_64
 15028  002DC6  6EE6               	movwf	postinc1,c
 15029  002DC8  0E7D               	movlw	high STR_64
 15030  002DCA  6EE6               	movwf	postinc1,c
 15031  002DCC  ECF8  F01E         	call	_my_print	;wreg free
 15032                           
 15033                           ;FinalProject.c: 731: halfSecDelay();
 15034  002DD0  ECA6  F01F         	call	_halfSecDelay	;wreg free
 15035                           
 15036                           ;FinalProject.c: 732: halfSecDelay();
 15037  002DD4  ECA6  F01F         	call	_halfSecDelay	;wreg free
 15038                           
 15039                           ;FinalProject.c: 733: halfSecDelay();
 15040  002DD8  ECA6  F01F         	call	_halfSecDelay	;wreg free
 15041                           
 15042                           ;FinalProject.c: 734: halfSecDelay();
 15043  002DDC  ECA6  F01F         	call	_halfSecDelay	;wreg free
 15044                           
 15045                           ;FinalProject.c: 736: }
 15046  002DE0  D013               	goto	l6835
 15047  002DE2                     l6823:
 15048                           
 15049                           ;FinalProject.c: 738: else
 15050                           ;FinalProject.c: 739: {
 15051                           ;FinalProject.c: 740: my_print("Invalid Selection.\n\r");
 15052  002DE2  0E4D               	movlw	low (STR_40+2)
 15053  002DE4  6EE6               	movwf	postinc1,c
 15054  002DE6  0E7F               	movlw	high (STR_40+2)
 15055  002DE8  6EE6               	movwf	postinc1,c
 15056  002DEA  ECF8  F01E         	call	_my_print	;wreg free
 15057                           
 15058                           ;FinalProject.c: 741: halfSecDelay();
 15059  002DEE  ECA6  F01F         	call	_halfSecDelay	;wreg free
 15060                           
 15061                           ;FinalProject.c: 742: halfSecDelay();
 15062  002DF2  ECA6  F01F         	call	_halfSecDelay	;wreg free
 15063                           
 15064                           ;FinalProject.c: 743: halfSecDelay();
 15065  002DF6  ECA6  F01F         	call	_halfSecDelay	;wreg free
 15066                           
 15067                           ;FinalProject.c: 744: halfSecDelay();
 15068  002DFA  ECA6  F01F         	call	_halfSecDelay	;wreg free
 15069                           
 15070                           ;FinalProject.c: 745: flag = 1;
 15071  002DFE  0E00               	movlw	0
 15072  002E00  0100               	movlb	0	; () banked
 15073  002E02  6FDC               	movwf	(_flag+1)& (0+255),b
 15074  002E04  0E01               	movlw	1
 15075  002E06  6FDB               	movwf	_flag& (0+255),b
 15076  002E08                     l6835:
 15077                           
 15078                           ;FinalProject.c: 746: }
 15079                           ;FinalProject.c: 748: }while(flag == 1);
 15080  002E08  0100               	movlb	0	; () banked
 15081  002E0A  05DB               	decf	_flag& (0+255),w,b
 15082  002E0C  0100               	movlb	0	; () banked
 15083  002E0E  11DC               	iorwf	(_flag+1)& (0+255),w,b
 15084  002E10  A4D8               	btfss	status,2,c
 15085  002E12  0012               	return	
 15086  002E14  D743               	goto	l6757
 15087  002E16                     __end_of_option_PIR:
 15088                           	opt stack 0
 15089                           tblptru	equ	0xFF8
 15090                           tblptrh	equ	0xFF7
 15091                           tblptrl	equ	0xFF6
 15092                           tablat	equ	0xFF5
 15093                           prodh	equ	0xFF4
 15094                           prodl	equ	0xFF3
 15095                           intcon	equ	0xFF2
 15096                           intcon2	equ	0xFF1
 15097                           indf0	equ	0xFEF
 15098                           postinc0	equ	0xFEE
 15099                           fsr0h	equ	0xFEA
 15100                           fsr0l	equ	0xFE9
 15101                           wreg	equ	0xFE8
 15102                           postinc1	equ	0xFE6
 15103                           postdec1	equ	0xFE5
 15104                           plusw1	equ	0xFE3
 15105                           fsr1h	equ	0xFE2
 15106                           fsr1l	equ	0xFE1
 15107                           indf2	equ	0xFDF
 15108                           postinc2	equ	0xFDE
 15109                           postdec2	equ	0xFDD
 15110                           fsr2h	equ	0xFDA
 15111                           fsr2l	equ	0xFD9
 15112                           status	equ	0xFD8
 15113                           
 15114 ;; *************** function _reception *****************
 15115 ;; Defined at:
 15116 ;;		line 217 in file "FinalProject.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;		None
 15119 ;; Auto vars:     Size  Location     Type
 15120 ;;  val             1  [STACK] unsigned char 
 15121 ;; Return value:  Size  Location     Type
 15122 ;;                  1  [STACK] unsigned char 
 15123 ;; Registers used:
 15124 ;;		wreg, fsr1l, fsr1h, btemp
 15125 ;; Tracked objects:
 15126 ;;		On entry : 0/0
 15127 ;;		On exit  : 0/0
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15130 ;;      Params:         0       0       0       0       0       0       0
 15131 ;;      Locals:         0       0       0       0       0       0       0
 15132 ;;      Temps:          0       0       0       0       0       0       0
 15133 ;;      Totals:         0       0       0       0       0       0       0
 15134 ;;Total ram usage:        0 bytes
 15135 ;; Hardware stack levels used:    1
 15136 ;; Hardware stack levels required when called:   10
 15137 ;; This function calls:
 15138 ;;		Nothing
 15139 ;; This function is called by:
 15140 ;;		_setUpPassword
 15141 ;;		_existingUserLogin
 15142 ;;		_mainScreen
 15143 ;;		_option_passcode
 15144 ;;		_option_PIR
 15145 ;;		_option_TempSensor
 15146 ;;		_My_ISR_High
 15147 ;;		_My_ISR_Low_TempSensor
 15148 ;;		_PIR_reset
 15149 ;;		_temp_reset
 15150 ;;		_updateThreshold
 15151 ;; This function uses a reentrant model
 15152 ;;
 15153                           
 15154                           	psect	text41
 15155  0041E6                     __ptext41:
 15156                           	opt stack 0
 15157  0041E6                     _reception:
 15158                           	opt stack 0
 15159                           
 15160                           ; BSR set to: 0
 15161                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 15162  0041E6  52E6               	movf	postinc1,f,c
 15163  0041E8                     l193:
 15164  0041E8  AA9E               	btfss	3998,5,c	;volatile
 15165  0041EA  D7FE               	goto	l193
 15166                           
 15167                           ;FinalProject.c: 220: char val = RCREG;
 15168                           ;stkvar	reception@val @ sp[(-1)+0]
 15169  0041EC  0EFF               	movlw	-1
 15170  0041EE  CFAE FFE3          	movff	4014,plusw1	;volatile
 15171                           
 15172                           ;FinalProject.c: 221: return val;
 15173                           ;stkvar	reception@val @ sp[(-1)+0]
 15174  0041F2  0EFF               	movlw	-1
 15175  0041F4  CFE3 F03A          	movff	plusw1,btemp
 15176                           
 15177                           ; _reception: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 15178  0041F8  52E5               	movf	postdec1,f,c
 15179  0041FA  0012               	return		;funcret
 15180  0041FC                     __end_of_reception:
 15181                           	opt stack 0
 15182                           tblptru	equ	0xFF8
 15183                           tblptrh	equ	0xFF7
 15184                           tblptrl	equ	0xFF6
 15185                           tablat	equ	0xFF5
 15186                           prodh	equ	0xFF4
 15187                           prodl	equ	0xFF3
 15188                           intcon	equ	0xFF2
 15189                           intcon2	equ	0xFF1
 15190                           indf0	equ	0xFEF
 15191                           postinc0	equ	0xFEE
 15192                           fsr0h	equ	0xFEA
 15193                           fsr0l	equ	0xFE9
 15194                           wreg	equ	0xFE8
 15195                           postinc1	equ	0xFE6
 15196                           postdec1	equ	0xFE5
 15197                           plusw1	equ	0xFE3
 15198                           fsr1h	equ	0xFE2
 15199                           fsr1l	equ	0xFE1
 15200                           indf2	equ	0xFDF
 15201                           postinc2	equ	0xFDE
 15202                           postdec2	equ	0xFDD
 15203                           fsr2h	equ	0xFDA
 15204                           fsr2l	equ	0xFD9
 15205                           status	equ	0xFD8
 15206                           
 15207 ;; *************** function _initialScreen *****************
 15208 ;; Defined at:
 15209 ;;		line 391 in file "FinalProject.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;		None
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;		None
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1  [STACK] void 
 15216 ;; Registers used:
 15217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15223 ;;      Params:         0       0       0       0       0       0       0
 15224 ;;      Locals:         0       0       0       0       0       0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0
 15226 ;;      Totals:         0       0       0       0       0       0       0
 15227 ;;Total ram usage:        0 bytes
 15228 ;; Hardware stack levels used:    1
 15229 ;; Hardware stack levels required when called:   12
 15230 ;; This function calls:
 15231 ;;		_clearScreen
 15232 ;;		_my_print
 15233 ;; This function is called by:
 15234 ;;		_main
 15235 ;;		_setUpPassword
 15236 ;;		_mainScreen
 15237 ;;		_option_passcode
 15238 ;;		_option_PIR
 15239 ;;		_option_TempSensor
 15240 ;;		_My_ISR_High
 15241 ;;		_My_ISR_Low_TempSensor
 15242 ;;		_PIR_reset
 15243 ;;		_temp_reset
 15244 ;; This function uses a reentrant model
 15245 ;;
 15246                           
 15247                           	psect	text42
 15248  003FF8                     __ptext42:
 15249                           	opt stack 0
 15250  003FF8                     _initialScreen:
 15251                           	opt stack 4
 15252                           
 15253                           ;FinalProject.c: 393: clearScreen();
 15254                           
 15255                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 15256                           ;incstack = 0
 15257  003FF8  EC07  F021         	call	_clearScreen	;wreg free
 15258                           
 15259                           ;FinalProject.c: 394: my_print("\n\r****************************************************
      +                          ********");
 15260  003FFC  0E86               	movlw	low STR_13
 15261  003FFE  6EE6               	movwf	postinc1,c
 15262  004000  0E78               	movlw	high STR_13
 15263  004002  6EE6               	movwf	postinc1,c
 15264  004004  ECF8  F01E         	call	_my_print	;wreg free
 15265                           
 15266                           ;FinalProject.c: 395: my_print("\n\r*                     Alarm System                  
      +                                 *");
 15267  004008  0E4B               	movlw	low STR_14
 15268  00400A  6EE6               	movwf	postinc1,c
 15269  00400C  0E77               	movlw	high STR_14
 15270  00400E  6EE6               	movwf	postinc1,c
 15271  004010  ECF8  F01E         	call	_my_print	;wreg free
 15272                           
 15273                           ;FinalProject.c: 396: my_print("\n\r*                   Embedded Systems 1              
      +                                 *");
 15274  004014  0EC9               	movlw	low STR_15
 15275  004016  6EE6               	movwf	postinc1,c
 15276  004018  0E77               	movlw	high STR_15
 15277  00401A  6EE6               	movwf	postinc1,c
 15278  00401C  ECF8  F01E         	call	_my_print	;wreg free
 15279                           
 15280                           ;FinalProject.c: 397: my_print("\n\r*                          Lab7                     
      +                                 *");
 15281  004020  0E0C               	movlw	low STR_16
 15282  004022  6EE6               	movwf	postinc1,c
 15283  004024  0E77               	movlw	high STR_16
 15284  004026  6EE6               	movwf	postinc1,c
 15285  004028  ECF8  F01E         	call	_my_print	;wreg free
 15286                           
 15287                           ;FinalProject.c: 398: my_print("\n\r*                       Shrey Aryal                 
      +                                 *");
 15288  00402C  0E8A               	movlw	low STR_17
 15289  00402E  6EE6               	movwf	postinc1,c
 15290  004030  0E77               	movlw	high STR_17
 15291  004032  6EE6               	movwf	postinc1,c
 15292  004034  ECF8  F01E         	call	_my_print	;wreg free
 15293                           
 15294                           ;FinalProject.c: 399: my_print("\n\r****************************************************
      +                          ********");
 15295  004038  0E86               	movlw	low STR_13
 15296  00403A  6EE6               	movwf	postinc1,c
 15297  00403C  0E78               	movlw	high STR_13
 15298  00403E  6EE6               	movwf	postinc1,c
 15299  004040  ECF8  F01E         	call	_my_print	;wreg free
 15300                           
 15301                           ; _initialScreen: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 15302  004044  0012               	return		;funcret
 15303  004046                     __end_of_initialScreen:
 15304                           	opt stack 0
 15305                           tblptru	equ	0xFF8
 15306                           tblptrh	equ	0xFF7
 15307                           tblptrl	equ	0xFF6
 15308                           tablat	equ	0xFF5
 15309                           prodh	equ	0xFF4
 15310                           prodl	equ	0xFF3
 15311                           intcon	equ	0xFF2
 15312                           intcon2	equ	0xFF1
 15313                           indf0	equ	0xFEF
 15314                           postinc0	equ	0xFEE
 15315                           fsr0h	equ	0xFEA
 15316                           fsr0l	equ	0xFE9
 15317                           wreg	equ	0xFE8
 15318                           postinc1	equ	0xFE6
 15319                           postdec1	equ	0xFE5
 15320                           plusw1	equ	0xFE3
 15321                           fsr1h	equ	0xFE2
 15322                           fsr1l	equ	0xFE1
 15323                           indf2	equ	0xFDF
 15324                           postinc2	equ	0xFDE
 15325                           postdec2	equ	0xFDD
 15326                           fsr2h	equ	0xFDA
 15327                           fsr2l	equ	0xFD9
 15328                           status	equ	0xFD8
 15329                           
 15330 ;; *************** function _my_print *****************
 15331 ;; Defined at:
 15332 ;;		line 203 in file "FinalProject.c"
 15333 ;; Parameters:    Size  Location     Type
 15334 ;;  message         2  [STACK] PTR unsigned char 
 15335 ;;		 -> STR_126(9), STR_125(7), STR_124(9), STR_123(7), 
 15336 ;;		 -> STR_122(9), STR_121(7), STR_120(57), STR_119(2), 
 15337 ;;		 -> STR_118(2), STR_117(42), STR_116(63), STR_115(2), 
 15338 ;;		 -> STR_114(2), STR_113(42), STR_112(63), STR_111(28), 
 15339 ;;		 -> STR_110(23), STR_109(39), STR_108(44), STR_107(20), 
 15340 ;;		 -> STR_106(7), STR_105(9), STR_104(40), STR_103(39), 
 15341 ;;		 -> STR_102(7), STR_101(10), STR_100(29), STR_99(40), 
 15342 ;;		 -> STR_98(10), STR_97(21), STR_96(54), STR_95(28), 
 15343 ;;		 -> STR_94(44), STR_93(63), STR_92(24), STR_91(7), 
 15344 ;;		 -> STR_90(31), STR_89(7), STR_88(36), STR_87(20), 
 15345 ;;		 -> STR_86(9), STR_85(32), STR_84(7), STR_83(31), 
 15346 ;;		 -> STR_82(10), STR_81(29), STR_80(32), STR_79(7), 
 15347 ;;		 -> STR_78(9), STR_77(23), STR_76(40), STR_75(9), 
 15348 ;;		 -> STR_74(7), STR_73(39), STR_72(10), STR_71(41), 
 15349 ;;		 -> STR_70(63), STR_69(54), STR_68(53), STR_67(31), 
 15350 ;;		 -> STR_66(65), STR_65(21), STR_64(32), STR_63(9), 
 15351 ;;		 -> STR_62(7), STR_61(31), STR_60(10), STR_59(41), 
 15352 ;;		 -> STR_58(46), STR_57(45), STR_56(31), STR_55(65), 
 15353 ;;		 -> STR_54(20), STR_53(48), STR_52(36), STR_51(2), 
 15354 ;;		 -> STR_50(2), STR_49(31), STR_48(2), STR_47(2), 
 15355 ;;		 -> STR_46(26), STR_45(10), STR_44(41), STR_43(37), 
 15356 ;;		 -> STR_42(31), STR_41(63), STR_40(23), STR_39(10), 
 15357 ;;		 -> STR_38(26), STR_37(57), STR_36(51), STR_35(43), 
 15358 ;;		 -> STR_34(35), STR_33(27), STR_32(31), STR_31(63), 
 15359 ;;		 -> STR_30(65), STR_29(3), STR_28(36), STR_27(36), 
 15360 ;;		 -> mainScreen@tempThresholdArray(2), STR_25(36), tempArray(6), STR_23(36), 
 15361 ;;		 -> STR_22(36), STR_21(63), STR_20(31), STR_19(3), 
 15362 ;;		 -> STR_18(63), STR_17(63), STR_16(63), STR_15(63), 
 15363 ;;		 -> STR_14(63), STR_13(63), STR_12(5), STR_11(23), 
 15364 ;;		 -> STR_10(2), STR_9(23), STR_8(24), STR_7(2), 
 15365 ;;		 -> STR_6(27), STR_5(28), STR_4(58), STR_3(9), 
 15366 ;;		 -> STR_2(9), STR_1(9), 
 15367 ;; Auto vars:     Size  Location     Type
 15368 ;;		None
 15369 ;; Return value:  Size  Location     Type
 15370 ;;                  1  [STACK] void 
 15371 ;; Registers used:
 15372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 15373 ;; Tracked objects:
 15374 ;;		On entry : 0/0
 15375 ;;		On exit  : 0/0
 15376 ;;		Unchanged: 0/0
 15377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15378 ;;      Params:         0       0       0       0       0       0       0
 15379 ;;      Locals:         0       0       0       0       0       0       0
 15380 ;;      Temps:          0       0       0       0       0       0       0
 15381 ;;      Totals:         0       0       0       0       0       0       0
 15382 ;;Total ram usage:        0 bytes
 15383 ;; Hardware stack levels used:    1
 15384 ;; Hardware stack levels required when called:   10
 15385 ;; This function calls:
 15386 ;;		Nothing
 15387 ;; This function is called by:
 15388 ;;		_setUpPassword
 15389 ;;		_existingUserLogin
 15390 ;;		_verifyPassword
 15391 ;;		_clearScreen
 15392 ;;		_initialScreen
 15393 ;;		_mainScreen
 15394 ;;		_option_passcode
 15395 ;;		_option_PIR
 15396 ;;		_option_TempSensor
 15397 ;;		_My_ISR_High
 15398 ;;		_My_ISR_Low_TempSensor
 15399 ;;		_PIR_reset
 15400 ;;		_temp_reset
 15401 ;;		_updateThreshold
 15402 ;; This function uses a reentrant model
 15403 ;;
 15404                           
 15405                           	psect	text43
 15406  003DF0                     __ptext43:
 15407                           	opt stack 0
 15408  003DF0                     _my_print:
 15409                           	opt stack 6
 15410                           
 15411                           ;FinalProject.c: 205: RCSTAbits.CREN = 0;
 15412                           
 15413                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0
 15414                           ;incstack = 0
 15415  003DF0  98AB               	bcf	4011,4,c	;volatile
 15416                           
 15417                           ;FinalProject.c: 206: while(*message)
 15418  003DF2  D025               	goto	l4741
 15419  003DF4                     l183:
 15420  003DF4  A2AC               	btfss	4012,1,c	;volatile
 15421  003DF6  D7FE               	goto	l183
 15422                           
 15423                           ;FinalProject.c: 209: TXREG = *message;
 15424                           ;stkvar	my_print@message @ sp[(0)+-2]
 15425  003DF8  0EFE               	movlw	-2
 15426  003DFA  CFE3 FFF6          	movff	plusw1,tblptrl
 15427  003DFE  0EFF               	movlw	-1
 15428  003E00  CFE3 FFF7          	movff	plusw1,tblptrh
 15429  003E04  0E05               	movlw	(high __ramtop+-1)
 15430  003E06  64F7               	cpfsgt	tblptrh,c
 15431  003E08  D003               	bra	u4897
 15432  003E0A  0008               	tblrd		*
 15433  003E0C  50F5               	movf	tablat,w,c
 15434  003E0E  D005               	bra	u4890
 15435  003E10                     u4897:
 15436  003E10  CFF6 FFE9          	movff	tblptrl,fsr0l
 15437  003E14  CFF7 FFEA          	movff	tblptrh,fsr0h
 15438  003E18  50EF               	movf	indf0,w,c
 15439  003E1A                     u4890:
 15440  003E1A  6EAD               	movwf	4013,c	;volatile
 15441  003E1C                     l186:
 15442  003E1C  B2AC               	btfsc	4012,1,c	;volatile
 15443  003E1E  D7FE               	goto	l186
 15444                           
 15445                           ;FinalProject.c: 211: message++;
 15446                           ;stkvar	my_print@message @ sp[(0)+-2]
 15447  003E20  0EFE               	movlw	-2
 15448  003E22  50E3               	movf	plusw1,w,c
 15449  003E24  0F01               	addlw	1
 15450  003E26  6E3A               	movwf	btemp,c
 15451  003E28  0EFE               	movlw	-2
 15452  003E2A  C03A  FFE3         	movff	btemp,plusw1
 15453  003E2E  6A3A               	clrf	btemp,c
 15454  003E30  0EFF               	movlw	-1
 15455  003E32  50E3               	movf	plusw1,w,c
 15456  003E34  203A               	addwfc	btemp,w,c
 15457  003E36  6E3A               	movwf	btemp,c
 15458  003E38  0EFF               	movlw	-1
 15459  003E3A  C03A  FFE3         	movff	btemp,plusw1
 15460  003E3E                     l4741:
 15461                           
 15462                           ;stkvar	my_print@message @ sp[(0)+-2]
 15463  003E3E  0EFE               	movlw	-2
 15464  003E40  CFE3 FFF6          	movff	plusw1,tblptrl
 15465  003E44  0EFF               	movlw	-1
 15466  003E46  CFE3 FFF7          	movff	plusw1,tblptrh
 15467  003E4A  0E05               	movlw	(high __ramtop+-1)
 15468  003E4C  64F7               	cpfsgt	tblptrh,c
 15469  003E4E  D003               	bra	u4917
 15470  003E50  0008               	tblrd		*
 15471  003E52  50F5               	movf	tablat,w,c
 15472  003E54  D005               	bra	u4910
 15473  003E56                     u4917:
 15474  003E56  CFF6 FFE9          	movff	tblptrl,fsr0l
 15475  003E5A  CFF7 FFEA          	movff	tblptrh,fsr0h
 15476  003E5E  50EF               	movf	indf0,w,c
 15477  003E60                     u4910:
 15478  003E60  0900               	iorlw	0
 15479  003E62  A4D8               	btfss	status,2,c
 15480  003E64  D7C7               	goto	l183
 15481                           
 15482                           ;FinalProject.c: 212: }
 15483                           ;FinalProject.c: 213: RCSTAbits.CREN = 1;
 15484  003E66  88AB               	bsf	4011,4,c	;volatile
 15485                           
 15486                           ; _my_print: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
 15487  003E68  52E5               	movf	postdec1,f,c
 15488  003E6A  52E5               	movf	postdec1,f,c
 15489  003E6C  0012               	return		;funcret
 15490  003E6E                     __end_of_my_print:
 15491                           	opt stack 0
 15492                           tblptru	equ	0xFF8
 15493                           tblptrh	equ	0xFF7
 15494                           tblptrl	equ	0xFF6
 15495                           tablat	equ	0xFF5
 15496                           prodh	equ	0xFF4
 15497                           prodl	equ	0xFF3
 15498                           intcon	equ	0xFF2
 15499                           intcon2	equ	0xFF1
 15500                           indf0	equ	0xFEF
 15501                           postinc0	equ	0xFEE
 15502                           fsr0h	equ	0xFEA
 15503                           fsr0l	equ	0xFE9
 15504                           wreg	equ	0xFE8
 15505                           postinc1	equ	0xFE6
 15506                           postdec1	equ	0xFE5
 15507                           plusw1	equ	0xFE3
 15508                           fsr1h	equ	0xFE2
 15509                           fsr1l	equ	0xFE1
 15510                           indf2	equ	0xFDF
 15511                           postinc2	equ	0xFDE
 15512                           postdec2	equ	0xFDD
 15513                           fsr2h	equ	0xFDA
 15514                           fsr2l	equ	0xFD9
 15515                           status	equ	0xFD8
 15516                           
 15517 ;; *************** function _choiceKeypad *****************
 15518 ;; Defined at:
 15519 ;;		line 1465 in file "FinalProject.c"
 15520 ;; Parameters:    Size  Location     Type
 15521 ;;		None
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;		None
 15524 ;; Return value:  Size  Location     Type
 15525 ;;                  1  [STACK] void 
 15526 ;; Registers used:
 15527 ;;		wreg, status,2
 15528 ;; Tracked objects:
 15529 ;;		On entry : 0/0
 15530 ;;		On exit  : 0/0
 15531 ;;		Unchanged: 0/0
 15532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15533 ;;      Params:         0       0       0       0       0       0       0
 15534 ;;      Locals:         0       0       0       0       0       0       0
 15535 ;;      Temps:          0       0       0       0       0       0       0
 15536 ;;      Totals:         0       0       0       0       0       0       0
 15537 ;;Total ram usage:        0 bytes
 15538 ;; Hardware stack levels used:    1
 15539 ;; Hardware stack levels required when called:   10
 15540 ;; This function calls:
 15541 ;;		Nothing
 15542 ;; This function is called by:
 15543 ;;		_mainScreen
 15544 ;;		_option_passcode
 15545 ;;		_option_PIR
 15546 ;;		_option_TempSensor
 15547 ;;		_My_ISR_High
 15548 ;;		_My_ISR_Low_TempSensor
 15549 ;;		_PIR_reset
 15550 ;;		_temp_reset
 15551 ;;		_updateThreshold
 15552 ;; This function uses a reentrant model
 15553 ;;
 15554                           
 15555                           	psect	text44
 15556  003B0A                     __ptext44:
 15557                           	opt stack 0
 15558  003B0A                     _choiceKeypad:
 15559                           	opt stack 6
 15560                           
 15561                           ;FinalProject.c: 1468: TRISD = 0b11110000;
 15562                           
 15563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 15564                           ;incstack = 0
 15565  003B0A  0EF0               	movlw	240
 15566  003B0C  6E95               	movwf	3989,c	;volatile
 15567  003B0E                     l577:
 15568                           
 15569                           ;FinalProject.c: 1471: PORTD = 1;;
 15570  003B0E  0E01               	movlw	1
 15571  003B10  6E83               	movwf	3971,c	;volatile
 15572                           
 15573                           ;FinalProject.c: 1472: if(PORTDbits.RD4==1)
 15574  003B12  A883               	btfss	3971,4,c	;volatile
 15575  003B14  D002               	goto	l578
 15576                           
 15577                           ;FinalProject.c: 1473: {
 15578                           ;FinalProject.c: 1474: keypadValue = '1';
 15579  003B16  0E31               	movlw	49
 15580  003B18  D041               	goto	L22
 15581  003B1A                     l578:
 15582                           
 15583                           ;FinalProject.c: 1477: else if(PORTDbits.RD5==1)
 15584  003B1A  AA83               	btfss	3971,5,c	;volatile
 15585  003B1C  D002               	goto	l581
 15586                           
 15587                           ;FinalProject.c: 1478: {
 15588                           ;FinalProject.c: 1479: keypadValue = '2';
 15589  003B1E  0E32               	movlw	50
 15590  003B20  D03D               	goto	L22
 15591  003B22                     l581:
 15592                           
 15593                           ;FinalProject.c: 1482: else if(PORTDbits.RD6==1)
 15594  003B22  AC83               	btfss	3971,6,c	;volatile
 15595  003B24  D002               	goto	l583
 15596                           
 15597                           ;FinalProject.c: 1483: {
 15598                           ;FinalProject.c: 1484: keypadValue = '3';
 15599  003B26  0E33               	movlw	51
 15600  003B28  D039               	goto	L22
 15601  003B2A                     l583:
 15602                           
 15603                           ;FinalProject.c: 1487: else if(PORTDbits.RD7==1)
 15604  003B2A  AE83               	btfss	3971,7,c	;volatile
 15605  003B2C  D002               	goto	l5003
 15606                           
 15607                           ;FinalProject.c: 1488: {
 15608                           ;FinalProject.c: 1489: keypadValue = 'A';
 15609  003B2E  0E41               	movlw	65
 15610  003B30  D035               	goto	L22
 15611  003B32                     l5003:
 15612                           
 15613                           ;FinalProject.c: 1491: }
 15614                           ;FinalProject.c: 1492: PORTD = 2;
 15615  003B32  0E02               	movlw	2
 15616  003B34  6E83               	movwf	3971,c	;volatile
 15617                           
 15618                           ;FinalProject.c: 1493: if(PORTDbits.RD4==1)
 15619  003B36  A883               	btfss	3971,4,c	;volatile
 15620  003B38  D002               	goto	l586
 15621                           
 15622                           ;FinalProject.c: 1494: {
 15623                           ;FinalProject.c: 1495: keypadValue = '4';
 15624  003B3A  0E34               	movlw	52
 15625  003B3C  D02F               	goto	L22
 15626  003B3E                     l586:
 15627                           
 15628                           ;FinalProject.c: 1498: else if(PORTDbits.RD5==1)
 15629  003B3E  AA83               	btfss	3971,5,c	;volatile
 15630  003B40  D002               	goto	l588
 15631                           
 15632                           ;FinalProject.c: 1499: {
 15633                           ;FinalProject.c: 1500: keypadValue = '5';
 15634  003B42  0E35               	movlw	53
 15635  003B44  D02B               	goto	L22
 15636  003B46                     l588:
 15637                           
 15638                           ;FinalProject.c: 1503: else if(PORTDbits.RD6==1)
 15639  003B46  AC83               	btfss	3971,6,c	;volatile
 15640  003B48  D002               	goto	l590
 15641                           
 15642                           ;FinalProject.c: 1504: {
 15643                           ;FinalProject.c: 1505: keypadValue = '6';
 15644  003B4A  0E36               	movlw	54
 15645  003B4C  D027               	goto	L22
 15646  003B4E                     l590:
 15647                           
 15648                           ;FinalProject.c: 1508: else if(PORTDbits.RD7==1)
 15649  003B4E  AE83               	btfss	3971,7,c	;volatile
 15650  003B50  D002               	goto	l5021
 15651                           
 15652                           ;FinalProject.c: 1509: {
 15653                           ;FinalProject.c: 1510: keypadValue = 'B';
 15654  003B52  0E42               	movlw	66
 15655  003B54  D023               	goto	L22
 15656  003B56                     l5021:
 15657                           
 15658                           ;FinalProject.c: 1512: }
 15659                           ;FinalProject.c: 1513: PORTD = 4;
 15660  003B56  0E04               	movlw	4
 15661  003B58  6E83               	movwf	3971,c	;volatile
 15662                           
 15663                           ;FinalProject.c: 1514: if(PORTDbits.RD4==1)
 15664  003B5A  A883               	btfss	3971,4,c	;volatile
 15665  003B5C  D002               	goto	l593
 15666                           
 15667                           ;FinalProject.c: 1515: {
 15668                           ;FinalProject.c: 1516: keypadValue = '7';
 15669  003B5E  0E37               	movlw	55
 15670  003B60  D01D               	goto	L22
 15671  003B62                     l593:
 15672                           
 15673                           ;FinalProject.c: 1519: else if(PORTDbits.RD5==1)
 15674  003B62  AA83               	btfss	3971,5,c	;volatile
 15675  003B64  D002               	goto	l595
 15676                           
 15677                           ;FinalProject.c: 1520: {
 15678                           ;FinalProject.c: 1521: keypadValue = '8';
 15679  003B66  0E38               	movlw	56
 15680  003B68  D019               	goto	L22
 15681  003B6A                     l595:
 15682                           
 15683                           ;FinalProject.c: 1524: else if(PORTDbits.RD6==1)
 15684  003B6A  AC83               	btfss	3971,6,c	;volatile
 15685  003B6C  D002               	goto	l597
 15686                           
 15687                           ;FinalProject.c: 1525: {
 15688                           ;FinalProject.c: 1526: keypadValue = '9';
 15689  003B6E  0E39               	movlw	57
 15690  003B70  D015               	goto	L22
 15691  003B72                     l597:
 15692                           
 15693                           ;FinalProject.c: 1529: else if(PORTDbits.RD7==1)
 15694  003B72  AE83               	btfss	3971,7,c	;volatile
 15695  003B74  D002               	goto	l5039
 15696                           
 15697                           ;FinalProject.c: 1530: {
 15698                           ;FinalProject.c: 1531: keypadValue = 'C';
 15699  003B76  0E43               	movlw	67
 15700  003B78  D011               	goto	L22
 15701  003B7A                     l5039:
 15702                           
 15703                           ;FinalProject.c: 1533: }
 15704                           ;FinalProject.c: 1534: PORTD = 8;
 15705  003B7A  0E08               	movlw	8
 15706  003B7C  6E83               	movwf	3971,c	;volatile
 15707                           
 15708                           ;FinalProject.c: 1535: if(PORTDbits.RD4==1)
 15709  003B7E  A883               	btfss	3971,4,c	;volatile
 15710  003B80  D002               	goto	l600
 15711                           
 15712                           ;FinalProject.c: 1536: {
 15713                           ;FinalProject.c: 1537: keypadValue = '*';
 15714  003B82  0E2A               	movlw	42
 15715  003B84  D00B               	goto	L22
 15716  003B86                     l600:
 15717                           
 15718                           ;FinalProject.c: 1540: else if(PORTDbits.RD5==1)
 15719  003B86  AA83               	btfss	3971,5,c	;volatile
 15720  003B88  D002               	goto	l602
 15721                           
 15722                           ;FinalProject.c: 1541: {
 15723                           ;FinalProject.c: 1542: keypadValue = '0';
 15724  003B8A  0E30               	movlw	48
 15725  003B8C  D007               	goto	L22
 15726  003B8E                     l602:
 15727                           
 15728                           ;FinalProject.c: 1545: else if(PORTDbits.RD6==1)
 15729  003B8E  AC83               	btfss	3971,6,c	;volatile
 15730  003B90  D002               	goto	l604
 15731                           
 15732                           ;FinalProject.c: 1546: {
 15733                           ;FinalProject.c: 1547: keypadValue = '#';
 15734  003B92  0E23               	movlw	35
 15735  003B94  D003               	goto	L22
 15736  003B96                     l604:
 15737                           
 15738                           ;FinalProject.c: 1550: else if(PORTDbits.RD7==1)
 15739  003B96  AE83               	btfss	3971,7,c	;volatile
 15740  003B98  D7BA               	goto	l577
 15741                           
 15742                           ;FinalProject.c: 1551: {
 15743                           ;FinalProject.c: 1552: keypadValue = 'D';
 15744  003B9A  0E44               	movlw	68
 15745  003B9C                     L22:
 15746  003B9C  0100               	movlb	0	; () banked
 15747  003B9E  6FE0               	movwf	_keypadValue& (0+255),b
 15748                           
 15749                           ; BSR set to: 0
 15750                           ;FinalProject.c: 1554: }
 15751                           ;FinalProject.c: 1555: }
 15752                           ;FinalProject.c: 1557: PORTBbits.RB4 =PORTBbits.RB4^1;
 15753                           
 15754                           ;FinalProject.c: 1553: break;
 15755  003BA0  B881               	btfsc	3969,4,c	;volatile
 15756  003BA2  D002               	goto	u5430
 15757  003BA4  8881               	bsf	3969,4,c	;volatile
 15758  003BA6  0012               	return	
 15759  003BA8                     u5430:
 15760  003BA8  9881               	bcf	3969,4,c	;volatile
 15761                           
 15762                           ; _choiceKeypad: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 15763  003BAA  0012               	return		;funcret
 15764  003BAC                     __end_of_choiceKeypad:
 15765                           	opt stack 0
 15766                           tblptru	equ	0xFF8
 15767                           tblptrh	equ	0xFF7
 15768                           tblptrl	equ	0xFF6
 15769                           tablat	equ	0xFF5
 15770                           prodh	equ	0xFF4
 15771                           prodl	equ	0xFF3
 15772                           intcon	equ	0xFF2
 15773                           intcon2	equ	0xFF1
 15774                           indf0	equ	0xFEF
 15775                           postinc0	equ	0xFEE
 15776                           fsr0h	equ	0xFEA
 15777                           fsr0l	equ	0xFE9
 15778                           wreg	equ	0xFE8
 15779                           postinc1	equ	0xFE6
 15780                           postdec1	equ	0xFE5
 15781                           plusw1	equ	0xFE3
 15782                           fsr1h	equ	0xFE2
 15783                           fsr1l	equ	0xFE1
 15784                           indf2	equ	0xFDF
 15785                           postinc2	equ	0xFDE
 15786                           postdec2	equ	0xFDD
 15787                           fsr2h	equ	0xFDA
 15788                           fsr2l	equ	0xFD9
 15789                           status	equ	0xFD8
 15790                           
 15791 ;; *************** function _option_Keypad *****************
 15792 ;; Defined at:
 15793 ;;		line 850 in file "FinalProject.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;		None
 15796 ;; Auto vars:     Size  Location     Type
 15797 ;;		None
 15798 ;; Return value:  Size  Location     Type
 15799 ;;                  1    wreg      void 
 15800 ;; Registers used:
 15801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 15802 ;; Tracked objects:
 15803 ;;		On entry : 0/0
 15804 ;;		On exit  : 0/0
 15805 ;;		Unchanged: 0/0
 15806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15807 ;;      Params:         0       0       0       0       0       0       0
 15808 ;;      Locals:         0       0       0       0       0       0       0
 15809 ;;      Temps:          0       0       0       0       0       0       0
 15810 ;;      Totals:         0       0       0       0       0       0       0
 15811 ;;Total ram usage:        0 bytes
 15812 ;; Hardware stack levels used:    1
 15813 ;; Hardware stack levels required when called:   12
 15814 ;; This function calls:
 15815 ;;		_clearScreen
 15816 ;;		_write_EEPROM
 15817 ;; This function is called by:
 15818 ;;		_mainScreen
 15819 ;; This function uses a non-reentrant model
 15820 ;;
 15821                           
 15822                           	psect	text45
 15823  004156                     __ptext45:
 15824                           	opt stack 0
 15825  004156                     _option_Keypad:
 15826                           	opt stack 14
 15827                           
 15828                           ;FinalProject.c: 852: inputMethod = "KEYPAD";
 15829                           
 15830                           ;incstack = 0
 15831  004156  0EE9               	movlw	low STR_79
 15832  004158  0100               	movlb	0	; () banked
 15833  00415A  6FEE               	movwf	_inputMethod& (0+255),b
 15834  00415C  0E7F               	movlw	high STR_79
 15835  00415E  0100               	movlb	0	; () banked
 15836  004160  6FEF               	movwf	(_inputMethod+1)& (0+255),b
 15837                           
 15838                           ; BSR set to: 0
 15839                           ;FinalProject.c: 854: write_EEPROM(inputTypeAddr, 'B');
 15840  004162  0E42               	movlw	66
 15841  004164  6EE6               	movwf	postinc1,c
 15842  004166  C04E  FFE6         	movff	_inputTypeAddr,postinc1
 15843  00416A  C04F  FFE6         	movff	_inputTypeAddr+1,postinc1
 15844  00416E  EC97  F020         	call	_write_EEPROM	;wreg free
 15845                           
 15846                           ;FinalProject.c: 855: PORTBbits.RB4=1;
 15847  004172  8881               	bsf	3969,4,c	;volatile
 15848                           
 15849                           ;FinalProject.c: 856: clearScreen();
 15850  004174  EC07  F021         	call	_clearScreen	;wreg free
 15851  004178  0012               	return		;funcret
 15852  00417A                     __end_of_option_Keypad:
 15853                           	opt stack 0
 15854                           tblptru	equ	0xFF8
 15855                           tblptrh	equ	0xFF7
 15856                           tblptrl	equ	0xFF6
 15857                           tablat	equ	0xFF5
 15858                           prodh	equ	0xFF4
 15859                           prodl	equ	0xFF3
 15860                           intcon	equ	0xFF2
 15861                           intcon2	equ	0xFF1
 15862                           indf0	equ	0xFEF
 15863                           postinc0	equ	0xFEE
 15864                           fsr0h	equ	0xFEA
 15865                           fsr0l	equ	0xFE9
 15866                           wreg	equ	0xFE8
 15867                           postinc1	equ	0xFE6
 15868                           postdec1	equ	0xFE5
 15869                           plusw1	equ	0xFE3
 15870                           fsr1h	equ	0xFE2
 15871                           fsr1l	equ	0xFE1
 15872                           indf2	equ	0xFDF
 15873                           postinc2	equ	0xFDE
 15874                           postdec2	equ	0xFDD
 15875                           fsr2h	equ	0xFDA
 15876                           fsr2l	equ	0xFD9
 15877                           status	equ	0xFD8
 15878                           
 15879 ;; *************** function _option_Keyboard *****************
 15880 ;; Defined at:
 15881 ;;		line 839 in file "FinalProject.c"
 15882 ;; Parameters:    Size  Location     Type
 15883 ;;		None
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;		None
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  1    wreg      void 
 15888 ;; Registers used:
 15889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15895 ;;      Params:         0       0       0       0       0       0       0
 15896 ;;      Locals:         0       0       0       0       0       0       0
 15897 ;;      Temps:          0       0       0       0       0       0       0
 15898 ;;      Totals:         0       0       0       0       0       0       0
 15899 ;;Total ram usage:        0 bytes
 15900 ;; Hardware stack levels used:    1
 15901 ;; Hardware stack levels required when called:   12
 15902 ;; This function calls:
 15903 ;;		_clearScreen
 15904 ;;		_write_EEPROM
 15905 ;; This function is called by:
 15906 ;;		_mainScreen
 15907 ;; This function uses a non-reentrant model
 15908 ;;
 15909                           
 15910                           	psect	text46
 15911  00417A                     __ptext46:
 15912                           	opt stack 0
 15913  00417A                     _option_Keyboard:
 15914                           	opt stack 14
 15915                           
 15916                           ;FinalProject.c: 842: inputMethod = "KEYBOARD";
 15917                           
 15918                           ;incstack = 0
 15919  00417A  0ED7               	movlw	low STR_3
 15920  00417C  0100               	movlb	0	; () banked
 15921  00417E  6FEE               	movwf	_inputMethod& (0+255),b
 15922  004180  0E7F               	movlw	high STR_3
 15923  004182  0100               	movlb	0	; () banked
 15924  004184  6FEF               	movwf	(_inputMethod+1)& (0+255),b
 15925                           
 15926                           ; BSR set to: 0
 15927                           ;FinalProject.c: 843: write_EEPROM(inputTypeAddr, 'K');
 15928  004186  0E4B               	movlw	75
 15929  004188  6EE6               	movwf	postinc1,c
 15930  00418A  C04E  FFE6         	movff	_inputTypeAddr,postinc1
 15931  00418E  C04F  FFE6         	movff	_inputTypeAddr+1,postinc1
 15932  004192  EC97  F020         	call	_write_EEPROM	;wreg free
 15933                           
 15934                           ;FinalProject.c: 844: PORTBbits.RB4=0;
 15935  004196  9881               	bcf	3969,4,c	;volatile
 15936                           
 15937                           ;FinalProject.c: 845: clearScreen();
 15938  004198  EC07  F021         	call	_clearScreen	;wreg free
 15939  00419C  0012               	return		;funcret
 15940  00419E                     __end_of_option_Keyboard:
 15941                           	opt stack 0
 15942                           tblptru	equ	0xFF8
 15943                           tblptrh	equ	0xFF7
 15944                           tblptrl	equ	0xFF6
 15945                           tablat	equ	0xFF5
 15946                           prodh	equ	0xFF4
 15947                           prodl	equ	0xFF3
 15948                           intcon	equ	0xFF2
 15949                           intcon2	equ	0xFF1
 15950                           indf0	equ	0xFEF
 15951                           postinc0	equ	0xFEE
 15952                           fsr0h	equ	0xFEA
 15953                           fsr0l	equ	0xFE9
 15954                           wreg	equ	0xFE8
 15955                           postinc1	equ	0xFE6
 15956                           postdec1	equ	0xFE5
 15957                           plusw1	equ	0xFE3
 15958                           fsr1h	equ	0xFE2
 15959                           fsr1l	equ	0xFE1
 15960                           indf2	equ	0xFDF
 15961                           postinc2	equ	0xFDE
 15962                           postdec2	equ	0xFDD
 15963                           fsr2h	equ	0xFDA
 15964                           fsr2l	equ	0xFD9
 15965                           status	equ	0xFD8
 15966                           
 15967 ;; *************** function _write_EEPROM *****************
 15968 ;; Defined at:
 15969 ;;		line 1442 in file "FinalProject.c"
 15970 ;; Parameters:    Size  Location     Type
 15971 ;;  add             2  [STACK] int 
 15972 ;;  c               1  [STACK] unsigned char 
 15973 ;; Auto vars:     Size  Location     Type
 15974 ;;		None
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  1  [STACK] void 
 15977 ;; Registers used:
 15978 ;;		wreg, fsr1l, fsr1h, status,2
 15979 ;; Tracked objects:
 15980 ;;		On entry : 0/0
 15981 ;;		On exit  : 0/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15984 ;;      Params:         0       0       0       0       0       0       0
 15985 ;;      Locals:         0       0       0       0       0       0       0
 15986 ;;      Temps:          0       0       0       0       0       0       0
 15987 ;;      Totals:         0       0       0       0       0       0       0
 15988 ;;Total ram usage:        0 bytes
 15989 ;; Hardware stack levels used:    1
 15990 ;; Hardware stack levels required when called:   10
 15991 ;; This function calls:
 15992 ;;		Nothing
 15993 ;; This function is called by:
 15994 ;;		_setUpPassword
 15995 ;;		_option_passcode
 15996 ;;		_option_PIR
 15997 ;;		_option_TempSensor
 15998 ;;		_option_Keyboard
 15999 ;;		_option_Keypad
 16000 ;;		_My_ISR_High
 16001 ;;		_My_ISR_Low_TempSensor
 16002 ;;		_updateThreshold
 16003 ;; This function uses a reentrant model
 16004 ;;
 16005                           
 16006                           	psect	text47
 16007  00412E                     __ptext47:
 16008                           	opt stack 0
 16009  00412E                     _write_EEPROM:
 16010                           	opt stack 6
 16011                           
 16012                           ;FinalProject.c: 1444: EEADR = add;
 16013                           ;stkvar	write_EEPROM@add @ sp[(0)+-2]
 16014                           
 16015                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0
 16016                           ;incstack = 0
 16017  00412E  0EFE               	movlw	-2
 16018  004130  CFE3 FFA9          	movff	plusw1,4009	;volatile
 16019                           
 16020                           ;FinalProject.c: 1445: EEDATA = c;
 16021                           ;stkvar	write_EEPROM@c @ sp[(0)+-3]
 16022  004134  0EFD               	movlw	-3
 16023  004136  CFE3 FFA8          	movff	plusw1,4008	;volatile
 16024                           
 16025                           ;FinalProject.c: 1446: EEPGD = 0;
 16026  00413A  9EA6               	bcf	4006,7,c	;volatile
 16027                           
 16028                           ;FinalProject.c: 1447: CFGS = 0;
 16029  00413C  9CA6               	bcf	4006,6,c	;volatile
 16030                           
 16031                           ;FinalProject.c: 1448: WREN = 1;
 16032  00413E  84A6               	bsf	4006,2,c	;volatile
 16033                           
 16034                           ;FinalProject.c: 1449: EECON2 = 0x55;
 16035  004140  0E55               	movlw	85
 16036  004142  6EA7               	movwf	4007,c	;volatile
 16037                           
 16038                           ;FinalProject.c: 1450: EECON2 = 0xAA;
 16039  004144  0EAA               	movlw	170
 16040  004146  6EA7               	movwf	4007,c	;volatile
 16041                           
 16042                           ;FinalProject.c: 1451: EECON1bits.WR = 1;
 16043  004148  82A6               	bsf	4006,1,c	;volatile
 16044  00414A                     l568:
 16045  00414A  B2A6               	btfsc	4006,1,c	;volatile
 16046  00414C  D7FE               	goto	l568
 16047                           
 16048                           ; _write_EEPROM: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, 
      +                          argsize = 3, vargsize = 0
 16049  00414E  52E5               	movf	postdec1,f,c
 16050  004150  52E5               	movf	postdec1,f,c
 16051  004152  52E5               	movf	postdec1,f,c
 16052  004154  0012               	return		;funcret
 16053  004156                     __end_of_write_EEPROM:
 16054                           	opt stack 0
 16055                           tblptru	equ	0xFF8
 16056                           tblptrh	equ	0xFF7
 16057                           tblptrl	equ	0xFF6
 16058                           tablat	equ	0xFF5
 16059                           prodh	equ	0xFF4
 16060                           prodl	equ	0xFF3
 16061                           intcon	equ	0xFF2
 16062                           intcon2	equ	0xFF1
 16063                           indf0	equ	0xFEF
 16064                           postinc0	equ	0xFEE
 16065                           fsr0h	equ	0xFEA
 16066                           fsr0l	equ	0xFE9
 16067                           wreg	equ	0xFE8
 16068                           postinc1	equ	0xFE6
 16069                           postdec1	equ	0xFE5
 16070                           plusw1	equ	0xFE3
 16071                           fsr1h	equ	0xFE2
 16072                           fsr1l	equ	0xFE1
 16073                           indf2	equ	0xFDF
 16074                           postinc2	equ	0xFDE
 16075                           postdec2	equ	0xFDD
 16076                           fsr2h	equ	0xFDA
 16077                           fsr2l	equ	0xFD9
 16078                           status	equ	0xFD8
 16079                           
 16080 ;; *************** function _clearScreen *****************
 16081 ;; Defined at:
 16082 ;;		line 385 in file "FinalProject.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;		None
 16085 ;; Auto vars:     Size  Location     Type
 16086 ;;		None
 16087 ;; Return value:  Size  Location     Type
 16088 ;;                  1  [STACK] void 
 16089 ;; Registers used:
 16090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 16091 ;; Tracked objects:
 16092 ;;		On entry : 0/0
 16093 ;;		On exit  : 0/0
 16094 ;;		Unchanged: 0/0
 16095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16096 ;;      Params:         0       0       0       0       0       0       0
 16097 ;;      Locals:         0       0       0       0       0       0       0
 16098 ;;      Temps:          0       0       0       0       0       0       0
 16099 ;;      Totals:         0       0       0       0       0       0       0
 16100 ;;Total ram usage:        0 bytes
 16101 ;; Hardware stack levels used:    1
 16102 ;; Hardware stack levels required when called:   11
 16103 ;; This function calls:
 16104 ;;		_my_print
 16105 ;; This function is called by:
 16106 ;;		_initialScreen
 16107 ;;		_option_Keyboard
 16108 ;;		_option_Keypad
 16109 ;; This function uses a reentrant model
 16110 ;;
 16111                           
 16112                           	psect	text48
 16113  00420E                     __ptext48:
 16114                           	opt stack 0
 16115  00420E                     _clearScreen:
 16116                           	opt stack 4
 16117                           
 16118                           ;FinalProject.c: 387: my_print("\033[2J");
 16119                           
 16120                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0
 16121                           ;incstack = 0
 16122  00420E  0EF6               	movlw	low STR_12
 16123  004210  6EE6               	movwf	postinc1,c
 16124  004212  0E7F               	movlw	high STR_12
 16125  004214  6EE6               	movwf	postinc1,c
 16126  004216  ECF8  F01E         	call	_my_print	;wreg free
 16127                           
 16128                           ; _clearScreen: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 16129  00421A  0012               	return		;funcret
 16130  00421C                     __end_of_clearScreen:
 16131                           	opt stack 0
 16132                           tblptru	equ	0xFF8
 16133                           tblptrh	equ	0xFF7
 16134                           tblptrl	equ	0xFF6
 16135                           tablat	equ	0xFF5
 16136                           prodh	equ	0xFF4
 16137                           prodl	equ	0xFF3
 16138                           intcon	equ	0xFF2
 16139                           intcon2	equ	0xFF1
 16140                           indf0	equ	0xFEF
 16141                           postinc0	equ	0xFEE
 16142                           fsr0h	equ	0xFEA
 16143                           fsr0l	equ	0xFE9
 16144                           wreg	equ	0xFE8
 16145                           postinc1	equ	0xFE6
 16146                           postdec1	equ	0xFE5
 16147                           plusw1	equ	0xFE3
 16148                           fsr1h	equ	0xFE2
 16149                           fsr1l	equ	0xFE1
 16150                           indf2	equ	0xFDF
 16151                           postinc2	equ	0xFDE
 16152                           postdec2	equ	0xFDD
 16153                           fsr2h	equ	0xFDA
 16154                           fsr2l	equ	0xFD9
 16155                           status	equ	0xFD8
 16156                           
 16157 ;; *************** function _My_ISR_Low_TempSensor *****************
 16158 ;; Defined at:
 16159 ;;		line 1004 in file "FinalProject.c"
 16160 ;; Parameters:    Size  Location     Type
 16161 ;;		None
 16162 ;; Auto vars:     Size  Location     Type
 16163 ;;  check           2   51[COMRAM] int 
 16164 ;;  third_correc    2   53[COMRAM] int 
 16165 ;;  i               2   55[COMRAM] int 
 16166 ;;  i               2    0        int 
 16167 ;;  thirdCorrect    2   49[COMRAM] int 
 16168 ;; Return value:  Size  Location     Type
 16169 ;;                  1    wreg      void 
 16170 ;; Registers used:
 16171 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16172 ;; Tracked objects:
 16173 ;;		On entry : 0/0
 16174 ;;		On exit  : 0/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16177 ;;      Params:         0       0       0       0       0       0       0
 16178 ;;      Locals:         8       0       0       0       0       0       0
 16179 ;;      Temps:         20       0       0       0       0       0       0
 16180 ;;      Totals:        28       0       0       0       0       0       0
 16181 ;;Total ram usage:       28 bytes
 16182 ;; Hardware stack levels used:    1
 16183 ;; Hardware stack levels required when called:    9
 16184 ;; This function calls:
 16185 ;;		_FindCurrentTemp
 16186 ;;		___ftge
 16187 ;;		___lwtoft
 16188 ;;		_atoi
 16189 ;;		_choiceKeypad
 16190 ;;		_halfSecDelay
 16191 ;;		_initialScreen
 16192 ;;		_initialize_tempSensor
 16193 ;;		_my_print
 16194 ;;		_read_EEPROM
 16195 ;;		_reception
 16196 ;;		_temp_reset
 16197 ;;		_updateThreshold
 16198 ;;		_write_EEPROM
 16199 ;; This function is called by:
 16200 ;;		Interrupt level 1
 16201 ;; This function uses a non-reentrant model
 16202 ;;
 16203                           
 16204                           	psect	intcodelo
 16205  000018                     __pintcodelo:
 16206                           	opt stack 0
 16207  000018                     _My_ISR_Low_TempSensor:
 16208                           	opt stack 13
 16209                           
 16210                           ;incstack = 0
 16211  000018  CFD8 F01E          	movff	status,??_My_ISR_Low_TempSensor
 16212  00001C  CFE8 F01F          	movff	wreg,??_My_ISR_Low_TempSensor+1
 16213  000020  CFE0 F020          	movff	bsr,??_My_ISR_Low_TempSensor+2
 16214  000024  CFE9 F021          	movff	fsr0l,??_My_ISR_Low_TempSensor+3
 16215  000028  CFEA F022          	movff	fsr0h,??_My_ISR_Low_TempSensor+4
 16216  00002C  CFE1 F023          	movff	fsr1l,??_My_ISR_Low_TempSensor+5
 16217  000030  CFE2 F024          	movff	fsr1h,??_My_ISR_Low_TempSensor+6
 16218  000034  CFD9 F025          	movff	fsr2l,??_My_ISR_Low_TempSensor+7
 16219  000038  CFDA F026          	movff	fsr2h,??_My_ISR_Low_TempSensor+8
 16220  00003C  CFF3 F027          	movff	prodl,??_My_ISR_Low_TempSensor+9
 16221  000040  CFF4 F028          	movff	prodh,??_My_ISR_Low_TempSensor+10
 16222  000044  CFF6 F029          	movff	tblptrl,??_My_ISR_Low_TempSensor+11
 16223  000048  CFF7 F02A          	movff	tblptrh,??_My_ISR_Low_TempSensor+12
 16224  00004C  CFF8 F02B          	movff	tblptru,??_My_ISR_Low_TempSensor+13
 16225  000050  CFF5 F02C          	movff	tablat,??_My_ISR_Low_TempSensor+14
 16226  000054  C03A  F02D         	movff	btemp,??_My_ISR_Low_TempSensor+15
 16227  000058  C03B  F02E         	movff	btemp+1,??_My_ISR_Low_TempSensor+16
 16228  00005C  C03C  F02F         	movff	btemp+2,??_My_ISR_Low_TempSensor+17
 16229  000060  C040  F030         	movff	btemp+6,??_My_ISR_Low_TempSensor+18
 16230  000064  C041  F031         	movff	btemp+7,??_My_ISR_Low_TempSensor+19
 16231  000068  EE14  F052         	lfsr	1,___intlo_sp
 16232                           
 16233                           ;FinalProject.c: 1006: inReset = 1;
 16234  00006C  0E00               	movlw	0
 16235  00006E  6E49               	movwf	_inReset+1,c
 16236  000070  0E01               	movlw	1
 16237  000072  6E48               	movwf	_inReset,c
 16238                           
 16239                           ;FinalProject.c: 1007: int thirdCorrectPassword = 0;
 16240  000074  0E00               	movlw	0
 16241  000076  6E33               	movwf	My_ISR_Low_TempSensor@thirdCorrectPassword+1,c
 16242  000078  0E00               	movlw	0
 16243  00007A  6E32               	movwf	My_ISR_Low_TempSensor@thirdCorrectPassword,c
 16244                           
 16245                           ;FinalProject.c: 1009: thresholdAddr = 0xD0;
 16246  00007C  0E00               	movlw	0
 16247  00007E  0100               	movlb	0	; () banked
 16248  000080  6FF5               	movwf	(_thresholdAddr+1)& (0+255),b
 16249  000082  0ED0               	movlw	208
 16250  000084  6FF4               	movwf	_thresholdAddr& (0+255),b
 16251                           
 16252                           ; BSR set to: 0
 16253                           ;FinalProject.c: 1012: if(INTCONbits.TMR0IF == 1)
 16254  000086  A4F2               	btfss	intcon,2,c	;volatile
 16255  000088  D009               	goto	i1l7463
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;FinalProject.c: 1013: {
 16259                           ;FinalProject.c: 1014: T0CONbits.TMR0ON = 0;
 16260  00008A  9ED5               	bcf	4053,7,c	;volatile
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;FinalProject.c: 1015: FindCurrentTemp();
 16264  00008C  EC12  F01A         	call	_FindCurrentTemp	;wreg free
 16265                           
 16266                           ;FinalProject.c: 1016: INTCONbits.TMR0IF=0;
 16267  000090  94F2               	bcf	intcon,2,c	;volatile
 16268                           
 16269                           ;FinalProject.c: 1017: TMR0H = 0x67;
 16270  000092  0E67               	movlw	103
 16271  000094  6ED7               	movwf	4055,c	;volatile
 16272                           
 16273                           ;FinalProject.c: 1018: TMR0L = 0x6A;
 16274  000096  0E6A               	movlw	106
 16275  000098  6ED6               	movwf	4054,c	;volatile
 16276                           
 16277                           ;FinalProject.c: 1019: T0CONbits.TMR0ON = 1;
 16278  00009A  8ED5               	bsf	4053,7,c	;volatile
 16279  00009C                     i1l7463:
 16280                           
 16281                           ;FinalProject.c: 1020: }
 16282                           ;FinalProject.c: 1022: if(PIR1bits.ADIF == 1)
 16283  00009C  AC9E               	btfss	3998,6,c	;volatile
 16284  00009E  D163               	goto	i1l480
 16285                           
 16286                           ;FinalProject.c: 1023: {
 16287                           ;FinalProject.c: 1027: FindCurrentTemp();
 16288  0000A0  EC12  F01A         	call	_FindCurrentTemp	;wreg free
 16289                           
 16290                           ;FinalProject.c: 1028: int i;
 16291                           ;FinalProject.c: 1029: for(int i = 0; i < 2; i++)
 16292  0000A4  0E00               	movlw	0
 16293  0000A6  6E39               	movwf	My_ISR_Low_TempSensor@i_1196+1,c
 16294  0000A8  0E00               	movlw	0
 16295  0000AA  6E38               	movwf	My_ISR_Low_TempSensor@i_1196,c
 16296  0000AC                     i1l7469:
 16297  0000AC  BE39               	btfsc	My_ISR_Low_TempSensor@i_1196+1,7,c
 16298  0000AE  D006               	goto	i1l7473
 16299  0000B0  5039               	movf	My_ISR_Low_TempSensor@i_1196+1,w,c
 16300  0000B2  E118               	bnz	i1l7481
 16301  0000B4  0E02               	movlw	2
 16302  0000B6  5C38               	subwf	My_ISR_Low_TempSensor@i_1196,w,c
 16303  0000B8  B0D8               	btfsc	status,0,c
 16304  0000BA  D014               	goto	i1l7481
 16305  0000BC                     i1l7473:
 16306                           
 16307                           ;FinalProject.c: 1030: {
 16308                           ;FinalProject.c: 1031: thresholdArray[i] = read_EEPROM(thresholdAddr);
 16309  0000BC  0EE7               	movlw	low _thresholdArray
 16310  0000BE  2438               	addwf	My_ISR_Low_TempSensor@i_1196,w,c
 16311  0000C0  6ED9               	movwf	fsr2l,c
 16312  0000C2  0E00               	movlw	high _thresholdArray
 16313  0000C4  2039               	addwfc	My_ISR_Low_TempSensor@i_1196+1,w,c
 16314  0000C6  6EDA               	movwf	fsr2h,c
 16315  0000C8  C0F4  FFE6         	movff	_thresholdAddr,postinc1
 16316  0000CC  C0F5  FFE6         	movff	_thresholdAddr+1,postinc1
 16317  0000D0  ECE8  F020         	call	_read_EEPROM	;wreg free
 16318  0000D4  503A               	movf	btemp,w,c
 16319  0000D6  6EDF               	movwf	indf2,c
 16320                           
 16321                           ;FinalProject.c: 1032: thresholdAddr++;
 16322  0000D8  0100               	movlb	0	; () banked
 16323  0000DA  4BF4               	infsnz	_thresholdAddr& (0+255),f,b
 16324  0000DC  2BF5               	incf	(_thresholdAddr+1)& (0+255),f,b
 16325                           
 16326                           ; BSR set to: 0
 16327  0000DE  4A38               	infsnz	My_ISR_Low_TempSensor@i_1196,f,c
 16328  0000E0  2A39               	incf	My_ISR_Low_TempSensor@i_1196+1,f,c
 16329  0000E2  D7E4               	goto	i1l7469
 16330  0000E4                     i1l7481:
 16331                           
 16332                           ;FinalProject.c: 1033: }
 16333                           ;FinalProject.c: 1034: tempThreshold = atoi(thresholdArray);
 16334  0000E4  0EE7               	movlw	low _thresholdArray
 16335  0000E6  6EE6               	movwf	postinc1,c
 16336  0000E8  0E00               	movlw	high _thresholdArray
 16337  0000EA  6EE6               	movwf	postinc1,c
 16338  0000EC  ECAD  F017         	call	_atoi	;wreg free
 16339  0000F0  C03A  F0DD         	movff	btemp,_tempThreshold
 16340  0000F4  C03B  F0DE         	movff	btemp+1,_tempThreshold+1
 16341                           
 16342                           ;FinalProject.c: 1035: if(temperature>tempThreshold){
 16343  0000F8  C0D6  FFE6         	movff	_temperature,postinc1
 16344  0000FC  C0D7  FFE6         	movff	_temperature+1,postinc1
 16345  000100  C0D8  FFE6         	movff	_temperature+2,postinc1
 16346  000104  C0DD  FFE6         	movff	_tempThreshold,postinc1
 16347  000108  C0DE  FFE6         	movff	_tempThreshold+1,postinc1
 16348  00010C  EC65  F020         	call	___lwtoft	;wreg free
 16349  000110  C03A  FFE6         	movff	btemp,postinc1
 16350  000114  C03B  FFE6         	movff	btemp+1,postinc1
 16351  000118  C03C  FFE6         	movff	btemp+2,postinc1
 16352  00011C  ECDE  F01C         	call	___ftge	;wreg free
 16353  000120  B03A               	btfsc	btemp,0,c
 16354  000122  D11B               	goto	i1l439
 16355                           
 16356                           ;FinalProject.c: 1036: tempIntSet = 1;
 16357  000124  0E00               	movlw	0
 16358  000126  6E4D               	movwf	_tempIntSet+1,c
 16359  000128  0E01               	movlw	1
 16360  00012A  6E4C               	movwf	_tempIntSet,c
 16361                           
 16362                           ;FinalProject.c: 1037: PORTBbits.RB5 =1;
 16363  00012C  8A81               	bsf	3969,5,c	;volatile
 16364                           
 16365                           ;FinalProject.c: 1038: T0CONbits.TMR0ON = 0;
 16366  00012E  9ED5               	bcf	4053,7,c	;volatile
 16367                           
 16368                           ;FinalProject.c: 1039: int third_correctPassword = temp_reset();
 16369  000130  ECE6  F018         	call	_temp_reset	;wreg free
 16370  000134  C017  F036         	movff	?_temp_reset,My_ISR_Low_TempSensor@third_correctPassword
 16371  000138  C018  F037         	movff	?_temp_reset+1,My_ISR_Low_TempSensor@third_correctPassword+1
 16372  00013C                     i1l7493:
 16373                           
 16374                           ;FinalProject.c: 1042: {
 16375                           ;FinalProject.c: 1043: int check = 0;
 16376  00013C  0E00               	movlw	0
 16377  00013E  6E35               	movwf	My_ISR_Low_TempSensor@check+1,c
 16378  000140  0E00               	movlw	0
 16379  000142  6E34               	movwf	My_ISR_Low_TempSensor@check,c
 16380                           
 16381                           ;FinalProject.c: 1045: if(third_correctPassword == 1)
 16382  000144  0436               	decf	My_ISR_Low_TempSensor@third_correctPassword,w,c
 16383  000146  1037               	iorwf	My_ISR_Low_TempSensor@third_correctPassword+1,w,c
 16384  000148  A4D8               	btfss	status,2,c
 16385  00014A  D0E4               	goto	i1l7593
 16386                           
 16387                           ;FinalProject.c: 1046: {
 16388                           ;FinalProject.c: 1047: my_print("\n\rWould you like to update the Threshold Temperature?
      +                          ");
 16389  00014C  0EB0               	movlw	low STR_96
 16390  00014E  6EE6               	movwf	postinc1,c
 16391  000150  0E79               	movlw	high STR_96
 16392  000152  6EE6               	movwf	postinc1,c
 16393  000154  ECF8  F01E         	call	_my_print	;wreg free
 16394                           
 16395                           ;FinalProject.c: 1048: my_print("\n\rYES = 1 and NO = 0");
 16396  000158  0E90               	movlw	low STR_97
 16397  00015A  6EE6               	movwf	postinc1,c
 16398  00015C  0E7F               	movlw	high STR_97
 16399  00015E  6EE6               	movwf	postinc1,c
 16400  000160  ECF8  F01E         	call	_my_print	;wreg free
 16401                           
 16402                           ;FinalProject.c: 1049: my_print("\n\rInput: ");
 16403  000164  0ECD               	movlw	low STR_39
 16404  000166  6EE6               	movwf	postinc1,c
 16405  000168  0E7F               	movlw	high STR_39
 16406  00016A  6EE6               	movwf	postinc1,c
 16407  00016C  ECF8  F01E         	call	_my_print	;wreg free
 16408                           
 16409                           ;FinalProject.c: 1050: halfSecDelay();
 16410  000170  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16411                           
 16412                           ;FinalProject.c: 1052: if(PORTBbits.RB4 == 1)
 16413  000174  A881               	btfss	3969,4,c	;volatile
 16414  000176  D013               	goto	i1l7511
 16415                           
 16416                           ;FinalProject.c: 1053: {
 16417                           ;FinalProject.c: 1054: choiceKeypad();
 16418  000178  EC85  F01D         	call	_choiceKeypad	;wreg free
 16419  00017C                     i1l443:
 16420  00017C  A2AC               	btfss	4012,1,c	;volatile
 16421  00017E  D7FE               	goto	i1l443
 16422                           
 16423                           ;FinalProject.c: 1056: TXREG = keypadValue;
 16424  000180  C0E0  FFAD         	movff	_keypadValue,4013	;volatile
 16425                           
 16426                           ;FinalProject.c: 1057: choice = keypadValue;
 16427  000184  C0E0  F0DF         	movff	_keypadValue,_choice
 16428                           
 16429                           ;FinalProject.c: 1058: halfSecDelay();
 16430  000188  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16431                           
 16432                           ;FinalProject.c: 1059: while(keypadValue != 'A'){
 16433  00018C  D002               	goto	i1l7509
 16434  00018E                     i1l7507:
 16435                           
 16436                           ;FinalProject.c: 1060: choiceKeypad();
 16437  00018E  EC85  F01D         	call	_choiceKeypad	;wreg free
 16438  000192                     i1l7509:
 16439  000192  0E41               	movlw	65
 16440  000194  0100               	movlb	0	; () banked
 16441  000196  19E0               	xorwf	_keypadValue& (0+255),w,b
 16442  000198  B4D8               	btfsc	status,2,c
 16443  00019A  D00E               	goto	i1l7515
 16444  00019C  D7F8               	goto	i1l7507
 16445  00019E                     i1l7511:
 16446                           
 16447                           ;FinalProject.c: 1063: else
 16448                           ;FinalProject.c: 1064: {
 16449                           ;FinalProject.c: 1065: choice = reception();
 16450  00019E  ECF3  F020         	call	_reception	;wreg free
 16451  0001A2  503A               	movf	btemp,w,c
 16452  0001A4  0100               	movlb	0	; () banked
 16453  0001A6  6FDF               	movwf	_choice& (0+255),b
 16454  0001A8                     i1l450:
 16455  0001A8  A2AC               	btfss	4012,1,c	;volatile
 16456  0001AA  D7FE               	goto	i1l450
 16457                           
 16458                           ;FinalProject.c: 1067: TXREG = choice;
 16459  0001AC  C0DF  FFAD         	movff	_choice,4013	;volatile
 16460  0001B0                     i1l7513:
 16461  0001B0  0E0D               	movlw	13
 16462  0001B2  18AE               	xorwf	4014,w,c	;volatile
 16463  0001B4  A4D8               	btfss	status,2,c
 16464  0001B6  D7FC               	goto	i1l7513
 16465  0001B8                     i1l7515:
 16466                           
 16467                           ;FinalProject.c: 1069: }
 16468                           ;FinalProject.c: 1071: if(choice == '1')
 16469  0001B8  0E31               	movlw	49
 16470  0001BA  0100               	movlb	0	; () banked
 16471  0001BC  19DF               	xorwf	_choice& (0+255),w,b
 16472  0001BE  B4D8               	btfsc	status,2,c
 16473                           
 16474                           ; BSR set to: 0
 16475                           ;FinalProject.c: 1072: {
 16476                           ;FinalProject.c: 1073: updateThreshold();
 16477  0001C0  ECE2  F010         	call	_updateThreshold	;wreg free
 16478                           
 16479                           ;FinalProject.c: 1078: }
 16480                           ;FinalProject.c: 1080: my_print("\n\rDisable the Temperature Sensor Alarm?");
 16481                           
 16482                           ;FinalProject.c: 1076: else
 16483                           ;FinalProject.c: 1077: {
 16484                           
 16485                           ;FinalProject.c: 1075: }
 16486  0001C4  0E0D               	movlw	low STR_99
 16487  0001C6  6EE6               	movwf	postinc1,c
 16488  0001C8  0E7C               	movlw	high STR_99
 16489  0001CA  6EE6               	movwf	postinc1,c
 16490  0001CC  ECF8  F01E         	call	_my_print	;wreg free
 16491                           
 16492                           ;FinalProject.c: 1081: my_print("\n\rEnable = 1 and Disable = 0");
 16493  0001D0  0E5C               	movlw	low STR_81
 16494  0001D2  6EE6               	movwf	postinc1,c
 16495  0001D4  0E7E               	movlw	high STR_81
 16496  0001D6  6EE6               	movwf	postinc1,c
 16497  0001D8  ECF8  F01E         	call	_my_print	;wreg free
 16498                           
 16499                           ;FinalProject.c: 1083: my_print("\n\rInput: ");
 16500  0001DC  0ECD               	movlw	low STR_39
 16501  0001DE  6EE6               	movwf	postinc1,c
 16502  0001E0  0E7F               	movlw	high STR_39
 16503  0001E2  6EE6               	movwf	postinc1,c
 16504  0001E4  ECF8  F01E         	call	_my_print	;wreg free
 16505                           
 16506                           ;FinalProject.c: 1084: halfSecDelay();
 16507  0001E8  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16508                           
 16509                           ;FinalProject.c: 1087: if(PORTBbits.RB4 == 1)
 16510  0001EC  A881               	btfss	3969,4,c	;volatile
 16511  0001EE  D013               	goto	i1l7533
 16512                           
 16513                           ;FinalProject.c: 1088: {
 16514                           ;FinalProject.c: 1089: choiceKeypad();
 16515  0001F0  EC85  F01D         	call	_choiceKeypad	;wreg free
 16516  0001F4                     i1l459:
 16517  0001F4  A2AC               	btfss	4012,1,c	;volatile
 16518  0001F6  D7FE               	goto	i1l459
 16519                           
 16520                           ;FinalProject.c: 1091: TXREG = keypadValue;
 16521  0001F8  C0E0  FFAD         	movff	_keypadValue,4013	;volatile
 16522                           
 16523                           ;FinalProject.c: 1092: choice = keypadValue;
 16524  0001FC  C0E0  F0DF         	movff	_keypadValue,_choice
 16525                           
 16526                           ;FinalProject.c: 1093: halfSecDelay();
 16527  000200  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16528                           
 16529                           ;FinalProject.c: 1094: while(keypadValue != 'A'){
 16530  000204  D002               	goto	i1l7531
 16531  000206                     i1l7529:
 16532                           
 16533                           ;FinalProject.c: 1095: choiceKeypad();
 16534  000206  EC85  F01D         	call	_choiceKeypad	;wreg free
 16535  00020A                     i1l7531:
 16536  00020A  0E41               	movlw	65
 16537  00020C  0100               	movlb	0	; () banked
 16538  00020E  19E0               	xorwf	_keypadValue& (0+255),w,b
 16539  000210  B4D8               	btfsc	status,2,c
 16540  000212  D00E               	goto	i1l7537
 16541  000214  D7F8               	goto	i1l7529
 16542  000216                     i1l7533:
 16543                           
 16544                           ;FinalProject.c: 1098: else
 16545                           ;FinalProject.c: 1099: {
 16546                           ;FinalProject.c: 1100: choice = reception();
 16547  000216  ECF3  F020         	call	_reception	;wreg free
 16548  00021A  503A               	movf	btemp,w,c
 16549  00021C  0100               	movlb	0	; () banked
 16550  00021E  6FDF               	movwf	_choice& (0+255),b
 16551  000220                     i1l466:
 16552  000220  A2AC               	btfss	4012,1,c	;volatile
 16553  000222  D7FE               	goto	i1l466
 16554                           
 16555                           ;FinalProject.c: 1102: TXREG = choice;
 16556  000224  C0DF  FFAD         	movff	_choice,4013	;volatile
 16557  000228                     i1l7535:
 16558  000228  0E0D               	movlw	13
 16559  00022A  18AE               	xorwf	4014,w,c	;volatile
 16560  00022C  A4D8               	btfss	status,2,c
 16561  00022E  D7FC               	goto	i1l7535
 16562  000230                     i1l7537:
 16563                           
 16564                           ;FinalProject.c: 1104: }
 16565                           ;FinalProject.c: 1106: if(choice == '1')
 16566  000230  0E31               	movlw	49
 16567  000232  0100               	movlb	0	; () banked
 16568  000234  19DF               	xorwf	_choice& (0+255),w,b
 16569  000236  A4D8               	btfss	status,2,c
 16570  000238  D01E               	goto	i1l7555
 16571                           
 16572                           ; BSR set to: 0
 16573                           ;FinalProject.c: 1107: {
 16574                           ;FinalProject.c: 1109: statusOfTemp = "ACTIVE";
 16575  00023A  0EE2               	movlw	low (STR_1+2)
 16576  00023C  0100               	movlb	0	; () banked
 16577  00023E  6FF2               	movwf	_statusOfTemp& (0+255),b
 16578  000240  0E7F               	movlw	high (STR_1+2)
 16579  000242  0100               	movlb	0	; () banked
 16580  000244  6FF3               	movwf	(_statusOfTemp+1)& (0+255),b
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;FinalProject.c: 1110: initialize_tempSensor();
 16584  000246  EC14  F021         	call	_initialize_tempSensor	;wreg free
 16585                           
 16586                           ;FinalProject.c: 1111: T0CONbits.TMR0ON = 1;
 16587  00024A  8ED5               	bsf	4053,7,c	;volatile
 16588                           
 16589                           ;FinalProject.c: 1112: initialScreen();
 16590  00024C  ECFC  F01F         	call	_initialScreen	;wreg free
 16591                           
 16592                           ;FinalProject.c: 1113: write_EEPROM(tempStatusAddr,'E');
 16593  000250  0E45               	movlw	69
 16594  000252  6EE6               	movwf	postinc1,c
 16595  000254  C050  FFE6         	movff	_tempStatusAddr,postinc1
 16596  000258  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
 16597  00025C  EC97  F020         	call	_write_EEPROM	;wreg free
 16598                           
 16599                           ;FinalProject.c: 1114: my_print("\n\r Temperature Sensor Alarm Enabled.\n\r");
 16600  000260  0E35               	movlw	low STR_73
 16601  000262  6EE6               	movwf	postinc1,c
 16602  000264  0E7C               	movlw	high STR_73
 16603  000266  6EE6               	movwf	postinc1,c
 16604  000268  ECF8  F01E         	call	_my_print	;wreg free
 16605                           
 16606                           ;FinalProject.c: 1116: halfSecDelay();
 16607  00026C  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16608                           
 16609                           ;FinalProject.c: 1117: halfSecDelay();
 16610  000270  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16611                           
 16612                           ;FinalProject.c: 1120: }
 16613  000274  D067               	goto	i1l7605
 16614  000276                     i1l7555:
 16615                           
 16616                           ;FinalProject.c: 1121: else if(choice == '0')
 16617  000276  0E30               	movlw	48
 16618  000278  0100               	movlb	0	; () banked
 16619  00027A  19DF               	xorwf	_choice& (0+255),w,b
 16620  00027C  A4D8               	btfss	status,2,c
 16621  00027E  D01E               	goto	i1l7571
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;FinalProject.c: 1122: {
 16625                           ;FinalProject.c: 1123: T0CONbits.TMR0ON = 0;
 16626  000280  9ED5               	bcf	4053,7,c	;volatile
 16627                           
 16628                           ;FinalProject.c: 1124: PIE1bits.ADIE = 0;
 16629  000282  9C9D               	bcf	3997,6,c	;volatile
 16630                           
 16631                           ;FinalProject.c: 1125: PORTBbits.RB5 =0;
 16632  000284  9A81               	bcf	3969,5,c	;volatile
 16633                           
 16634                           ; BSR set to: 0
 16635                           ;FinalProject.c: 1126: write_EEPROM(tempStatusAddr,'D');
 16636  000286  0E44               	movlw	68
 16637  000288  6EE6               	movwf	postinc1,c
 16638  00028A  C050  FFE6         	movff	_tempStatusAddr,postinc1
 16639  00028E  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
 16640  000292  EC97  F020         	call	_write_EEPROM	;wreg free
 16641                           
 16642                           ;FinalProject.c: 1127: initialScreen();
 16643  000296  ECFC  F01F         	call	_initialScreen	;wreg free
 16644                           
 16645                           ;FinalProject.c: 1128: my_print("\n\r Temperature Sensor Alarm Disabled.\n\r");
 16646  00029A  0EE5               	movlw	low STR_76
 16647  00029C  6EE6               	movwf	postinc1,c
 16648  00029E  0E7B               	movlw	high STR_76
 16649  0002A0  6EE6               	movwf	postinc1,c
 16650  0002A2  ECF8  F01E         	call	_my_print	;wreg free
 16651                           
 16652                           ;FinalProject.c: 1129: statusOfTemp = "INACTIVE";
 16653  0002A6  0EE0               	movlw	low STR_1
 16654  0002A8  0100               	movlb	0	; () banked
 16655  0002AA  6FF2               	movwf	_statusOfTemp& (0+255),b
 16656  0002AC  0E7F               	movlw	high STR_1
 16657  0002AE  0100               	movlb	0	; () banked
 16658  0002B0  6FF3               	movwf	(_statusOfTemp+1)& (0+255),b
 16659                           
 16660                           ; BSR set to: 0
 16661                           ;FinalProject.c: 1131: halfSecDelay();
 16662  0002B2  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16663                           
 16664                           ;FinalProject.c: 1132: halfSecDelay();
 16665  0002B6  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16666                           
 16667                           ;FinalProject.c: 1135: }
 16668  0002BA  D044               	goto	i1l7605
 16669  0002BC                     i1l7571:
 16670                           
 16671                           ;FinalProject.c: 1136: else
 16672                           ;FinalProject.c: 1137: {
 16673                           ;FinalProject.c: 1138: statusOfTemp = "ACTIVE";
 16674  0002BC  0EE2               	movlw	low (STR_1+2)
 16675  0002BE  0100               	movlb	0	; () banked
 16676  0002C0  6FF2               	movwf	_statusOfTemp& (0+255),b
 16677  0002C2  0E7F               	movlw	high (STR_1+2)
 16678  0002C4  0100               	movlb	0	; () banked
 16679  0002C6  6FF3               	movwf	(_statusOfTemp+1)& (0+255),b
 16680                           
 16681                           ; BSR set to: 0
 16682                           ;FinalProject.c: 1139: my_print("\n\rInvalid Selection");
 16683  0002C8  0EB9               	movlw	low STR_87
 16684  0002CA  6EE6               	movwf	postinc1,c
 16685  0002CC  0E7F               	movlw	high STR_87
 16686  0002CE  6EE6               	movwf	postinc1,c
 16687  0002D0  ECF8  F01E         	call	_my_print	;wreg free
 16688                           
 16689                           ;FinalProject.c: 1140: my_print("\n\r TEMPERATURE SENSOR ALARM IS KEPT ENABLED");
 16690  0002D4  0E3B               	movlw	low STR_108
 16691  0002D6  6EE6               	movwf	postinc1,c
 16692  0002D8  0E7B               	movlw	high STR_108
 16693  0002DA  6EE6               	movwf	postinc1,c
 16694  0002DC  ECF8  F01E         	call	_my_print	;wreg free
 16695                           
 16696                           ;FinalProject.c: 1141: halfSecDelay();
 16697  0002E0  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16698                           
 16699                           ;FinalProject.c: 1142: initialize_tempSensor();
 16700  0002E4  EC14  F021         	call	_initialize_tempSensor	;wreg free
 16701                           
 16702                           ;FinalProject.c: 1143: T0CONbits.TMR0ON = 1;
 16703  0002E8  8ED5               	bsf	4053,7,c	;volatile
 16704                           
 16705                           ;FinalProject.c: 1144: initialScreen();
 16706  0002EA  ECFC  F01F         	call	_initialScreen	;wreg free
 16707                           
 16708                           ;FinalProject.c: 1145: write_EEPROM(tempStatusAddr,'E');
 16709  0002EE  0E45               	movlw	69
 16710  0002F0  6EE6               	movwf	postinc1,c
 16711  0002F2  C050  FFE6         	movff	_tempStatusAddr,postinc1
 16712  0002F6  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
 16713  0002FA  EC97  F020         	call	_write_EEPROM	;wreg free
 16714                           
 16715                           ;FinalProject.c: 1146: my_print("\n\r Temperature Sensor Alarm Enabled.\n\r");
 16716  0002FE  0E35               	movlw	low STR_73
 16717  000300  6EE6               	movwf	postinc1,c
 16718  000302  0E7C               	movlw	high STR_73
 16719  000304  6EE6               	movwf	postinc1,c
 16720  000306  ECF8  F01E         	call	_my_print	;wreg free
 16721                           
 16722                           ;FinalProject.c: 1147: halfSecDelay();
 16723  00030A  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16724                           
 16725                           ;FinalProject.c: 1148: halfSecDelay();
 16726  00030E  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16727                           
 16728                           ;FinalProject.c: 1151: }
 16729                           ;FinalProject.c: 1154: }
 16730  000312  D018               	goto	i1l7605
 16731  000314                     i1l7593:
 16732                           
 16733                           ;FinalProject.c: 1155: else if(third_correctPassword == 0)
 16734  000314  5036               	movf	My_ISR_Low_TempSensor@third_correctPassword,w,c
 16735  000316  1037               	iorwf	My_ISR_Low_TempSensor@third_correctPassword+1,w,c
 16736  000318  A4D8               	btfss	status,2,c
 16737  00031A  D014               	goto	i1l7605
 16738                           
 16739                           ;FinalProject.c: 1156: {
 16740                           ;FinalProject.c: 1157: my_print("\n\rIncorrect Password\n\r");
 16741  00031C  0E62               	movlw	low STR_11
 16742  00031E  6EE6               	movwf	postinc1,c
 16743  000320  0E7F               	movlw	high STR_11
 16744  000322  6EE6               	movwf	postinc1,c
 16745  000324  ECF8  F01E         	call	_my_print	;wreg free
 16746                           
 16747                           ;FinalProject.c: 1158: check = 1;
 16748  000328  0E00               	movlw	0
 16749  00032A  6E35               	movwf	My_ISR_Low_TempSensor@check+1,c
 16750  00032C  0E01               	movlw	1
 16751  00032E  6E34               	movwf	My_ISR_Low_TempSensor@check,c
 16752                           
 16753                           ;FinalProject.c: 1159: halfSecDelay();
 16754  000330  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16755                           
 16756                           ;FinalProject.c: 1160: halfSecDelay();
 16757  000334  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16758                           
 16759                           ;FinalProject.c: 1162: third_correctPassword = temp_reset();
 16760  000338  ECE6  F018         	call	_temp_reset	;wreg free
 16761  00033C  C017  F036         	movff	?_temp_reset,My_ISR_Low_TempSensor@third_correctPassword
 16762  000340  C018  F037         	movff	?_temp_reset+1,My_ISR_Low_TempSensor@third_correctPassword+1
 16763  000344                     i1l7605:
 16764                           
 16765                           ;FinalProject.c: 1165: }
 16766                           ;FinalProject.c: 1166: }while(check == 1);
 16767  000344  0446               	decf	_check,w,c
 16768  000346  1047               	iorwf	_check+1,w,c
 16769  000348  B4D8               	btfsc	status,2,c
 16770  00034A  D6F8               	goto	i1l7493
 16771                           
 16772                           ;FinalProject.c: 1168: my_print("\n\n\n\rEnter 0 to go back!!!\n\r");
 16773  00034C  0E79               	movlw	low STR_95
 16774  00034E  6EE6               	movwf	postinc1,c
 16775  000350  0E7E               	movlw	high STR_95
 16776  000352  6EE6               	movwf	postinc1,c
 16777  000354  ECF8  F01E         	call	_my_print	;wreg free
 16778                           
 16779                           ;FinalProject.c: 1169: }else{
 16780  000358  D005               	goto	i1l479
 16781  00035A                     i1l439:
 16782                           
 16783                           ;FinalProject.c: 1170: PORTBbits.RB5 = PORTBbits.RB5 ^ 1;
 16784  00035A  BA81               	btfsc	3969,5,c	;volatile
 16785  00035C  D002               	goto	i1u895_20
 16786  00035E  8A81               	bsf	3969,5,c	;volatile
 16787  000360  D001               	goto	i1l479
 16788  000362                     i1u895_20:
 16789  000362  9A81               	bcf	3969,5,c	;volatile
 16790  000364                     i1l479:
 16791                           
 16792                           ;FinalProject.c: 1172: }
 16793                           ;FinalProject.c: 1175: PIR1bits.ADIF = 0;
 16794  000364  9C9E               	bcf	3998,6,c	;volatile
 16795  000366                     i1l480:
 16796  000366  C031  F041         	movff	??_My_ISR_Low_TempSensor+19,btemp+7
 16797  00036A  C030  F040         	movff	??_My_ISR_Low_TempSensor+18,btemp+6
 16798  00036E  C02F  F03C         	movff	??_My_ISR_Low_TempSensor+17,btemp+2
 16799  000372  C02E  F03B         	movff	??_My_ISR_Low_TempSensor+16,btemp+1
 16800  000376  C02D  F03A         	movff	??_My_ISR_Low_TempSensor+15,btemp
 16801  00037A  C02C  FFF5         	movff	??_My_ISR_Low_TempSensor+14,tablat
 16802  00037E  C02B  FFF8         	movff	??_My_ISR_Low_TempSensor+13,tblptru
 16803  000382  C02A  FFF7         	movff	??_My_ISR_Low_TempSensor+12,tblptrh
 16804  000386  C029  FFF6         	movff	??_My_ISR_Low_TempSensor+11,tblptrl
 16805  00038A  C028  FFF4         	movff	??_My_ISR_Low_TempSensor+10,prodh
 16806  00038E  C027  FFF3         	movff	??_My_ISR_Low_TempSensor+9,prodl
 16807  000392  C026  FFDA         	movff	??_My_ISR_Low_TempSensor+8,fsr2h
 16808  000396  C025  FFD9         	movff	??_My_ISR_Low_TempSensor+7,fsr2l
 16809  00039A  C024  FFE2         	movff	??_My_ISR_Low_TempSensor+6,fsr1h
 16810  00039E  C023  FFE1         	movff	??_My_ISR_Low_TempSensor+5,fsr1l
 16811  0003A2  C022  FFEA         	movff	??_My_ISR_Low_TempSensor+4,fsr0h
 16812  0003A6  C021  FFE9         	movff	??_My_ISR_Low_TempSensor+3,fsr0l
 16813  0003AA  C020  FFE0         	movff	??_My_ISR_Low_TempSensor+2,bsr
 16814  0003AE  C01F  FFE8         	movff	??_My_ISR_Low_TempSensor+1,wreg
 16815  0003B2  C01E  FFD8         	movff	??_My_ISR_Low_TempSensor,status
 16816  0003B6  0010               	retfie	
 16817  0003B8                     __end_of_My_ISR_Low_TempSensor:
 16818                           	opt stack 0
 16819                           tblptru	equ	0xFF8
 16820                           tblptrh	equ	0xFF7
 16821                           tblptrl	equ	0xFF6
 16822                           tablat	equ	0xFF5
 16823                           prodh	equ	0xFF4
 16824                           prodl	equ	0xFF3
 16825                           intcon	equ	0xFF2
 16826                           intcon2	equ	0xFF1
 16827                           indf0	equ	0xFEF
 16828                           postinc0	equ	0xFEE
 16829                           fsr0h	equ	0xFEA
 16830                           fsr0l	equ	0xFE9
 16831                           wreg	equ	0xFE8
 16832                           postinc1	equ	0xFE6
 16833                           postdec1	equ	0xFE5
 16834                           plusw1	equ	0xFE3
 16835                           fsr1h	equ	0xFE2
 16836                           fsr1l	equ	0xFE1
 16837                           bsr	equ	0xFE0
 16838                           indf2	equ	0xFDF
 16839                           postinc2	equ	0xFDE
 16840                           postdec2	equ	0xFDD
 16841                           fsr2h	equ	0xFDA
 16842                           fsr2l	equ	0xFD9
 16843                           status	equ	0xFD8
 16844                           
 16845 ;; *************** function _temp_reset *****************
 16846 ;; Defined at:
 16847 ;;		line 1232 in file "FinalProject.c"
 16848 ;; Parameters:    Size  Location     Type
 16849 ;;		None
 16850 ;; Auto vars:     Size  Location     Type
 16851 ;;  i               2   27[COMRAM] int 
 16852 ;;  b_correctPas    2   25[COMRAM] int 
 16853 ;; Return value:  Size  Location     Type
 16854 ;;                  2   22[COMRAM] int 
 16855 ;; Registers used:
 16856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 16857 ;; Tracked objects:
 16858 ;;		On entry : 0/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16862 ;;      Params:         2       0       0       0       0       0       0
 16863 ;;      Locals:         4       0       0       0       0       0       0
 16864 ;;      Temps:          1       0       0       0       0       0       0
 16865 ;;      Totals:         7       0       0       0       0       0       0
 16866 ;;Total ram usage:        7 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:    8
 16869 ;; This function calls:
 16870 ;;		_choiceKeypad
 16871 ;;		_halfSecDelay
 16872 ;;		_initialScreen
 16873 ;;		_my_print
 16874 ;;		_read_EEPROM
 16875 ;;		_reception
 16876 ;; This function is called by:
 16877 ;;		_My_ISR_Low_TempSensor
 16878 ;; This function uses a non-reentrant model
 16879 ;;
 16880                           
 16881                           	psect	text50
 16882  0031CC                     __ptext50:
 16883                           	opt stack 0
 16884  0031CC                     _temp_reset:
 16885                           	opt stack 13
 16886                           
 16887                           ;FinalProject.c: 1234: initialScreen();
 16888                           
 16889                           ;incstack = 0
 16890  0031CC  ECFC  F01F         	call	_initialScreen	;wreg free
 16891                           
 16892                           ;FinalProject.c: 1235: my_print("\n\r!!!!!!!!   TEMPERATURE SENSOR HAS BEEN TRIPPED    !
      +                          !!!!!!!!!");
 16893  0031D0  0E8E               	movlw	low STR_93
 16894  0031D2  6EE6               	movwf	postinc1,c
 16895  0031D4  0E76               	movlw	high STR_93
 16896  0031D6  6EE6               	movwf	postinc1,c
 16897  0031D8  ECF8  F01E         	call	_my_print	;wreg free
 16898                           
 16899                           ;FinalProject.c: 1237: my_print("\r\nEnter the password to reset the alarm: ");
 16900  0031DC  0E92               	movlw	low STR_113
 16901  0031DE  6EE6               	movwf	postinc1,c
 16902  0031E0  0E7B               	movlw	high STR_113
 16903  0031E2  6EE6               	movwf	postinc1,c
 16904  0031E4  ECF8  F01E         	call	_my_print	;wreg free
 16905                           
 16906                           ;FinalProject.c: 1238: halfSecDelay();
 16907  0031E8  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16908                           
 16909                           ;FinalProject.c: 1240: int i;
 16910                           ;FinalProject.c: 1242: if(PORTBbits.RB4 == 1)
 16911  0031EC  A881               	btfss	3969,4,c	;volatile
 16912  0031EE  D029               	goto	i1l5485
 16913                           
 16914                           ;FinalProject.c: 1243: {
 16915                           ;FinalProject.c: 1244: for(i=0; i<4; i++)
 16916  0031F0  0E00               	movlw	0
 16917  0031F2  6E1D               	movwf	temp_reset@i+1,c
 16918  0031F4  0E00               	movlw	0
 16919  0031F6  6E1C               	movwf	temp_reset@i,c
 16920  0031F8                     i1l5465:
 16921  0031F8  BE1D               	btfsc	temp_reset@i+1,7,c
 16922  0031FA  D006               	goto	i1l5469
 16923  0031FC  501D               	movf	temp_reset@i+1,w,c
 16924  0031FE  E11B               	bnz	i1l5483
 16925  003200  0E04               	movlw	4
 16926  003202  5C1C               	subwf	temp_reset@i,w,c
 16927  003204  B0D8               	btfsc	status,0,c
 16928  003206  D017               	goto	i1l5483
 16929  003208                     i1l5469:
 16930                           
 16931                           ;FinalProject.c: 1245: {
 16932                           ;FinalProject.c: 1246: choiceKeypad();
 16933  003208  EC85  F01D         	call	_choiceKeypad	;wreg free
 16934                           
 16935                           ;FinalProject.c: 1247: tempPass[i] = keypadValue;
 16936  00320C  0ED2               	movlw	low _tempPass
 16937  00320E  241C               	addwf	temp_reset@i,w,c
 16938  003210  6ED9               	movwf	fsr2l,c
 16939  003212  0E00               	movlw	high _tempPass
 16940  003214  201D               	addwfc	temp_reset@i+1,w,c
 16941  003216  6EDA               	movwf	fsr2h,c
 16942  003218  C0E0  FFDF         	movff	_keypadValue,indf2
 16943                           
 16944                           ;FinalProject.c: 1248: halfSecDelay();
 16945  00321C  ECA6  F01F         	call	_halfSecDelay	;wreg free
 16946                           
 16947                           ;FinalProject.c: 1249: my_print("*");
 16948  003220  0E49               	movlw	low (STR_16+61)
 16949  003222  6EE6               	movwf	postinc1,c
 16950  003224  0E77               	movlw	high (STR_16+61)
 16951  003226  6EE6               	movwf	postinc1,c
 16952  003228  ECF8  F01E         	call	_my_print	;wreg free
 16953  00322C  4A1C               	infsnz	temp_reset@i,f,c
 16954  00322E  2A1D               	incf	temp_reset@i+1,f,c
 16955  003230  D7E3               	goto	i1l5465
 16956  003232                     i1l5481:
 16957                           
 16958                           ;FinalProject.c: 1253: choiceKeypad();
 16959  003232  EC85  F01D         	call	_choiceKeypad	;wreg free
 16960  003236                     i1l5483:
 16961  003236  0E41               	movlw	65
 16962  003238  0100               	movlb	0	; () banked
 16963  00323A  19E0               	xorwf	_keypadValue& (0+255),w,b
 16964  00323C  B4D8               	btfsc	status,2,c
 16965  00323E  D024               	goto	i1l5501
 16966  003240  D7F8               	goto	i1l5481
 16967  003242                     i1l5485:
 16968                           
 16969                           ;FinalProject.c: 1256: else
 16970                           ;FinalProject.c: 1257: {
 16971                           ;FinalProject.c: 1258: for(i=0; i<4; i++)
 16972  003242  0E00               	movlw	0
 16973  003244  6E1D               	movwf	temp_reset@i+1,c
 16974  003246  0E00               	movlw	0
 16975  003248  6E1C               	movwf	temp_reset@i,c
 16976  00324A                     i1l5487:
 16977  00324A  BE1D               	btfsc	temp_reset@i+1,7,c
 16978  00324C  D006               	goto	i1l5491
 16979  00324E  501D               	movf	temp_reset@i+1,w,c
 16980  003250  E117               	bnz	i1l5499
 16981  003252  0E04               	movlw	4
 16982  003254  5C1C               	subwf	temp_reset@i,w,c
 16983  003256  B0D8               	btfsc	status,0,c
 16984  003258  D013               	goto	i1l5499
 16985  00325A                     i1l5491:
 16986                           
 16987                           ;FinalProject.c: 1259: {
 16988                           ;FinalProject.c: 1260: tempPass[i] = reception();
 16989  00325A  0ED2               	movlw	low _tempPass
 16990  00325C  241C               	addwf	temp_reset@i,w,c
 16991  00325E  6ED9               	movwf	fsr2l,c
 16992  003260  0E00               	movlw	high _tempPass
 16993  003262  201D               	addwfc	temp_reset@i+1,w,c
 16994  003264  6EDA               	movwf	fsr2h,c
 16995  003266  ECF3  F020         	call	_reception	;wreg free
 16996  00326A  503A               	movf	btemp,w,c
 16997  00326C  6EDF               	movwf	indf2,c
 16998                           
 16999                           ;FinalProject.c: 1261: my_print("*");
 17000  00326E  0E49               	movlw	low (STR_16+61)
 17001  003270  6EE6               	movwf	postinc1,c
 17002  003272  0E77               	movlw	high (STR_16+61)
 17003  003274  6EE6               	movwf	postinc1,c
 17004  003276  ECF8  F01E         	call	_my_print	;wreg free
 17005  00327A  4A1C               	infsnz	temp_reset@i,f,c
 17006  00327C  2A1D               	incf	temp_reset@i+1,f,c
 17007  00327E  D7E5               	goto	i1l5487
 17008  003280                     i1l5499:
 17009  003280  0E0D               	movlw	13
 17010  003282  18AE               	xorwf	4014,w,c	;volatile
 17011  003284  A4D8               	btfss	status,2,c
 17012  003286  D7FC               	goto	i1l5499
 17013  003288                     i1l5501:
 17014                           
 17015                           ;FinalProject.c: 1265: }
 17016                           ;FinalProject.c: 1267: int b_correctPassword = 1;
 17017  003288  0E00               	movlw	0
 17018  00328A  6E1B               	movwf	temp_reset@b_correctPassword+1,c
 17019  00328C  0E01               	movlw	1
 17020  00328E  6E1A               	movwf	temp_reset@b_correctPassword,c
 17021                           
 17022                           ;FinalProject.c: 1269: for(i = 0, addr = 0x00; i < 4; addr++,i++)
 17023  003290  0E00               	movlw	0
 17024  003292  6E1D               	movwf	temp_reset@i+1,c
 17025  003294  0E00               	movlw	0
 17026  003296  6E1C               	movwf	temp_reset@i,c
 17027  003298  0E00               	movlw	0
 17028  00329A  0100               	movlb	0	; () banked
 17029  00329C  6FDA               	movwf	(_addr+1)& (0+255),b
 17030  00329E  0E00               	movlw	0
 17031  0032A0  6FD9               	movwf	_addr& (0+255),b
 17032                           
 17033                           ; BSR set to: 0
 17034  0032A2  BE1D               	btfsc	temp_reset@i+1,7,c
 17035  0032A4  D006               	goto	i1l5507
 17036  0032A6  501D               	movf	temp_reset@i+1,w,c
 17037  0032A8  E122               	bnz	i1l515
 17038  0032AA  0E04               	movlw	4
 17039  0032AC  5C1C               	subwf	temp_reset@i,w,c
 17040  0032AE  B0D8               	btfsc	status,0,c
 17041  0032B0  D01E               	goto	i1l515
 17042  0032B2                     i1l5507:
 17043                           
 17044                           ; BSR set to: 0
 17045                           ;FinalProject.c: 1270: {
 17046                           ;FinalProject.c: 1271: if(read_EEPROM(addr) == tempPass[i])
 17047  0032B2  0ED2               	movlw	low _tempPass
 17048  0032B4  241C               	addwf	temp_reset@i,w,c
 17049  0032B6  6ED9               	movwf	fsr2l,c
 17050  0032B8  0E00               	movlw	high _tempPass
 17051  0032BA  201D               	addwfc	temp_reset@i+1,w,c
 17052  0032BC  6EDA               	movwf	fsr2h,c
 17053  0032BE  C0D9  FFE6         	movff	_addr,postinc1
 17054  0032C2  C0DA  FFE6         	movff	_addr+1,postinc1
 17055  0032C6  ECE8  F020         	call	_read_EEPROM	;wreg free
 17056  0032CA  50DE               	movf	postinc2,w,c
 17057  0032CC  183A               	xorwf	btemp,w,c
 17058  0032CE  B4D8               	btfsc	status,2,c
 17059  0032D0  D004               	goto	i1l5513
 17060                           
 17061                           ;FinalProject.c: 1275: else
 17062                           ;FinalProject.c: 1276: {
 17063                           ;FinalProject.c: 1277: b_correctPassword = 0;
 17064                           
 17065                           ;FinalProject.c: 1272: {
 17066                           ;FinalProject.c: 1274: }
 17067  0032D2  0E00               	movlw	0
 17068  0032D4  6E1B               	movwf	temp_reset@b_correctPassword+1,c
 17069  0032D6  0E00               	movlw	0
 17070  0032D8  6E1A               	movwf	temp_reset@b_correctPassword,c
 17071  0032DA                     i1l5513:
 17072  0032DA  0100               	movlb	0	; () banked
 17073  0032DC  4BD9               	infsnz	_addr& (0+255),f,b
 17074  0032DE  2BDA               	incf	(_addr+1)& (0+255),f,b
 17075                           
 17076                           ; BSR set to: 0
 17077  0032E0  4A1C               	infsnz	temp_reset@i,f,c
 17078  0032E2  2A1D               	incf	temp_reset@i+1,f,c
 17079                           
 17080                           ; BSR set to: 0
 17081  0032E4  BE1D               	btfsc	temp_reset@i+1,7,c
 17082  0032E6  D7E5               	goto	i1l5507
 17083  0032E8  501D               	movf	temp_reset@i+1,w,c
 17084  0032EA  E101               	bnz	i1u611_20
 17085  0032EC  D7DE               	goto	L23
 17086  0032EE                     i1u611_20:
 17087  0032EE                     i1l515:
 17088                           
 17089                           ; BSR set to: 0
 17090                           ;FinalProject.c: 1279: }
 17091                           ;FinalProject.c: 1280: }
 17092                           ;FinalProject.c: 1282: return b_correctPassword;
 17093  0032EE  C01A  F017         	movff	temp_reset@b_correctPassword,?_temp_reset
 17094  0032F2  C01B  F018         	movff	temp_reset@b_correctPassword+1,?_temp_reset+1
 17095                           
 17096                           ; BSR set to: 0
 17097  0032F6  0012               	return		;funcret
 17098  0032F8                     __end_of_temp_reset:
 17099                           	opt stack 0
 17100                           tblptru	equ	0xFF8
 17101                           tblptrh	equ	0xFF7
 17102                           tblptrl	equ	0xFF6
 17103                           tablat	equ	0xFF5
 17104                           prodh	equ	0xFF4
 17105                           prodl	equ	0xFF3
 17106                           intcon	equ	0xFF2
 17107                           intcon2	equ	0xFF1
 17108                           indf0	equ	0xFEF
 17109                           postinc0	equ	0xFEE
 17110                           fsr0h	equ	0xFEA
 17111                           fsr0l	equ	0xFE9
 17112                           wreg	equ	0xFE8
 17113                           postinc1	equ	0xFE6
 17114                           postdec1	equ	0xFE5
 17115                           plusw1	equ	0xFE3
 17116                           fsr1h	equ	0xFE2
 17117                           fsr1l	equ	0xFE1
 17118                           bsr	equ	0xFE0
 17119                           indf2	equ	0xFDF
 17120                           postinc2	equ	0xFDE
 17121                           postdec2	equ	0xFDD
 17122                           fsr2h	equ	0xFDA
 17123                           fsr2l	equ	0xFD9
 17124                           status	equ	0xFD8
 17125                           
 17126 ;; *************** function _My_ISR_High *****************
 17127 ;; Defined at:
 17128 ;;		line 875 in file "FinalProject.c"
 17129 ;; Parameters:    Size  Location     Type
 17130 ;;		None
 17131 ;; Auto vars:     Size  Location     Type
 17132 ;;  sec_correctP    2   20[COMRAM] int 
 17133 ;;  check           2   18[COMRAM] int 
 17134 ;; Return value:  Size  Location     Type
 17135 ;;                  1    wreg      void 
 17136 ;; Registers used:
 17137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru, cstack
 17138 ;; Tracked objects:
 17139 ;;		On entry : 0/0
 17140 ;;		On exit  : 0/0
 17141 ;;		Unchanged: 0/0
 17142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17143 ;;      Params:         0       0       0       0       0       0       0
 17144 ;;      Locals:         4       0       0       0       0       0       0
 17145 ;;      Temps:         11       0       0       0       0       0       0
 17146 ;;      Totals:        15       0       0       0       0       0       0
 17147 ;;Total ram usage:       15 bytes
 17148 ;; Hardware stack levels used:    1
 17149 ;; Hardware stack levels required when called:    4
 17150 ;; This function calls:
 17151 ;;		_PIR_reset
 17152 ;;		_choiceKeypad
 17153 ;;		_halfSecDelay
 17154 ;;		_initialScreen
 17155 ;;		_initialize_PIR
 17156 ;;		_initialize_tempSensor
 17157 ;;		_my_print
 17158 ;;		_read_EEPROM
 17159 ;;		_reception
 17160 ;;		_write_EEPROM
 17161 ;; This function is called by:
 17162 ;;		Interrupt level 2
 17163 ;; This function uses a non-reentrant model
 17164 ;;
 17165                           
 17166                           	psect	intcode
 17167  000008                     __pintcode:
 17168                           	opt stack 0
 17169  000008                     _My_ISR_High:
 17170                           	opt stack 13
 17171                           
 17172                           ; BSR set to: 0
 17173                           ;incstack = 0
 17174  000008  CFE9 F008          	movff	fsr0l,??_My_ISR_High
 17175  00000C  CFEA F009          	movff	fsr0h,??_My_ISR_High+1
 17176  000010  CFE1 F00A          	movff	fsr1l,??_My_ISR_High+2
 17177  000014  EDB0  F00F         	call	int_func,f	;refresh shadow registers
 17178                           tblptru	equ	0xFF8
 17179                           tblptrh	equ	0xFF7
 17180                           tblptrl	equ	0xFF6
 17181                           tablat	equ	0xFF5
 17182                           prodh	equ	0xFF4
 17183                           prodl	equ	0xFF3
 17184                           intcon	equ	0xFF2
 17185                           intcon2	equ	0xFF1
 17186                           indf0	equ	0xFEF
 17187                           postinc0	equ	0xFEE
 17188                           fsr0h	equ	0xFEA
 17189                           fsr0l	equ	0xFE9
 17190                           wreg	equ	0xFE8
 17191                           postinc1	equ	0xFE6
 17192                           postdec1	equ	0xFE5
 17193                           plusw1	equ	0xFE3
 17194                           fsr1h	equ	0xFE2
 17195                           fsr1l	equ	0xFE1
 17196                           bsr	equ	0xFE0
 17197                           indf2	equ	0xFDF
 17198                           postinc2	equ	0xFDE
 17199                           postdec2	equ	0xFDD
 17200                           fsr2h	equ	0xFDA
 17201                           fsr2l	equ	0xFD9
 17202                           status	equ	0xFD8
 17203                           
 17204                           	psect	intcode_body
 17205  001F60                     __pintcode_body:
 17206                           	opt stack 13
 17207  001F60                     int_func:
 17208                           	opt stack 13
 17209  001F60  0006               	pop		; remove dummy address from shadow register refresh
 17210  001F62  CFE2 F00B          	movff	fsr1h,??_My_ISR_High+3
 17211  001F66  CFD9 F00C          	movff	fsr2l,??_My_ISR_High+4
 17212  001F6A  CFDA F00D          	movff	fsr2h,??_My_ISR_High+5
 17213  001F6E  CFF6 F00E          	movff	tblptrl,??_My_ISR_High+6
 17214  001F72  CFF7 F00F          	movff	tblptrh,??_My_ISR_High+7
 17215  001F76  CFF8 F010          	movff	tblptru,??_My_ISR_High+8
 17216  001F7A  CFF5 F011          	movff	tablat,??_My_ISR_High+9
 17217  001F7E  C03A  F012         	movff	btemp,??_My_ISR_High+10
 17218  001F82  EE12  F0A4         	lfsr	1,___inthi_sp
 17219                           
 17220                           ;FinalProject.c: 878: int check;
 17221                           ;FinalProject.c: 879: if(INTCONbits.INT0IF == 1 && INTCONbits.INT0IE ==1 )
 17222  001F86  B2F2               	btfsc	intcon,1,c	;volatile
 17223  001F88  A8F2               	btfss	intcon,4,c	;volatile
 17224  001F8A  D0EE               	goto	i2l5679
 17225                           
 17226                           ;FinalProject.c: 880: {
 17227                           ;FinalProject.c: 881: PORTBbits.RB2 = 1;
 17228  001F8C  8481               	bsf	3969,2,c	;volatile
 17229                           
 17230                           ;FinalProject.c: 884: int sec_correctPassword = PIR_reset();
 17231  001F8E  EC7C  F019         	call	_PIR_reset	;wreg free
 17232  001F92  C001  F015         	movff	?_PIR_reset,My_ISR_High@sec_correctPassword
 17233  001F96  C002  F016         	movff	?_PIR_reset+1,My_ISR_High@sec_correctPassword+1
 17234  001F9A                     i2l5581:
 17235                           
 17236                           ;FinalProject.c: 887: {
 17237                           ;FinalProject.c: 888: check = 0;
 17238  001F9A  0E00               	movlw	0
 17239  001F9C  6E14               	movwf	My_ISR_High@check+1,c
 17240  001F9E  0E00               	movlw	0
 17241  001FA0  6E13               	movwf	My_ISR_High@check,c
 17242                           
 17243                           ;FinalProject.c: 890: if(sec_correctPassword == 1)
 17244  001FA2  0415               	decf	My_ISR_High@sec_correctPassword,w,c
 17245  001FA4  1016               	iorwf	My_ISR_High@sec_correctPassword+1,w,c
 17246  001FA6  A4D8               	btfss	status,2,c
 17247  001FA8  D0AB               	goto	i2l5659
 17248                           
 17249                           ;FinalProject.c: 891: {
 17250                           ;FinalProject.c: 892: PORTBbits.RB2 = 0;
 17251  001FAA  9481               	bcf	3969,2,c	;volatile
 17252                           
 17253                           ;FinalProject.c: 893: my_print("\n\rDisable the PIR Sensor Alarm?");
 17254  001FAC  0EC0               	movlw	low STR_80
 17255  001FAE  6EE6               	movwf	postinc1,c
 17256  001FB0  0E7D               	movlw	high STR_80
 17257  001FB2  6EE6               	movwf	postinc1,c
 17258  001FB4  ECF8  F01E         	call	_my_print	;wreg free
 17259                           
 17260                           ;FinalProject.c: 894: my_print("\n\rEnable = 1 and Disable = 0");
 17261  001FB8  0E5C               	movlw	low STR_81
 17262  001FBA  6EE6               	movwf	postinc1,c
 17263  001FBC  0E7E               	movlw	high STR_81
 17264  001FBE  6EE6               	movwf	postinc1,c
 17265  001FC0  ECF8  F01E         	call	_my_print	;wreg free
 17266                           
 17267                           ;FinalProject.c: 896: my_print("\n\rInput: ");
 17268  001FC4  0ECD               	movlw	low STR_39
 17269  001FC6  6EE6               	movwf	postinc1,c
 17270  001FC8  0E7F               	movlw	high STR_39
 17271  001FCA  6EE6               	movwf	postinc1,c
 17272  001FCC  ECF8  F01E         	call	_my_print	;wreg free
 17273                           
 17274                           ;FinalProject.c: 897: halfSecDelay();
 17275  001FD0  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17276                           
 17277                           ;FinalProject.c: 900: if(PORTBbits.RB4 == 1)
 17278  001FD4  A881               	btfss	3969,4,c	;volatile
 17279  001FD6  D013               	goto	i2l5601
 17280                           
 17281                           ;FinalProject.c: 901: {
 17282                           ;FinalProject.c: 902: choiceKeypad();
 17283  001FD8  EC85  F01D         	call	_choiceKeypad	;wreg free
 17284  001FDC                     i2l408:
 17285  001FDC  A2AC               	btfss	4012,1,c	;volatile
 17286  001FDE  D7FE               	goto	i2l408
 17287                           
 17288                           ;FinalProject.c: 904: TXREG = keypadValue;
 17289  001FE0  C0E0  FFAD         	movff	_keypadValue,4013	;volatile
 17290                           
 17291                           ;FinalProject.c: 905: choice = keypadValue;
 17292  001FE4  C0E0  F0DF         	movff	_keypadValue,_choice
 17293                           
 17294                           ;FinalProject.c: 906: halfSecDelay();
 17295  001FE8  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17296                           
 17297                           ;FinalProject.c: 907: while(keypadValue != 'A'){
 17298  001FEC  D002               	goto	i2l5599
 17299  001FEE                     i2l5597:
 17300                           
 17301                           ;FinalProject.c: 908: choiceKeypad();
 17302  001FEE  EC85  F01D         	call	_choiceKeypad	;wreg free
 17303  001FF2                     i2l5599:
 17304  001FF2  0E41               	movlw	65
 17305  001FF4  0100               	movlb	0	; () banked
 17306  001FF6  19E0               	xorwf	_keypadValue& (0+255),w,b
 17307  001FF8  B4D8               	btfsc	status,2,c
 17308  001FFA  D00E               	goto	i2l5605
 17309  001FFC  D7F8               	goto	i2l5597
 17310  001FFE                     i2l5601:
 17311                           
 17312                           ;FinalProject.c: 911: else
 17313                           ;FinalProject.c: 912: {
 17314                           ;FinalProject.c: 913: choice = reception();
 17315  001FFE  ECF3  F020         	call	_reception	;wreg free
 17316  002002  503A               	movf	btemp,w,c
 17317  002004  0100               	movlb	0	; () banked
 17318  002006  6FDF               	movwf	_choice& (0+255),b
 17319  002008                     i2l415:
 17320  002008  A2AC               	btfss	4012,1,c	;volatile
 17321  00200A  D7FE               	goto	i2l415
 17322                           
 17323                           ;FinalProject.c: 915: TXREG = choice;
 17324  00200C  C0DF  FFAD         	movff	_choice,4013	;volatile
 17325  002010                     i2l5603:
 17326  002010  0E0D               	movlw	13
 17327  002012  18AE               	xorwf	4014,w,c	;volatile
 17328  002014  A4D8               	btfss	status,2,c
 17329  002016  D7FC               	goto	i2l5603
 17330  002018                     i2l5605:
 17331                           
 17332                           ;FinalProject.c: 917: }
 17333                           ;FinalProject.c: 920: if(choice == '1')
 17334  002018  0E31               	movlw	49
 17335  00201A  0100               	movlb	0	; () banked
 17336  00201C  19DF               	xorwf	_choice& (0+255),w,b
 17337  00201E  A4D8               	btfss	status,2,c
 17338  002020  D01E               	goto	i2l5623
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;FinalProject.c: 921: {
 17342                           ;FinalProject.c: 922: initialScreen();
 17343  002022  ECFC  F01F         	call	_initialScreen	;wreg free
 17344                           
 17345                           ;FinalProject.c: 923: initialize_PIR();
 17346  002026  ECFE  F020         	call	_initialize_PIR	;wreg free
 17347                           
 17348                           ;FinalProject.c: 924: INTCONbits.INT0IE = 1;
 17349  00202A  88F2               	bsf	intcon,4,c	;volatile
 17350                           
 17351                           ;FinalProject.c: 925: write_EEPROM(PIRStatusAddr,'E');
 17352  00202C  0E45               	movlw	69
 17353  00202E  6EE6               	movwf	postinc1,c
 17354  002030  C0EA  FFE6         	movff	_PIRStatusAddr,postinc1
 17355  002034  C0EB  FFE6         	movff	_PIRStatusAddr+1,postinc1
 17356  002038  EC97  F020         	call	_write_EEPROM	;wreg free
 17357                           
 17358                           ;FinalProject.c: 926: my_print("\n\r PIR Sensor Alarm Enabled.\n\r");
 17359  00203C  0EE0               	movlw	low STR_61
 17360  00203E  6EE6               	movwf	postinc1,c
 17361  002040  0E7D               	movlw	high STR_61
 17362  002042  6EE6               	movwf	postinc1,c
 17363  002044  ECF8  F01E         	call	_my_print	;wreg free
 17364                           
 17365                           ;FinalProject.c: 927: statusOfPir = "ACTIVE";
 17366  002048  0EE2               	movlw	low (STR_1+2)
 17367  00204A  0100               	movlb	0	; () banked
 17368  00204C  6FF0               	movwf	_statusOfPir& (0+255),b
 17369  00204E  0E7F               	movlw	high (STR_1+2)
 17370  002050  0100               	movlb	0	; () banked
 17371  002052  6FF1               	movwf	(_statusOfPir+1)& (0+255),b
 17372                           
 17373                           ; BSR set to: 0
 17374                           ;FinalProject.c: 928: halfSecDelay();
 17375  002054  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17376                           
 17377                           ;FinalProject.c: 929: halfSecDelay();
 17378  002058  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17379                           
 17380                           ;FinalProject.c: 931: }
 17381  00205C  D065               	goto	i2l5669
 17382  00205E                     i2l5623:
 17383                           
 17384                           ;FinalProject.c: 932: else if(choice == '0')
 17385  00205E  0E30               	movlw	48
 17386  002060  0100               	movlb	0	; () banked
 17387  002062  19DF               	xorwf	_choice& (0+255),w,b
 17388  002064  A4D8               	btfss	status,2,c
 17389  002066  D01C               	goto	i2l5639
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;FinalProject.c: 933: {
 17393                           ;FinalProject.c: 934: initialScreen();
 17394  002068  ECFC  F01F         	call	_initialScreen	;wreg free
 17395                           
 17396                           ;FinalProject.c: 935: INTCONbits.INT0IE = 0;
 17397  00206C  98F2               	bcf	intcon,4,c	;volatile
 17398                           
 17399                           ;FinalProject.c: 936: write_EEPROM(PIRStatusAddr,'D');
 17400  00206E  0E44               	movlw	68
 17401  002070  6EE6               	movwf	postinc1,c
 17402  002072  C0EA  FFE6         	movff	_PIRStatusAddr,postinc1
 17403  002076  C0EB  FFE6         	movff	_PIRStatusAddr+1,postinc1
 17404  00207A  EC97  F020         	call	_write_EEPROM	;wreg free
 17405                           
 17406                           ;FinalProject.c: 937: my_print("\n\r PIR Sensor Alarm Disabled.\n\r");
 17407  00207E  0EA0               	movlw	low STR_64
 17408  002080  6EE6               	movwf	postinc1,c
 17409  002082  0E7D               	movlw	high STR_64
 17410  002084  6EE6               	movwf	postinc1,c
 17411  002086  ECF8  F01E         	call	_my_print	;wreg free
 17412                           
 17413                           ;FinalProject.c: 938: statusOfPir = "INACTIVE";
 17414  00208A  0EE0               	movlw	low STR_1
 17415  00208C  0100               	movlb	0	; () banked
 17416  00208E  6FF0               	movwf	_statusOfPir& (0+255),b
 17417  002090  0E7F               	movlw	high STR_1
 17418  002092  0100               	movlb	0	; () banked
 17419  002094  6FF1               	movwf	(_statusOfPir+1)& (0+255),b
 17420                           
 17421                           ; BSR set to: 0
 17422                           ;FinalProject.c: 939: halfSecDelay();
 17423  002096  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17424                           
 17425                           ;FinalProject.c: 940: halfSecDelay();
 17426  00209A  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17427                           
 17428                           ;FinalProject.c: 943: }
 17429  00209E  D044               	goto	i2l5669
 17430  0020A0                     i2l5639:
 17431                           
 17432                           ;FinalProject.c: 944: else
 17433                           ;FinalProject.c: 945: {
 17434                           ;FinalProject.c: 946: my_print("\n\rInvalid Selection");
 17435  0020A0  0EB9               	movlw	low STR_87
 17436  0020A2  6EE6               	movwf	postinc1,c
 17437  0020A4  0E7F               	movlw	high STR_87
 17438  0020A6  6EE6               	movwf	postinc1,c
 17439  0020A8  ECF8  F01E         	call	_my_print	;wreg free
 17440                           
 17441                           ;FinalProject.c: 947: my_print("\n\r PIR SENSOR ALARM IS KEPT ENABLED");
 17442  0020AC  0E59               	movlw	low STR_88
 17443  0020AE  6EE6               	movwf	postinc1,c
 17444  0020B0  0E7D               	movlw	high STR_88
 17445  0020B2  6EE6               	movwf	postinc1,c
 17446  0020B4  ECF8  F01E         	call	_my_print	;wreg free
 17447                           
 17448                           ;FinalProject.c: 948: statusOfPir = "ACTIVE";
 17449  0020B8  0EE2               	movlw	low (STR_1+2)
 17450  0020BA  0100               	movlb	0	; () banked
 17451  0020BC  6FF0               	movwf	_statusOfPir& (0+255),b
 17452  0020BE  0E7F               	movlw	high (STR_1+2)
 17453  0020C0  0100               	movlb	0	; () banked
 17454  0020C2  6FF1               	movwf	(_statusOfPir+1)& (0+255),b
 17455                           
 17456                           ; BSR set to: 0
 17457                           ;FinalProject.c: 949: initialScreen();
 17458  0020C4  ECFC  F01F         	call	_initialScreen	;wreg free
 17459                           
 17460                           ;FinalProject.c: 950: initialize_PIR();
 17461  0020C8  ECFE  F020         	call	_initialize_PIR	;wreg free
 17462                           
 17463                           ;FinalProject.c: 951: INTCONbits.INT0IE = 1;
 17464  0020CC  88F2               	bsf	intcon,4,c	;volatile
 17465                           
 17466                           ;FinalProject.c: 952: write_EEPROM(PIRStatusAddr,'E');
 17467  0020CE  0E45               	movlw	69
 17468  0020D0  6EE6               	movwf	postinc1,c
 17469  0020D2  C0EA  FFE6         	movff	_PIRStatusAddr,postinc1
 17470  0020D6  C0EB  FFE6         	movff	_PIRStatusAddr+1,postinc1
 17471  0020DA  EC97  F020         	call	_write_EEPROM	;wreg free
 17472                           
 17473                           ;FinalProject.c: 953: my_print("\n\r PIR Sensor Alarm Enabled.\n\r");
 17474  0020DE  0EE0               	movlw	low STR_61
 17475  0020E0  6EE6               	movwf	postinc1,c
 17476  0020E2  0E7D               	movlw	high STR_61
 17477  0020E4  6EE6               	movwf	postinc1,c
 17478  0020E6  ECF8  F01E         	call	_my_print	;wreg free
 17479                           
 17480                           ;FinalProject.c: 954: statusOfPir = "ACTIVE";
 17481  0020EA  0EE2               	movlw	low (STR_1+2)
 17482  0020EC  0100               	movlb	0	; () banked
 17483  0020EE  6FF0               	movwf	_statusOfPir& (0+255),b
 17484  0020F0  0E7F               	movlw	high (STR_1+2)
 17485  0020F2  0100               	movlb	0	; () banked
 17486  0020F4  6FF1               	movwf	(_statusOfPir+1)& (0+255),b
 17487                           
 17488                           ; BSR set to: 0
 17489                           ;FinalProject.c: 955: halfSecDelay();
 17490  0020F6  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17491                           
 17492                           ;FinalProject.c: 956: halfSecDelay();
 17493  0020FA  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17494                           
 17495                           ;FinalProject.c: 958: }
 17496                           ;FinalProject.c: 961: }
 17497  0020FE  D014               	goto	i2l5669
 17498  002100                     i2l5659:
 17499                           
 17500                           ;FinalProject.c: 962: else
 17501                           ;FinalProject.c: 963: {
 17502                           ;FinalProject.c: 964: my_print("\n\rIncorrect Password.\n\r");
 17503  002100  0E1B               	movlw	low STR_92
 17504  002102  6EE6               	movwf	postinc1,c
 17505  002104  0E7F               	movlw	high STR_92
 17506  002106  6EE6               	movwf	postinc1,c
 17507  002108  ECF8  F01E         	call	_my_print	;wreg free
 17508                           
 17509                           ;FinalProject.c: 965: check = 1;
 17510  00210C  0E00               	movlw	0
 17511  00210E  6E14               	movwf	My_ISR_High@check+1,c
 17512  002110  0E01               	movlw	1
 17513  002112  6E13               	movwf	My_ISR_High@check,c
 17514                           
 17515                           ;FinalProject.c: 966: halfSecDelay();
 17516  002114  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17517                           
 17518                           ;FinalProject.c: 967: halfSecDelay();
 17519  002118  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17520                           
 17521                           ;FinalProject.c: 968: sec_correctPassword = PIR_reset();
 17522  00211C  EC7C  F019         	call	_PIR_reset	;wreg free
 17523  002120  C001  F015         	movff	?_PIR_reset,My_ISR_High@sec_correctPassword
 17524  002124  C002  F016         	movff	?_PIR_reset+1,My_ISR_High@sec_correctPassword+1
 17525  002128                     i2l5669:
 17526                           
 17527                           ;FinalProject.c: 969: }
 17528                           ;FinalProject.c: 970: }while(check == 1);
 17529  002128  0413               	decf	My_ISR_High@check,w,c
 17530  00212A  1014               	iorwf	My_ISR_High@check+1,w,c
 17531  00212C  B4D8               	btfsc	status,2,c
 17532  00212E  D735               	goto	i2l5581
 17533                           
 17534                           ;FinalProject.c: 973: if (read_EEPROM(tempStatusAddr) == 'E')
 17535  002130  C050  FFE6         	movff	_tempStatusAddr,postinc1
 17536  002134  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
 17537  002138  ECE8  F020         	call	_read_EEPROM	;wreg free
 17538  00213C  0E45               	movlw	69
 17539  00213E  183A               	xorwf	btemp,w,c
 17540  002140  A4D8               	btfss	status,2,c
 17541  002142  D004               	goto	i2l5675
 17542                           
 17543                           ;FinalProject.c: 974: {
 17544                           ;FinalProject.c: 975: initialize_tempSensor();
 17545  002144  EC14  F021         	call	_initialize_tempSensor	;wreg free
 17546                           
 17547                           ;FinalProject.c: 976: T0CONbits.TMR0ON = 1;
 17548  002148  8ED5               	bsf	4053,7,c	;volatile
 17549                           
 17550                           ;FinalProject.c: 980: }
 17551  00214A  D00D               	goto	i2l428
 17552  00214C                     i2l5675:
 17553                           
 17554                           ;FinalProject.c: 981: else if (read_EEPROM(tempStatusAddr) == 'D')
 17555  00214C  C050  FFE6         	movff	_tempStatusAddr,postinc1
 17556  002150  C051  FFE6         	movff	_tempStatusAddr+1,postinc1
 17557  002154  ECE8  F020         	call	_read_EEPROM	;wreg free
 17558  002158  0E44               	movlw	68
 17559  00215A  183A               	xorwf	btemp,w,c
 17560  00215C  A4D8               	btfss	status,2,c
 17561  00215E  D003               	goto	i2l428
 17562                           
 17563                           ;FinalProject.c: 982: {
 17564                           ;FinalProject.c: 983: T0CONbits.TMR0ON = 0;
 17565  002160  9ED5               	bcf	4053,7,c	;volatile
 17566                           
 17567                           ;FinalProject.c: 984: PIE1bits.ADIE = 0;
 17568  002162  9C9D               	bcf	3997,6,c	;volatile
 17569                           
 17570                           ;FinalProject.c: 985: PORTBbits.RB5 =0;
 17571  002164  9A81               	bcf	3969,5,c	;volatile
 17572  002166                     i2l428:
 17573                           
 17574                           ;FinalProject.c: 986: }
 17575                           ;FinalProject.c: 988: INTCONbits.INT0IF = 0;
 17576  002166  92F2               	bcf	intcon,1,c	;volatile
 17577  002168                     i2l5679:
 17578                           
 17579                           ;FinalProject.c: 989: }
 17580                           ;FinalProject.c: 991: if(tempIntSet== 1)
 17581  002168  044C               	decf	_tempIntSet,w,c
 17582  00216A  104D               	iorwf	_tempIntSet+1,w,c
 17583  00216C  A4D8               	btfss	status,2,c
 17584  00216E  D00D               	goto	i2l5683
 17585                           
 17586                           ;FinalProject.c: 992: {
 17587                           ;FinalProject.c: 993: my_print("\n\r!!!!!!!!   TEMPERATURE SENSOR HAS BEEN TRIPPED    !!
      +                          !!!!!!!!");
 17588  002170  0E8E               	movlw	low STR_93
 17589  002172  6EE6               	movwf	postinc1,c
 17590  002174  0E76               	movlw	high STR_93
 17591  002176  6EE6               	movwf	postinc1,c
 17592  002178  ECF8  F01E         	call	_my_print	;wreg free
 17593                           
 17594                           ;FinalProject.c: 995: my_print("\r\nEnter the password to reset the alarm: \n\r");
 17595  00217C  0E0F               	movlw	low STR_94
 17596  00217E  6EE6               	movwf	postinc1,c
 17597  002180  0E7B               	movlw	high STR_94
 17598  002182  6EE6               	movwf	postinc1,c
 17599  002184  ECF8  F01E         	call	_my_print	;wreg free
 17600                           
 17601                           ;FinalProject.c: 996: }
 17602  002188  D006               	goto	i2l432
 17603  00218A                     i2l5683:
 17604                           
 17605                           ;FinalProject.c: 997: else
 17606                           ;FinalProject.c: 998: {
 17607                           ;FinalProject.c: 999: my_print("\n\n\n\rEnter 0 to go back!!!\n\r");
 17608  00218A  0E79               	movlw	low STR_95
 17609  00218C  6EE6               	movwf	postinc1,c
 17610  00218E  0E7E               	movlw	high STR_95
 17611  002190  6EE6               	movwf	postinc1,c
 17612  002192  ECF8  F01E         	call	_my_print	;wreg free
 17613  002196                     i2l432:
 17614  002196  C012  F03A         	movff	??_My_ISR_High+10,btemp
 17615  00219A  C011  FFF5         	movff	??_My_ISR_High+9,tablat
 17616  00219E  C010  FFF8         	movff	??_My_ISR_High+8,tblptru
 17617  0021A2  C00F  FFF7         	movff	??_My_ISR_High+7,tblptrh
 17618  0021A6  C00E  FFF6         	movff	??_My_ISR_High+6,tblptrl
 17619  0021AA  C00D  FFDA         	movff	??_My_ISR_High+5,fsr2h
 17620  0021AE  C00C  FFD9         	movff	??_My_ISR_High+4,fsr2l
 17621  0021B2  C00B  FFE2         	movff	??_My_ISR_High+3,fsr1h
 17622  0021B6  C00A  FFE1         	movff	??_My_ISR_High+2,fsr1l
 17623  0021BA  C009  FFEA         	movff	??_My_ISR_High+1,fsr0h
 17624  0021BE  C008  FFE9         	movff	??_My_ISR_High,fsr0l
 17625  0021C2  0011               	retfie		f
 17626  0021C4                     __end_of_My_ISR_High:
 17627                           	opt stack 0
 17628                           tblptru	equ	0xFF8
 17629                           tblptrh	equ	0xFF7
 17630                           tblptrl	equ	0xFF6
 17631                           tablat	equ	0xFF5
 17632                           prodh	equ	0xFF4
 17633                           prodl	equ	0xFF3
 17634                           intcon	equ	0xFF2
 17635                           intcon2	equ	0xFF1
 17636                           indf0	equ	0xFEF
 17637                           postinc0	equ	0xFEE
 17638                           fsr0h	equ	0xFEA
 17639                           fsr0l	equ	0xFE9
 17640                           wreg	equ	0xFE8
 17641                           postinc1	equ	0xFE6
 17642                           postdec1	equ	0xFE5
 17643                           plusw1	equ	0xFE3
 17644                           fsr1h	equ	0xFE2
 17645                           fsr1l	equ	0xFE1
 17646                           bsr	equ	0xFE0
 17647                           indf2	equ	0xFDF
 17648                           postinc2	equ	0xFDE
 17649                           postdec2	equ	0xFDD
 17650                           fsr2h	equ	0xFDA
 17651                           fsr2l	equ	0xFD9
 17652                           status	equ	0xFD8
 17653                           
 17654 ;; *************** function _PIR_reset *****************
 17655 ;; Defined at:
 17656 ;;		line 1180 in file "FinalProject.c"
 17657 ;; Parameters:    Size  Location     Type
 17658 ;;		None
 17659 ;; Auto vars:     Size  Location     Type
 17660 ;;  i               2    5[COMRAM] int 
 17661 ;;  c_correctPas    2    3[COMRAM] int 
 17662 ;; Return value:  Size  Location     Type
 17663 ;;                  2    0[COMRAM] int 
 17664 ;; Registers used:
 17665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, tblptrl, tblptrh, tblptru
 17666 ;; Tracked objects:
 17667 ;;		On entry : 0/0
 17668 ;;		On exit  : 0/0
 17669 ;;		Unchanged: 0/0
 17670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17671 ;;      Params:         2       0       0       0       0       0       0
 17672 ;;      Locals:         4       0       0       0       0       0       0
 17673 ;;      Temps:          1       0       0       0       0       0       0
 17674 ;;      Totals:         7       0       0       0       0       0       0
 17675 ;;Total ram usage:        7 bytes
 17676 ;; Hardware stack levels used:    1
 17677 ;; Hardware stack levels required when called:    3
 17678 ;; This function calls:
 17679 ;;		_choiceKeypad
 17680 ;;		_halfSecDelay
 17681 ;;		_initialScreen
 17682 ;;		_my_print
 17683 ;;		_read_EEPROM
 17684 ;;		_reception
 17685 ;; This function is called by:
 17686 ;;		_My_ISR_High
 17687 ;; This function uses a non-reentrant model
 17688 ;;
 17689                           
 17690                           	psect	text52
 17691  0032F8                     __ptext52:
 17692                           	opt stack 0
 17693  0032F8                     _PIR_reset:
 17694                           	opt stack 13
 17695                           
 17696                           ;FinalProject.c: 1182: initialScreen();
 17697                           
 17698                           ;incstack = 0
 17699  0032F8  ECFC  F01F         	call	_initialScreen	;wreg free
 17700                           
 17701                           ;FinalProject.c: 1183: my_print("\n\r!!!!!!!!!!!!! PIR SENSOR HAS DETECTED MOTION  !!!!!
      +                          !!!!!!!!!");
 17702  0032FC  0ECD               	movlw	low STR_112
 17703  0032FE  6EE6               	movwf	postinc1,c
 17704  003300  0E76               	movlw	high STR_112
 17705  003302  6EE6               	movwf	postinc1,c
 17706  003304  ECF8  F01E         	call	_my_print	;wreg free
 17707                           
 17708                           ;FinalProject.c: 1185: my_print("\r\nEnter the password to reset the alarm: ");
 17709  003308  0E92               	movlw	low STR_113
 17710  00330A  6EE6               	movwf	postinc1,c
 17711  00330C  0E7B               	movlw	high STR_113
 17712  00330E  6EE6               	movwf	postinc1,c
 17713  003310  ECF8  F01E         	call	_my_print	;wreg free
 17714                           
 17715                           ;FinalProject.c: 1186: halfSecDelay();
 17716  003314  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17717                           
 17718                           ;FinalProject.c: 1188: int i;
 17719                           ;FinalProject.c: 1190: if(PORTBbits.RB4 == 1)
 17720  003318  A881               	btfss	3969,4,c	;volatile
 17721  00331A  D029               	goto	i2l5423
 17722                           
 17723                           ;FinalProject.c: 1191: {
 17724                           ;FinalProject.c: 1192: for(i=0; i<4; i++)
 17725  00331C  0E00               	movlw	0
 17726  00331E  6E07               	movwf	PIR_reset@i+1,c
 17727  003320  0E00               	movlw	0
 17728  003322  6E06               	movwf	PIR_reset@i,c
 17729  003324                     i2l5403:
 17730  003324  BE07               	btfsc	PIR_reset@i+1,7,c
 17731  003326  D006               	goto	i2l5407
 17732  003328  5007               	movf	PIR_reset@i+1,w,c
 17733  00332A  E11B               	bnz	i2l5421
 17734  00332C  0E04               	movlw	4
 17735  00332E  5C06               	subwf	PIR_reset@i,w,c
 17736  003330  B0D8               	btfsc	status,0,c
 17737  003332  D017               	goto	i2l5421
 17738  003334                     i2l5407:
 17739                           
 17740                           ;FinalProject.c: 1193: {
 17741                           ;FinalProject.c: 1194: choiceKeypad();
 17742  003334  EC85  F01D         	call	_choiceKeypad	;wreg free
 17743                           
 17744                           ;FinalProject.c: 1195: tempPass[i] = keypadValue;
 17745  003338  0ED2               	movlw	low _tempPass
 17746  00333A  2406               	addwf	PIR_reset@i,w,c
 17747  00333C  6ED9               	movwf	fsr2l,c
 17748  00333E  0E00               	movlw	high _tempPass
 17749  003340  2007               	addwfc	PIR_reset@i+1,w,c
 17750  003342  6EDA               	movwf	fsr2h,c
 17751  003344  C0E0  FFDF         	movff	_keypadValue,indf2
 17752                           
 17753                           ;FinalProject.c: 1196: halfSecDelay();
 17754  003348  ECA6  F01F         	call	_halfSecDelay	;wreg free
 17755                           
 17756                           ;FinalProject.c: 1197: my_print("*");
 17757  00334C  0E49               	movlw	low (STR_16+61)
 17758  00334E  6EE6               	movwf	postinc1,c
 17759  003350  0E77               	movlw	high (STR_16+61)
 17760  003352  6EE6               	movwf	postinc1,c
 17761  003354  ECF8  F01E         	call	_my_print	;wreg free
 17762  003358  4A06               	infsnz	PIR_reset@i,f,c
 17763  00335A  2A07               	incf	PIR_reset@i+1,f,c
 17764  00335C  D7E3               	goto	i2l5403
 17765  00335E                     i2l5419:
 17766                           
 17767                           ;FinalProject.c: 1201: choiceKeypad();
 17768  00335E  EC85  F01D         	call	_choiceKeypad	;wreg free
 17769  003362                     i2l5421:
 17770  003362  0E41               	movlw	65
 17771  003364  0100               	movlb	0	; () banked
 17772  003366  19E0               	xorwf	_keypadValue& (0+255),w,b
 17773  003368  B4D8               	btfsc	status,2,c
 17774  00336A  D024               	goto	i2l5439
 17775  00336C  D7F8               	goto	i2l5419
 17776  00336E                     i2l5423:
 17777                           
 17778                           ;FinalProject.c: 1204: else
 17779                           ;FinalProject.c: 1205: {
 17780                           ;FinalProject.c: 1206: for(i=0; i<4; i++)
 17781  00336E  0E00               	movlw	0
 17782  003370  6E07               	movwf	PIR_reset@i+1,c
 17783  003372  0E00               	movlw	0
 17784  003374  6E06               	movwf	PIR_reset@i,c
 17785  003376                     i2l5425:
 17786  003376  BE07               	btfsc	PIR_reset@i+1,7,c
 17787  003378  D006               	goto	i2l5429
 17788  00337A  5007               	movf	PIR_reset@i+1,w,c
 17789  00337C  E117               	bnz	i2l5437
 17790  00337E  0E04               	movlw	4
 17791  003380  5C06               	subwf	PIR_reset@i,w,c
 17792  003382  B0D8               	btfsc	status,0,c
 17793  003384  D013               	goto	i2l5437
 17794  003386                     i2l5429:
 17795                           
 17796                           ;FinalProject.c: 1207: {
 17797                           ;FinalProject.c: 1208: tempPass[i] = reception();
 17798  003386  0ED2               	movlw	low _tempPass
 17799  003388  2406               	addwf	PIR_reset@i,w,c
 17800  00338A  6ED9               	movwf	fsr2l,c
 17801  00338C  0E00               	movlw	high _tempPass
 17802  00338E  2007               	addwfc	PIR_reset@i+1,w,c
 17803  003390  6EDA               	movwf	fsr2h,c
 17804  003392  ECF3  F020         	call	_reception	;wreg free
 17805  003396  503A               	movf	btemp,w,c
 17806  003398  6EDF               	movwf	indf2,c
 17807                           
 17808                           ;FinalProject.c: 1209: my_print("*");
 17809  00339A  0E49               	movlw	low (STR_16+61)
 17810  00339C  6EE6               	movwf	postinc1,c
 17811  00339E  0E77               	movlw	high (STR_16+61)
 17812  0033A0  6EE6               	movwf	postinc1,c
 17813  0033A2  ECF8  F01E         	call	_my_print	;wreg free
 17814  0033A6  4A06               	infsnz	PIR_reset@i,f,c
 17815  0033A8  2A07               	incf	PIR_reset@i+1,f,c
 17816  0033AA  D7E5               	goto	i2l5425
 17817  0033AC                     i2l5437:
 17818  0033AC  0E0D               	movlw	13
 17819  0033AE  18AE               	xorwf	4014,w,c	;volatile
 17820  0033B0  A4D8               	btfss	status,2,c
 17821  0033B2  D7FC               	goto	i2l5437
 17822  0033B4                     i2l5439:
 17823                           
 17824                           ;FinalProject.c: 1213: }
 17825                           ;FinalProject.c: 1216: int c_correctPassword = 1;
 17826  0033B4  0E00               	movlw	0
 17827  0033B6  6E05               	movwf	PIR_reset@c_correctPassword+1,c
 17828  0033B8  0E01               	movlw	1
 17829  0033BA  6E04               	movwf	PIR_reset@c_correctPassword,c
 17830                           
 17831                           ;FinalProject.c: 1217: for(i = 0, addr = 0x00; i < 4; addr++,i++)
 17832  0033BC  0E00               	movlw	0
 17833  0033BE  6E07               	movwf	PIR_reset@i+1,c
 17834  0033C0  0E00               	movlw	0
 17835  0033C2  6E06               	movwf	PIR_reset@i,c
 17836  0033C4  0E00               	movlw	0
 17837  0033C6  0100               	movlb	0	; () banked
 17838  0033C8  6FDA               	movwf	(_addr+1)& (0+255),b
 17839  0033CA  0E00               	movlw	0
 17840  0033CC  6FD9               	movwf	_addr& (0+255),b
 17841                           
 17842                           ; BSR set to: 0
 17843  0033CE  BE07               	btfsc	PIR_reset@i+1,7,c
 17844  0033D0  D006               	goto	i2l5445
 17845  0033D2  5007               	movf	PIR_reset@i+1,w,c
 17846  0033D4  E122               	bnz	i2l496
 17847  0033D6  0E04               	movlw	4
 17848  0033D8  5C06               	subwf	PIR_reset@i,w,c
 17849  0033DA  B0D8               	btfsc	status,0,c
 17850  0033DC  D01E               	goto	i2l496
 17851  0033DE                     i2l5445:
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;FinalProject.c: 1218: {
 17855                           ;FinalProject.c: 1219: if(read_EEPROM(addr) == tempPass[i])
 17856  0033DE  0ED2               	movlw	low _tempPass
 17857  0033E0  2406               	addwf	PIR_reset@i,w,c
 17858  0033E2  6ED9               	movwf	fsr2l,c
 17859  0033E4  0E00               	movlw	high _tempPass
 17860  0033E6  2007               	addwfc	PIR_reset@i+1,w,c
 17861  0033E8  6EDA               	movwf	fsr2h,c
 17862  0033EA  C0D9  FFE6         	movff	_addr,postinc1
 17863  0033EE  C0DA  FFE6         	movff	_addr+1,postinc1
 17864  0033F2  ECE8  F020         	call	_read_EEPROM	;wreg free
 17865  0033F6  50DE               	movf	postinc2,w,c
 17866  0033F8  183A               	xorwf	btemp,w,c
 17867  0033FA  B4D8               	btfsc	status,2,c
 17868  0033FC  D004               	goto	i2l5451
 17869                           
 17870                           ;FinalProject.c: 1223: else
 17871                           ;FinalProject.c: 1224: {
 17872                           ;FinalProject.c: 1225: c_correctPassword = 0;
 17873                           
 17874                           ;FinalProject.c: 1220: {
 17875                           ;FinalProject.c: 1222: }
 17876  0033FE  0E00               	movlw	0
 17877  003400  6E05               	movwf	PIR_reset@c_correctPassword+1,c
 17878  003402  0E00               	movlw	0
 17879  003404  6E04               	movwf	PIR_reset@c_correctPassword,c
 17880  003406                     i2l5451:
 17881  003406  0100               	movlb	0	; () banked
 17882  003408  4BD9               	infsnz	_addr& (0+255),f,b
 17883  00340A  2BDA               	incf	(_addr+1)& (0+255),f,b
 17884                           
 17885                           ; BSR set to: 0
 17886  00340C  4A06               	infsnz	PIR_reset@i,f,c
 17887  00340E  2A07               	incf	PIR_reset@i+1,f,c
 17888                           
 17889                           ; BSR set to: 0
 17890  003410  BE07               	btfsc	PIR_reset@i+1,7,c
 17891  003412  D7E5               	goto	i2l5445
 17892  003414  5007               	movf	PIR_reset@i+1,w,c
 17893  003416  E101               	bnz	i2u601_40
 17894  003418  D7DE               	goto	L24
 17895  00341A                     i2u601_40:
 17896  00341A                     i2l496:
 17897                           
 17898                           ; BSR set to: 0
 17899                           ;FinalProject.c: 1227: }
 17900                           ;FinalProject.c: 1228: }
 17901                           ;FinalProject.c: 1229: return c_correctPassword;
 17902  00341A  C004  F001         	movff	PIR_reset@c_correctPassword,?_PIR_reset
 17903  00341E  C005  F002         	movff	PIR_reset@c_correctPassword+1,?_PIR_reset+1
 17904                           
 17905                           ; BSR set to: 0
 17906  003422  0012               	return		;funcret
 17907  003424                     __end_of_PIR_reset:
 17908                           	opt stack 0
 17909                           tblptru	equ	0xFF8
 17910                           tblptrh	equ	0xFF7
 17911                           tblptrl	equ	0xFF6
 17912                           tablat	equ	0xFF5
 17913                           prodh	equ	0xFF4
 17914                           prodl	equ	0xFF3
 17915                           intcon	equ	0xFF2
 17916                           intcon2	equ	0xFF1
 17917                           indf0	equ	0xFEF
 17918                           postinc0	equ	0xFEE
 17919                           fsr0h	equ	0xFEA
 17920                           fsr0l	equ	0xFE9
 17921                           wreg	equ	0xFE8
 17922                           postinc1	equ	0xFE6
 17923                           postdec1	equ	0xFE5
 17924                           plusw1	equ	0xFE3
 17925                           fsr1h	equ	0xFE2
 17926                           fsr1l	equ	0xFE1
 17927                           bsr	equ	0xFE0
 17928                           indf2	equ	0xFDF
 17929                           postinc2	equ	0xFDE
 17930                           postdec2	equ	0xFDD
 17931                           fsr2h	equ	0xFDA
 17932                           fsr2l	equ	0xFD9
 17933                           status	equ	0xFD8
 17934                           tblptru	equ	0xFF8
 17935                           tblptrh	equ	0xFF7
 17936                           tblptrl	equ	0xFF6
 17937                           tablat	equ	0xFF5
 17938                           prodh	equ	0xFF4
 17939                           prodl	equ	0xFF3
 17940                           intcon	equ	0xFF2
 17941                           intcon2	equ	0xFF1
 17942                           indf0	equ	0xFEF
 17943                           postinc0	equ	0xFEE
 17944                           fsr0h	equ	0xFEA
 17945                           fsr0l	equ	0xFE9
 17946                           wreg	equ	0xFE8
 17947                           postinc1	equ	0xFE6
 17948                           postdec1	equ	0xFE5
 17949                           plusw1	equ	0xFE3
 17950                           fsr1h	equ	0xFE2
 17951                           fsr1l	equ	0xFE1
 17952                           bsr	equ	0xFE0
 17953                           indf2	equ	0xFDF
 17954                           postinc2	equ	0xFDE
 17955                           postdec2	equ	0xFDD
 17956                           fsr2h	equ	0xFDA
 17957                           fsr2l	equ	0xFD9
 17958                           status	equ	0xFD8
 17959                           
 17960                           	psect	rparam
 17961  0000                     tblptru	equ	0xFF8
 17962                           tblptrh	equ	0xFF7
 17963                           tblptrl	equ	0xFF6
 17964                           tablat	equ	0xFF5
 17965                           prodh	equ	0xFF4
 17966                           prodl	equ	0xFF3
 17967                           intcon	equ	0xFF2
 17968                           intcon2	equ	0xFF1
 17969                           indf0	equ	0xFEF
 17970                           postinc0	equ	0xFEE
 17971                           fsr0h	equ	0xFEA
 17972                           fsr0l	equ	0xFE9
 17973                           wreg	equ	0xFE8
 17974                           postinc1	equ	0xFE6
 17975                           postdec1	equ	0xFE5
 17976                           plusw1	equ	0xFE3
 17977                           fsr1h	equ	0xFE2
 17978                           fsr1l	equ	0xFE1
 17979                           bsr	equ	0xFE0
 17980                           indf2	equ	0xFDF
 17981                           postinc2	equ	0xFDE
 17982                           postdec2	equ	0xFDD
 17983                           fsr2h	equ	0xFDA
 17984                           fsr2l	equ	0xFD9
 17985                           status	equ	0xFD8
 17986                           
 17987                           	psect	temp
 17988  00003A                     btemp:
 17989                           	opt stack 0
 17990  00003A                     	ds	12
 17991                           tblptru	equ	0xFF8
 17992                           tblptrh	equ	0xFF7
 17993                           tblptrl	equ	0xFF6
 17994                           tablat	equ	0xFF5
 17995                           prodh	equ	0xFF4
 17996                           prodl	equ	0xFF3
 17997                           intcon	equ	0xFF2
 17998                           intcon2	equ	0xFF1
 17999                           indf0	equ	0xFEF
 18000                           postinc0	equ	0xFEE
 18001                           fsr0h	equ	0xFEA
 18002                           fsr0l	equ	0xFE9
 18003                           wreg	equ	0xFE8
 18004                           postinc1	equ	0xFE6
 18005                           postdec1	equ	0xFE5
 18006                           plusw1	equ	0xFE3
 18007                           fsr1h	equ	0xFE2
 18008                           fsr1l	equ	0xFE1
 18009                           bsr	equ	0xFE0
 18010                           indf2	equ	0xFDF
 18011                           postinc2	equ	0xFDE
 18012                           postdec2	equ	0xFDD
 18013                           fsr2h	equ	0xFDA
 18014                           fsr2l	equ	0xFD9
 18015                           status	equ	0xFD8


Data Sizes:
    Strings     2611
    Constant    118
    Data        16
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          115     57      69
    BANK0           128      2      42
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> thresholdArray(BANK0[3]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[3]), STR_24(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 6
		 -> mainScreen@tempThresholdArray(UNKNOWN), tempArray(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    my_print@message	PTR unsigned char  size(2) Largest target is 65
		 -> STR_126(CODE[9]), STR_125(CODE[7]), STR_124(CODE[9]), STR_123(CODE[7]), 
		 -> STR_122(CODE[9]), STR_121(CODE[7]), STR_120(CODE[57]), STR_119(CODE[2]), 
		 -> STR_118(CODE[2]), STR_117(CODE[42]), STR_116(CODE[63]), STR_115(CODE[2]), 
		 -> STR_114(CODE[2]), STR_113(CODE[42]), STR_112(CODE[63]), STR_111(CODE[28]), 
		 -> STR_110(CODE[23]), STR_109(CODE[39]), STR_108(CODE[44]), STR_107(CODE[20]), 
		 -> STR_106(CODE[7]), STR_105(CODE[9]), STR_104(CODE[40]), STR_103(CODE[39]), 
		 -> STR_102(CODE[7]), STR_101(CODE[10]), STR_100(CODE[29]), STR_99(CODE[40]), 
		 -> STR_98(CODE[10]), STR_97(CODE[21]), STR_96(CODE[54]), STR_95(CODE[28]), 
		 -> STR_94(CODE[44]), STR_93(CODE[63]), STR_92(CODE[24]), STR_91(CODE[7]), 
		 -> STR_90(CODE[31]), STR_89(CODE[7]), STR_88(CODE[36]), STR_87(CODE[20]), 
		 -> STR_86(CODE[9]), STR_85(CODE[32]), STR_84(CODE[7]), STR_83(CODE[31]), 
		 -> STR_82(CODE[10]), STR_81(CODE[29]), STR_80(CODE[32]), STR_79(CODE[7]), 
		 -> STR_78(CODE[9]), STR_77(CODE[23]), STR_76(CODE[40]), STR_75(CODE[9]), 
		 -> STR_74(CODE[7]), STR_73(CODE[39]), STR_72(CODE[10]), STR_71(CODE[41]), 
		 -> STR_70(CODE[63]), STR_69(CODE[54]), STR_68(CODE[53]), STR_67(CODE[31]), 
		 -> STR_66(CODE[65]), STR_65(CODE[21]), STR_64(CODE[32]), STR_63(CODE[9]), 
		 -> STR_62(CODE[7]), STR_61(CODE[31]), STR_60(CODE[10]), STR_59(CODE[41]), 
		 -> STR_58(CODE[46]), STR_57(CODE[45]), STR_56(CODE[31]), STR_55(CODE[65]), 
		 -> STR_54(CODE[20]), STR_53(CODE[48]), STR_52(CODE[36]), STR_51(CODE[2]), 
		 -> STR_50(CODE[2]), STR_49(CODE[31]), STR_48(CODE[2]), STR_47(CODE[2]), 
		 -> STR_46(CODE[26]), STR_45(CODE[10]), STR_44(CODE[41]), STR_43(CODE[37]), 
		 -> STR_42(CODE[31]), STR_41(CODE[63]), STR_40(CODE[23]), STR_39(CODE[10]), 
		 -> STR_38(CODE[26]), STR_37(CODE[57]), STR_36(CODE[51]), STR_35(CODE[43]), 
		 -> STR_34(CODE[35]), STR_33(CODE[27]), STR_32(CODE[31]), STR_31(CODE[63]), 
		 -> STR_30(CODE[65]), STR_29(CODE[3]), STR_28(CODE[36]), STR_27(CODE[36]), 
		 -> mainScreen@tempThresholdArray(UNKNOWN), STR_25(CODE[36]), tempArray(BANK0[6]), STR_23(CODE[36]), 
		 -> STR_22(CODE[36]), STR_21(CODE[63]), STR_20(CODE[31]), STR_19(CODE[3]), 
		 -> STR_18(CODE[63]), STR_17(CODE[63]), STR_16(CODE[63]), STR_15(CODE[63]), 
		 -> STR_14(CODE[63]), STR_13(CODE[63]), STR_12(CODE[5]), STR_11(CODE[23]), 
		 -> STR_10(CODE[2]), STR_9(CODE[23]), STR_8(CODE[24]), STR_7(CODE[2]), 
		 -> STR_6(CODE[27]), STR_5(CODE[28]), STR_4(CODE[58]), STR_3(CODE[9]), 
		 -> STR_2(CODE[9]), STR_1(CODE[9]), 

    inputMethod	PTR unsigned char  size(2) Largest target is 9
		 -> STR_126(CODE[9]), STR_125(CODE[7]), STR_79(CODE[7]), STR_78(CODE[9]), 
		 -> STR_3(CODE[9]), 

    statusOfTemp	PTR unsigned char  size(2) Largest target is 9
		 -> STR_124(CODE[9]), STR_123(CODE[7]), STR_106(CODE[7]), STR_105(CODE[9]), 
		 -> STR_102(CODE[7]), STR_75(CODE[9]), STR_74(CODE[7]), STR_2(CODE[9]), 

    statusOfPir	PTR unsigned char  size(2) Largest target is 9
		 -> STR_122(CODE[9]), STR_121(CODE[7]), STR_91(CODE[7]), STR_89(CODE[7]), 
		 -> STR_86(CODE[9]), STR_84(CODE[7]), STR_63(CODE[9]), STR_62(CODE[7]), 
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _My_ISR_Low_TempSensor in COMRAM

    _My_ISR_Low_TempSensor->_temp_reset

Critical Paths under _My_ISR_High in COMRAM

    _My_ISR_High->_PIR_reset

Critical Paths under _main in BANK0

    _main->_setUpPassword
    _mainScreen->_sprintf
    _sprintf->___fttol
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___lltoft
    _option_passcode->_changePassword
    _mainScreen->_sprintf

Critical Paths under _My_ISR_Low_TempSensor in BANK0

    None.

Critical Paths under _My_ISR_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _My_ISR_Low_TempSensor in BANK1

    None.

Critical Paths under _My_ISR_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _My_ISR_Low_TempSensor in BANK2

    None.

Critical Paths under _My_ISR_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _My_ISR_Low_TempSensor in BANK3

    None.

Critical Paths under _My_ISR_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _My_ISR_Low_TempSensor in BANK4

    None.

Critical Paths under _My_ISR_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _My_ISR_Low_TempSensor in BANK5

    None.

Critical Paths under _My_ISR_High in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20273
                    _FindCurrentTemp
                  _existingUserLogin
                       _halfSecDelay
                      _initialScreen
                     _initialize_PIR
                  _initialize_serial
                   _initialize_timer
                        _read_EEPROM
                      _setUpPassword
 ---------------------------------------------------------------------------------
 (1) _setUpPassword                                        2     2      0   10192
                                              0 BANK0      2     2      0
                  _existingUserLogin
                       _halfSecDelay
                      _initialScreen
                           _my_print
                          _reception
                    _updateThreshold
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (1) _initialize_timer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialize_serial                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _FindCurrentTemp                                     0     0      0    5756
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (10) ___lwtoft                                            2     0      2     794
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftdiv                                            12     6      6    1237
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _verifyPassword                                       8     8      0  316566
                                             68 BANK0     10    10      0
                               _atoi
                        _checkStatus
                  _existingUserLogin
                       _halfSecDelay
                         _mainScreen
                           _my_print
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (2) _existingUserLogin                                    2     2      0    1604
                           _my_print
                          _reception
                     _verifyPassword
 ---------------------------------------------------------------------------------
 (3) _verifyPassword                                       8     8      0  316566
                                             68 BANK0     10    10      0
                               _atoi
                        _checkStatus
                  _existingUserLogin
                       _halfSecDelay
                         _mainScreen
                           _my_print
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (11) _atoi                                                5     3      2    1882
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _checkStatus                                          0     0      0     462
                     _initialize_PIR
              _initialize_tempSensor
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (11) _atoi                                                5     3      2    1882
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             2     1      1      68
 ---------------------------------------------------------------------------------
 (4) _checkStatus                                          0     0      0     462
                     _initialize_PIR
              _initialize_tempSensor
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (15) _read_EEPROM                                         2     0      2     231
 ---------------------------------------------------------------------------------
 (15) _initialize_tempSensor                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _initialize_PIR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _mainScreen                                           7     7      0  152706
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
                         _mainScreen
                           _my_print
                    _option_Keyboard
                      _option_Keypad
                         _option_PIR
                     _option_Refresh
                  _option_TempSensor
                    _option_passcode
                          _reception
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             41    34      7   30719
                                             33 BANK0     35    28      7
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (6) _scale                                                4     1      3    6694
                                             14 BANK0      4     1      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     688
 ---------------------------------------------------------------------------------
 (6) _fround                                               4     1      3    6381
                                             14 BANK0      4     1      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            12     6      6    1641
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4    1819
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1985
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) __tdiv_to_l_                                         15     9      6     431
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (6) __div_to_l_                                          12     6      6     827
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) ___lltoft                                             9     5      4     918
                                              0 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     848
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     703
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     444
                                             18 BANK0     15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftsub                                              6     0      6    2448
                                              9 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftadd                                             9     3      6    2084
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftpack                                            5     0      5     739
 ---------------------------------------------------------------------------------
 (6) ___ftneg                                              3     0      3     142
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (10) ___ftge                                              6     0      6     224
 ---------------------------------------------------------------------------------
 (5) _option_passcode                                      6     6      0    5012
                                              7 BANK0      6     6      0
                     _changePassword
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
                           _my_print
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (6) _changePassword                                       7     5      2     367
                                              0 BANK0      7     5      2
                        _read_EEPROM
 ---------------------------------------------------------------------------------
 (5) _option_TempSensor                                    0     0      0    8458
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
              _initialize_tempSensor
                           _my_print
                          _reception
                    _updateThreshold
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (10) _updateThreshold                                     4     4      0    4305
                               _atoi
                       _choiceKeypad
                       _halfSecDelay
                           _my_print
                        _read_EEPROM
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (15) _halfSecDelay                                        2     2      0      46
 ---------------------------------------------------------------------------------
 (5) _option_Refresh                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _option_PIR                                           0     0      0  156859
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
                     _initialize_PIR
                         _mainScreen
                           _my_print
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (15) _reception                                           1     1      0      23
 ---------------------------------------------------------------------------------
 (15) _initialScreen                                       0     0      0    2444
                        _clearScreen
                           _my_print
 ---------------------------------------------------------------------------------
 (15) _my_print                                            2     0      2    1222
 ---------------------------------------------------------------------------------
 (15) _choiceKeypad                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _option_Keypad                                        0     0      0    1640
                        _clearScreen
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (5) _option_Keyboard                                      0     0      0    1640
                        _clearScreen
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (15) _write_EEPROM                                        3     0      3     418
 ---------------------------------------------------------------------------------
 (16) _clearScreen                                         0     0      0    1222
                           _my_print
 ---------------------------------------------------------------------------------
 (4) _mainScreen                                           7     7      0  152706
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
                         _mainScreen
                           _my_print
                    _option_Keyboard
                      _option_Keypad
                         _option_PIR
                     _option_Refresh
                  _option_TempSensor
                    _option_passcode
                          _reception
                            _sprintf
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _My_ISR_Low_TempSensor                               30    30      0   20203
                                             29 COMRAM    28    28      0
                    _FindCurrentTemp
                             ___ftge
                           ___lwtoft
                               _atoi
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
              _initialize_tempSensor
                           _my_print
                        _read_EEPROM
                          _reception
                         _temp_reset
                    _updateThreshold
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (10) _updateThreshold                                     4     4      0    4305
                               _atoi
                       _choiceKeypad
                       _halfSecDelay
                           _my_print
                        _read_EEPROM
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (15) _write_EEPROM                                        3     0      3     418
 ---------------------------------------------------------------------------------
 (11) _atoi                                                5     3      2    1882
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             2     1      1      68
 ---------------------------------------------------------------------------------
 (12) ___wmul                                              6     2      4     688
 ---------------------------------------------------------------------------------
 (10) _temp_reset                                          7     5      2    4194
                                             22 COMRAM     7     5      2
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
                           _my_print
                        _read_EEPROM
                          _reception
 ---------------------------------------------------------------------------------
 (15) _reception                                           1     1      0      23
 ---------------------------------------------------------------------------------
 (15) _read_EEPROM                                         2     0      2     231
 ---------------------------------------------------------------------------------
 (15) _initialScreen                                       0     0      0    2444
                        _clearScreen
                           _my_print
 ---------------------------------------------------------------------------------
 (16) _clearScreen                                         0     0      0    1222
                           _my_print
 ---------------------------------------------------------------------------------
 (15) _my_print                                            2     0      2    1222
 ---------------------------------------------------------------------------------
 (15) _halfSecDelay                                        2     2      0      46
 ---------------------------------------------------------------------------------
 (15) _choiceKeypad                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _initialize_tempSensor                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) ___ftge                                              6     0      6     224
 ---------------------------------------------------------------------------------
 (10) _FindCurrentTemp                                     0     0      0    5756
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (10) ___lwtoft                                            2     0      2     794
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            12     6      6    1641
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftdiv                                            12     6      6    1237
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftadd                                             9     3      6    2084
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ftpack                                            5     0      5     739
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _My_ISR_High                                        15    15      0    8626
                                              7 COMRAM    15    15      0
                          _PIR_reset
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
                     _initialize_PIR
              _initialize_tempSensor
                           _my_print
                        _read_EEPROM
                          _reception
                       _write_EEPROM
 ---------------------------------------------------------------------------------
 (15) _write_EEPROM                                        3     0      3     418
 ---------------------------------------------------------------------------------
 (15) _initialize_tempSensor                               0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _initialize_PIR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _PIR_reset                                           7     5      2    4194
                                              0 COMRAM     7     5      2
                       _choiceKeypad
                       _halfSecDelay
                      _initialScreen
                           _my_print
                        _read_EEPROM
                          _reception
 ---------------------------------------------------------------------------------
 (15) _reception                                           1     1      0      23
 ---------------------------------------------------------------------------------
 (15) _read_EEPROM                                         2     0      2     231
 ---------------------------------------------------------------------------------
 (15) _initialScreen                                       0     0      0    2444
                        _clearScreen
                           _my_print
 ---------------------------------------------------------------------------------
 (16) _clearScreen                                         0     0      0    1222
                           _my_print
 ---------------------------------------------------------------------------------
 (15) _my_print                                            2     0      2    1222
 ---------------------------------------------------------------------------------
 (15) _halfSecDelay                                        2     2      0      46
 ---------------------------------------------------------------------------------
 (15) _choiceKeypad                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FindCurrentTemp
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
   _existingUserLogin
     _my_print
     _reception
     _verifyPassword
       _atoi
         ___wmul
         _isdigit
       _checkStatus
         _initialize_PIR
         _initialize_tempSensor
         _read_EEPROM
       _halfSecDelay
       _mainScreen
         _choiceKeypad
         _halfSecDelay
         _initialScreen
           _clearScreen
             _my_print
           _my_print
         _my_print
         _option_Keyboard
           _clearScreen
             _my_print
           _write_EEPROM
         _option_Keypad
           _clearScreen
             _my_print
           _write_EEPROM
         _option_PIR
           _choiceKeypad
           _halfSecDelay
           _initialScreen
             _clearScreen
               _my_print
             _my_print
           _initialize_PIR
           _my_print
           _reception
           _write_EEPROM
         _option_Refresh
         _option_TempSensor
           _choiceKeypad
           _halfSecDelay
           _initialScreen
             _clearScreen
               _my_print
             _my_print
           _initialize_tempSensor
           _my_print
           _reception
           _updateThreshold
             _atoi
               ___wmul
               _isdigit
             _choiceKeypad
             _halfSecDelay
             _my_print
             _read_EEPROM
             _reception
             _write_EEPROM
           _write_EEPROM
         _option_passcode
           _changePassword
             _read_EEPROM
           _choiceKeypad
           _halfSecDelay
           _initialScreen
             _clearScreen
               _my_print
             _my_print
           _my_print
           _reception
           _write_EEPROM
         _reception
         _sprintf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___ftpack
           ___ftge
           ___ftmul
             ___ftpack
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftpack
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___ftpack
               ___wmul
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___ftpack
             ___wmul
           _isdigit
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___ftpack
             ___wmul
       _my_print
       _read_EEPROM
   _halfSecDelay
   _initialScreen
     _clearScreen
       _my_print
     _my_print
   _initialize_PIR
   _initialize_serial
   _initialize_timer
   _read_EEPROM
   _setUpPassword
     _existingUserLogin
       _my_print
       _reception
       _verifyPassword
         _atoi
           ___wmul
           _isdigit
         _checkStatus
           _initialize_PIR
           _initialize_tempSensor
           _read_EEPROM
         _halfSecDelay
         _mainScreen
           _choiceKeypad
           _halfSecDelay
           _initialScreen
             _clearScreen
               _my_print
             _my_print
           _my_print
           _option_Keyboard
             _clearScreen
               _my_print
             _write_EEPROM
           _option_Keypad
             _clearScreen
               _my_print
             _write_EEPROM
           _option_PIR
             _choiceKeypad
             _halfSecDelay
             _initialScreen
               _clearScreen
                 _my_print
               _my_print
             _initialize_PIR
             _my_print
             _reception
             _write_EEPROM
           _option_Refresh
           _option_TempSensor
             _choiceKeypad
             _halfSecDelay
             _initialScreen
               _clearScreen
                 _my_print
               _my_print
             _initialize_tempSensor
             _my_print
             _reception
             _updateThreshold
               _atoi
                 ___wmul
                 _isdigit
               _choiceKeypad
               _halfSecDelay
               _my_print
               _read_EEPROM
               _reception
               _write_EEPROM
             _write_EEPROM
           _option_passcode
             _changePassword
               _read_EEPROM
             _choiceKeypad
             _halfSecDelay
             _initialScreen
               _clearScreen
                 _my_print
               _my_print
             _my_print
             _reception
             _write_EEPROM
           _reception
           _sprintf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___ftpack
             ___ftge
             ___ftmul
               ___ftpack
             ___ftneg
             ___ftsub
               ___ftadd
                 ___ftpack
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___ftpack
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___ftpack
                 ___wmul
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___ftpack
               ___wmul
             _isdigit
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___ftpack
               ___wmul
         _my_print
         _read_EEPROM
     _halfSecDelay
     _initialScreen
       _clearScreen
         _my_print
       _my_print
     _my_print
     _reception
     _updateThreshold
       _atoi
         ___wmul
         _isdigit
       _choiceKeypad
       _halfSecDelay
       _my_print
       _read_EEPROM
       _reception
       _write_EEPROM
     _write_EEPROM

 _My_ISR_Low_TempSensor (ROOT)
   _FindCurrentTemp
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
   ___ftge
   ___lwtoft
     ___ftpack
   _atoi
     ___wmul
     _isdigit
   _choiceKeypad
   _halfSecDelay
   _initialScreen
     _clearScreen
       _my_print
     _my_print
   _initialize_tempSensor
   _my_print
   _read_EEPROM
   _reception
   _temp_reset
     _choiceKeypad
     _halfSecDelay
     _initialScreen
       _clearScreen
         _my_print
       _my_print
     _my_print
     _read_EEPROM
     _reception
   _updateThreshold
     _atoi
       ___wmul
       _isdigit
     _choiceKeypad
     _halfSecDelay
     _my_print
     _read_EEPROM
     _reception
     _write_EEPROM
   _write_EEPROM

 _My_ISR_High (ROOT)
   _PIR_reset
     _choiceKeypad
     _halfSecDelay
     _initialScreen
       _clearScreen
         _my_print
       _my_print
     _my_print
     _read_EEPROM
     _reception
   _choiceKeypad
   _halfSecDelay
   _initialScreen
     _clearScreen
       _my_print
     _my_print
   _initialize_PIR
   _initialize_tempSensor
   _my_print
   _read_EEPROM
   _reception
   _write_EEPROM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2      2A       5       32.8%
BITCOMRAM           73      0       0       0        0.0%
COMRAM              73     39      45       1       60.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      2B       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      15        0.0%
DATA                 0      0      9A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Dec 14 15:56:52 2016

               My_ISR_Low_TempSensor@i_1196 0038                                          _RD 007D30  
                    __end_of_verifyPassword 31CC                                ___awdiv@sign 008B  
                                        bsr 000FE0                                 __CFG_BORV$3 000000  
                            _changePassword 3D6A                                __CFG_CP0$OFF 000000  
                              __CFG_CP1$OFF 000000                                __CFG_CP2$OFF 000000  
                              __CFG_CP3$OFF 000000                                 __CFG_OSC$HS 000000  
                          ?_option_passcode 0001                                         l250 14F8  
                                       l340 2CF4                                         l253 1500  
                                       l270 164C                                         l183 3DF4  
                                       l263 1620                                         l175 3FF6  
                                       l600 3B86                                         l256 1550  
                                       l193 41E8                                         l602 3B8E  
                                       l186 3E1C                                         l347 2D20  
                                       l291 1A44                                         l259 1558  
                                       l604 3B96                                         l372 2BB0  
                                       l365 2B84                                         l541 3DE6  
                                       l269 165C                                         l298 1A70  
                                       l547 3434                                         l581 3B22  
                                       l901 308E                                         l590 3B4E  
                                       l583 3B2A                                         l568 414A  
                                       l593 3B62                                         l577 3B0E  
                                       l586 3B3E                                         l578 3B1A  
                                       l595 3B6A                                         l588 3B46  
                                       l597 3B72                                         l952 2B0E  
                                       l696 0A9E                                         l973 364C  
                              __CFG_CPB$OFF 000000                                __CFG_CPD$OFF 000000  
                            setUpPassword@i 0080                  __size_of_option_TempSensor 017C  
                              ___awmod@sign 0085                                         wreg 000FE8  
                               _statusOfPir 00F0                                __CFG_LVP$OFF 000000  
                              __CFG_WDT$OFF 000000                                        l1012 17FC  
                                      l1013 1806                                        l1008 19EE  
                                      l1050 2906                                        l1131 39AA  
                                      l1141 3C34                                        l1071 2630  
                                      l1039 27F0                                        l1056 2986  
                                      l1065 3A5E                                        l1081 4120  
                                      l1049 28C2                                        l1076 25A6  
                                      l5003 3B32                                        l5021 3B56  
                                      l6101 3BD8                                        l6013 29E4  
                                      l5039 3B7A                                        l6103 3BDE  
                                      l6007 29BE                                        l6113 3E76  
                                      l6107 3C22                                        l6115 3E86  
                                      l6051 2AD8                                        l6035 2A8C  
                                      l6027 2A38                                        l3811 2950  
                                      l6211 0714                                        l6123 03D0  
                                      l7013 35EE                                        l7005 35B6  
                                      l7101 182E                                        l6221 07A4  
                                      l6213 0744                                        l6205 06D8  
                                      l7007 35CA                                        l7111 1898  
                                      l6047 2AC4                                        l3807 293C  
                                      l6215 075A                                        l6135 0424  
                                      l6143 049A                                        l7031 2F62  
                                      l7025 363A                                        l7017 35F8  
                                      l7009 35DC                                        l7121 1900  
                                      l7113 18B0                                        l6065 4068  
                                      l3921 2EF6                                        l6081 393E  
                                      l6057 2AF4                                        l3817 296C  
                                      l6401 0E5C                                        l6321 0C0E  
                                      l6241 088E                                        l6225 07CA  
                                      l6209 06FE                                        l6153 04FE  
                                      l6129 03F0                                        l7033 2F80  
                                      l5523 39F4                                        l7123 1918  
                                      l7107 186C                                        l3931 2F2C  
                                      l6091 3998                                        l6083 3944  
                                      l6059 2B04                                        l3819 297C  
                                      l3771 2834                                        l7211 24AA  
                                      l6307 0AD2                                        l6243 0894  
                                      l6235 0828                                        l6171 057A  
                                      l6411 0F24                                        l6163 052C  
                                      l6155 0516                                        l7051 3002  
                                      l4741 3E3E                                        l7109 187E  
                                      l3917 2EE2                                        l6405 0EEA  
                                      l6309 0B18                                        l6181 05C0  
                                      l6165 0560                                        l6149 04C2  
                                      l7045 2FCC                                        l6503 1BBC  
                                      l6431 1A78                                        l6415 19F8  
                                      l5535 3A5C                                        l5527 3A2C  
                                      l7135 1968                                        l7119 18EE  
                                      l3935 2F48                                        l3927 2F12  
                                      l6079 392E                                        l7207 249C  
                                      l6407 0EF0                                        l6327 0C28  
                                      l6319 0C00                                        l6271 097A  
                                      l6263 094C                                        l6255 08DA  
                                      l6159 0526                                        l7063 3082  
                                      l7055 304A                                        l7047 2FEC  
                                      l7311 37BE                                        l4921 3F58  
                                      l7401 237E                                        l6521 1C16  
                                      l6433 1A80                                        l6425 1A56  
                                      l7129 1940                                        l3929 2F22  
                                      l3777 286E                                        l7241 25E2  
                                      l7233 256E                                        l6345 0CA0  
                                      l6329 0C36                                        l6409 0F06  
                                      l6523 1C22                                        l6427 1A5A  
                                      l7147 19D0                                        l7075 178E  
                                      l6099 3BC8                                        l6363 0D14  
                                      l6347 0CA6                                        l6339 0C7A  
                                      l6275 09A6                                        l6267 095E  
                                      l6259 092A                                        l7163 26C4  
                                      l7323 3810                                        l7307 37A8  
                                      l7405 23AE                                        l6605 2C1A  
                                      l6541 1C94                                        l6525 1C2C  
                                      l6453 1AD2                                        l6429 1A66  
                                      l7085 17D6                                        l7229 2532  
                                      l6381 0DBA                                        l6373 0D78  
                                      l6293 0A6C                                        l6277 09AE  
                                      l6285 0A44                                        l6269 0966  
                                      l6197 0670                                        l7407 23CA  
                                      l6543 1C9C                                        l6519 1C12  
                                      l6471 1B1C                                        l7079 179E  
                                      l5911 3ABA                                        l5903 3A94  
                                      l6367 0D44                                        l6359 0CEC  
                                      l6295 0A80                                        l6287 0A52  
                                      l7191 27B0                                        l7183 274E  
                                      l7159 26B6                                        l7353 21F2  
                                      l6625 2C60                                        l6529 1C42  
                                      l6465 1B02                                        l6449 1ABC  
                                      l7089 17EA                                        l6385 0DF2  
                                      l6721 1654                                        l4857 40B6  
                                      l6803 2D98                                        l7371 229E  
                                      l6483 1B5E                                        l6475 1B32  
                                      l6467 1B06                                        l6555 1CC8  
                                      l6563 1CE6                                        l3899 2E50  
                                      l5923 3B00                                        l5915 3ADE  
                                      l5907 3AA8                                        l6395 0E2E  
                                      l6387 0DFC                                        l6379 0DB0  
                                      l6299 0AA2                                        l6723 1664  
                                      l6715 1632                                        l6651 142E  
                                      l7373 22AA                                        l6629 2C70  
                                      l6637 2C8E                                        l6581 2BB8  
                                      l6565 2B20                                        l5933 3D9E  
                                      l6549 1CB2                                        l6485 1B66  
                                      l6469 1B12                                        l5861 3874  
                                      l5909 3AB4                                        l6389 0E08  
                                      l6741 1686                                        l6733 167A  
                                      l6725 1668                                        l6717 1636  
                                      l6653 1470                                        l7445 3FF2  
                                      l6823 2DE2                                        l7391 2354  
                                      l6583 2BC0                                        l6575 2B96  
                                      l5871 38A4                                        l5855 385E  
                                      l5919 3AEC                                        l6727 166C  
                                      l6719 1642                                        l6655 148C  
                                      l6639 13BC                                        l7393 235C  
                                      l7369 229A                                        l6577 2B9A  
                                      l5953 1E50                                        l6745 168C  
                                      l6737 1680                                        l6729 1674  
                                      l6753 16AC                                        l6649 1414  
                                      l6835 2E08                                        l6771 2D16  
                                      l7379 22B2                                        l6579 2BA6  
                                      l5939 3DCC                                        l6499 1BA6  
                                      l5867 3892                                        l5883 38E2  
                                      l6755 16D6                                        l6781 2D4A  
                                      l6773 2D28                                        l6757 2C9C  
                                      l5869 389E                                        l5973 1092  
                                      l6917 3748                                        l6909 3712  
                                      l6861 3CF4                                        l6925 30B6  
                                      l6775 2D30                                        l6767 2D06  
                                      l7399 2364                                        l5887 38F6  
                                      l5879 38D4                                        l5959 1F1E  
                                      l5991 12CC                                        l5983 117A  
                                      l6951 3158                                        l6943 312C  
                                      l6769 2D0A                                        l6937 311E  
                                      l6929 30CC                                        l5899 3A84  
                                      l5979 1154                                        l6883 3690  
                                      l6947 3142                                        l5997 138E  
                                      l6869 3D58                                        l6991 355A  
                                      l6959 3186                                        l6967 31A6  
                                      l6889 36B2                                        l6995 3568  
                                      l6899 36EC                                        l6997 357A  
                                      l6999 358E                                        _CFGS 007D36  
                                      STR_1 7FE0                                        STR_2 7FE0  
                                      STR_3 7FD7                                        STR_4 7904  
                                      STR_5 7E95                                        STR_6 7EB1  
                                      STR_7 7749                                        STR_8 7F33  
                                      STR_9 7F79                                        u3511 284A  
                                      u7000 0606                                        u3491 2810  
                                      u7005 05FA                                        u5430 3BA8  
                                      u5190 3FA0                                        u3671 2E2C  
                                      u3690 2E76                                        u4910 3E60  
                                      u3695 2E6C                                        u4917 3E56  
                                      u7190 0A96                                        u4890 3E1A  
                                      u8500 26A0                                        u6670 3DE6  
                                      u8270 1716                                        u8280 1748  
                                      u4897 3E10                                        u8505 2698  
                                      u8275 170E                                        u8540 244C  
                                      u8285 1740                                        u7750 14C4  
                                      u8720 2402                                        u8560 2486  
                                      u8480 2666                                        u8545 2444  
                                      u8565 247E                                        u8485 265E  
                                      u7950 3D58                                        u8690 2354  
                                      u8977 3F5E                                        _WREN 007D32  
                          My_ISR_High@check 0013                                        _addr 00D9  
                                      _flag 00DB                                        _atoi 2F5A  
                                      _main 3FA6                                        _pass 00CE  
                                      fsr0h 000FEA                                        fsr1h 000FE2  
                                      indf0 000FEF                                        fsr0l 000FE9  
                                      fsr2h 000FDA                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                      btemp 003A                                        prodh 000FF4  
                                      prodl 000FF3                                        start 03B8  
                             __CFG_IESO$OFF 000000                                _statusOfTemp 00F2  
                             __CFG_MCLRE$ON 000000                                ___param_bank 000010  
                    __end_of_changePassword 3DF0                                ___fttol@exp1 00A0  
                              ___fttol@lval 009C                               ??_My_ISR_High 0008  
                           ?_verifyPassword 0001                        __end_of_halfSecDelay 3FA6  
                                     ?_main 0001                             __end_of___awdiv 3900  
                                     _EEADR 000FA9                             __end_of___ftadd 19F8  
                                     STR_10 7749                                       STR_11 7F62  
                                     STR_12 7FF6                                       STR_20 7E3D  
                                     STR_21 7886                                       STR_13 7886  
                                     STR_22 7CED                                       STR_14 774B  
                                     STR_30 75CB                                       STR_23 7D35  
                                     STR_31 7808                                       STR_15 77C9  
                                     STR_24 7FF0                                       STR_40 7F4B  
                                     STR_32 7E1E                                       STR_16 770C  
                                     STR_33 7ECC                                       STR_25 7D11  
                                     STR_41 7847                                       STR_17 778A  
                                     STR_50 7749                                       STR_18 7886  
                                     STR_42 7E1E                                       STR_26 7FFB  
                                     STR_34 7D7D                                       STR_19 7B38  
                                     STR_51 7749                                       STR_27 7CC9  
                                     STR_43 7C5C                                       STR_35 7B67  
                                     STR_60 7FCD                                       STR_28 7CA5  
                                     STR_52 7C81                                       STR_44 7BBC  
                                     STR_36 7A51                             __end_of___awmod 3B0A  
                                     STR_29 7B38                                       STR_45 7FCD  
                                     STR_61 7DE0                                       STR_53 7A84  
                                     STR_37 7977                                       STR_62 7FE2  
                                     STR_54 7FA5                                       STR_38 7F01  
                                     STR_46 7EE7                                       STR_70 78C5  
                                     STR_47 7749                                       STR_63 7FE0  
                                     STR_71 7BBC                                       STR_39 7FCD  
                                     STR_55 764D                                       STR_72 7FCD  
                                     STR_48 7749                                       STR_56 7E1E  
                                     STR_80 7DC0                                       STR_64 7DA0  
                                     STR_65 7F4D                                       STR_81 7E5C  
                                     STR_49 7DFF                                       STR_73 7C35  
                                     STR_57 7AE2                                       STR_90 7DE0  
                                     STR_82 7FCD                                       STR_74 7FE2  
                                     STR_58 7AB4                                       STR_66 760C  
                                     STR_83 7DE0                                       STR_67 7E1E  
                                     STR_91 7FE2                                       STR_75 7FE0  
                                     STR_59 7BBC                                       STR_84 7FE2  
                                     STR_92 7F1B                                       STR_76 7BE5  
                                     STR_68 7A1C                                       STR_85 7DA0  
                                     STR_77 7F4B                                       STR_69 79E6  
                                     STR_93 768E                                       STR_78 7FD7  
                                     STR_86 7FE0                                       STR_94 7B0F  
                                     STR_79 7FE9                                       STR_87 7FB9  
                                     STR_95 7E79                                       STR_88 7D59  
                                     STR_96 79B0                                       STR_89 7FE2  
                                     STR_97 7F90                                       STR_98 7FCD  
                                     STR_99 7C0D                             __end_of___ftdiv 27FA  
                                     _EEPGD 007D37                             __end_of___ftneg 412E  
                           __end_of___lldiv 39BC                             __end_of___ftmul 263A  
                                     _T0CON 000FD5                             ___awdiv@divisor 0088  
                           __end_of___llmod 3C46                             __end_of___ftsub 4092  
                           __end_of___fttol 2F5A                                       i1l450 01A8  
                                     i1l515 32EE                                       i1l443 017C  
                                     i1l439 035A                                       i1l480 0366  
                                     i1l466 0220                                       i1l459 01F4  
                                     i2l415 2008                                       i1l479 0364  
                                     i2l432 2196                                       i2l408 1FDC  
                                     i2l428 2166                                       i2l496 341A  
                           ___awdiv@counter 008A                                       _RCREG 000FAE  
                                     _TMR0H 000FD7                                       _TMR0L 000FD6  
                                     _SPBRG 000FAF                                       _PORTD 000F83  
                                     _TRISD 000F95                                       _TXREG 000FAD  
                             __CFG_PWRT$OFF 000000                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                             __CFG_WRT3$OFF 000000                                ___lltoft@exp 0088  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000                        __size_of_checkStatus 0116  
                             __CFG_WRTB$OFF 000000                               __CFG_WRTC$OFF 000000  
                             __CFG_WRTD$OFF 000000                                       _check 0046  
                            __CFG_EBTRB$OFF 000000                             __end_of_dpowers 757D  
                      __end_of_choiceKeypad 3BAC                                       _scale 0F32  
                           __end_of_isdigit 40CA                                       _temp1 004A  
                        __size_of_PIR_reset 012C                       _initialize_tempSensor 4228  
                     __size_of_write_EEPROM 0028                              __CFG_BOREN$OFF 000000  
                           ??_option_Keypad 0080                     __end_of_updateThreshold 2420  
                                     tablat 000FF5                                       plusw1 000FE3  
                                     status 000FD8                             __end_of_sprintf 0F32  
                      __size_of_clearScreen 000E                             __initialization 3EEA  
                              __end_of_atoi 3098                                __end_of_main 3FF8  
                           ?_changePassword 0080                    __size_of_FindCurrentTemp 011A  
                           changePassword@i 0085                       __end_of_setUpPassword 3842  
 My_ISR_Low_TempSensor@thirdCorrectPassword 0032                                      ??_main 0082  
                             ___fttol@sign1 009B                               __activetblptr 000002  
                      __size_of__tdiv_to_l_ 019E                                _write_EEPROM 412E  
                       __end_of_My_ISR_High 21C4                     ??_My_ISR_Low_TempSensor 001E  
                                    _ADCON0 000FC2                                      _ADCON1 000FC1  
                                    _ADCON2 000FC0                            ___llmod@dividend 008D  
                                    ?_scale 008E                                      STR_100 7E5C  
                                    STR_101 7FCD                                      STR_110 7F62  
                                    STR_102 7FE2                                      STR_111 7E79  
                                    STR_103 7C35                                      STR_104 7BE5  
                                    STR_120 793E                                      STR_112 76CD  
                                    STR_121 7FE2                                      STR_105 7FE0  
                                    STR_113 7B92                                      STR_114 7749  
                                    STR_106 7FE2                                      STR_122 7FE0  
                                    _ADRESH 000FC4                                      STR_115 7749  
                                    STR_123 7FE2                                      STR_107 7FB9  
                                    STR_116 768E                                      STR_124 7FE0  
                                    STR_108 7B3B                                      STR_109 7C35  
                                    STR_117 7B92                                      STR_125 7FE9  
                                    STR_118 7749                                      STR_126 7FD7  
                                    _ADRESL 000FC3                                      STR_119 7749  
                                    _EEDATA 000FA8                                      _EECON2 000FA7  
                          ___awdiv@dividend 0086                            __end_of___ftpack 3656  
                          __end_of___lltoft 3EEA                                      i1l5501 3288  
                                    i1l5513 32DA                                      i1l5507 32B2  
                                    i1l5481 3232                                      i1l5465 31F8  
                                    i1l5491 325A                                      i1l5483 3236  
                                    i1l5469 3208                                      i1l5485 3242  
                                    i1l5487 324A                                      i1l7511 019E  
                                    i1l7513 01B0                                      i1l5499 3280  
                                    i1l7531 020A                                      i1l7515 01B8  
                                    i1l7507 018E                                      i1l7605 0344  
                                    i1l7533 0216                                      i1l7509 0192  
                                    i1l7535 0228                                      i1l7463 009C  
                                    i1l7537 0230                                      i1l7529 0206  
                                    i1l7481 00E4                                      i1l7473 00BC  
                                    i2l5403 3324                                      i1l7571 02BC  
                                    i1l7555 0276                                      i2l5421 3362  
                                    i1l7493 013C                                      i1l7469 00AC  
                                    i2l5407 3334                                      i2l5423 336E  
                                    i2l5425 3376                                      i2l5601 1FFE  
                                    i1l7593 0314                                      i2l5451 3406  
                                    i2l5419 335E                                      i2l5603 2010  
                                    i2l5445 33DE                                      i2l5437 33AC  
                                    i2l5429 3386                                      i2l5605 2018  
                                    i2l5439 33B4                                      i2l5623 205E  
                                    i2l5581 1F9A                                      i2l5639 20A0  
                                    i2l5683 218A                                      i2l5675 214C  
                                    i2l5659 2100                                      i2l5669 2128  
                                    i2l5597 1FEE                                      i2l5599 1FF2  
                                    i2l5679 2168                            __end_of___lwtoft 40FE  
                         ?_initialize_timer 0001                              __CFG_XINST$OFF 000000  
                          __end_of__powers_ 75CB                          ??_initialize_timer 0080  
                                    ___ftge 39BC                                      ___wmul 3C46  
                                 ??___awdiv 008A                              __CFG_STVREN$ON 000000  
                                 ??___awmod 0084                                   ??___ftneg 0083  
                                 ??___lldiv 0088                                      _choice 00DF  
                                 ??___llmod 0095                                   ??___ftsub 008F  
                                 ??___fttol 0096                           __end_of_PIR_reset 3424  
                                    _fround 1CF4                                      clear_0 3F30  
                                    clear_1 3F3C                            ___awdiv@quotient 008C  
                           ___awmod@divisor 0082                             ___awmod@counter 0084  
                    __size_of_initialScreen 004E                                __pdataCOMRAM 004E  
                          ??_option_Refresh 0080                            __end_of_my_print 3E6E  
                              __mediumconst 7554                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                         _existingUserLogin 3CDC                            option_passcode@i 0089  
                                 ??_sprintf 00A8  My_ISR_Low_TempSensor@third_correctPassword 0036  
                                __accesstop 0080                     __end_of__initialization 3F42  
                           __CFG_PBADEN$OFF 000000                               ___rparam_used 000001  
                                ___ftneg@f1 0080                                  ___ftsub@f1 0089  
                                ___ftsub@f2 008C                                  ___fttol@f1 0092  
                            __pcstackCOMRAM 0001                                  ___inthi_sp 02A4  
                                ___intlo_sp 0452                                __pidataBANK0 421C  
                     __size_of_halfSecDelay 005A                                  ___lltoft@c 0080  
                      __size_of_read_EEPROM 0016                               __end_of_scale 13B4  
                               _My_ISR_High 0008                                  __div_to_l_ 2998  
                     __size_of_choiceKeypad 00A2                   __end_of_existingUserLogin 3D6A  
                  __size_of_option_Keyboard 0024                             __div_to_l_@exp1 008B  
                           __div_to_l_@cntr 008A                                     ??_scale 0091  
                           __div_to_l_@quot 0086                                sprintf@width 00B2  
                                __pbssBANK0 00CE                             _correctPassword 00EC  
                             _initialScreen 3FF8                                _halfSecDelay 3F4C  
                             __div_to_l_@f1 0080                               __div_to_l_@f2 0083  
                          ??_verifyPassword 00C4                          __size_of_reception 0016  
                              _choiceKeypad 3B0A                                     ?_fround 008E  
                PIR_reset@c_correctPassword 0004                                   ?___lltoft 0080  
                  __size_of_option_passcode 02FC                                  _mainScreen 13B4  
                         _initialize_serial 41B8                          ?_initialize_serial 0001  
                          ??_changePassword 0082                           __end_of__npowers_ 75A4  
                                   __Hparam 0000                                     __Lparam 0000  
                       ??_initialize_serial 0080                             __size_of___ftge 00AC  
                                   ___awdiv 3842                                     ___ftadd 16EC  
                                   ___awmod 3A68                                     ___ftdiv 263A  
                                   ___ftneg 40FE                                     ___lldiv 3900  
                           __size_of___wmul 0096                                     ___ftmul 2420  
                                   ___llmod 3BAC                                     ___ftsub 4046  
                                   ___fttol 2E16                                     __pcinit 3EEA  
                           __size_of_fround 026C                                     __ramtop 0600  
                                ??___lltoft 0084                                     __ptext0 3FA6  
                                   __ptext1 376C                                     __ptext2 419E  
                                   __ptext3 41B8                                     __ptext4 3424  
                                   __ptext5 40CA                                     __ptext6 263A  
                                   __ptext7 3098                                     __ptext8 3CDC  
                                   __ptext9 2F5A                                     _inReset 0048  
                                 _T0CONbits 000FD5                               ??_checkStatus 0080  
                               ?__div_to_l_ 0080                                     _dpowers 7555  
                __size_of_existingUserLogin 008E                                     _isdigit 4092  
                          ___awmod@dividend 0080                           __end_of_reception 41FC  
            __size_of_My_ISR_Low_TempSensor 03A0               __end_of_My_ISR_Low_TempSensor 03B8  
                                   _sprintf 03C0                   __end_of_initialize_serial 41D0  
                            __pintcode_body 1F60                        end_of_initialization 3F42  
                         ??_option_Keyboard 0080                               __Lmediumconst 7554  
                                   int_func 1F60                       __end_of_option_Keypad 417A  
                           ___lldiv@divisor 0084                                  _tempIntSet 004C  
                           ___lldiv@counter 008C                                 temp_reset@i 001C  
                                 _RCSTAbits 000FAB                     __size_of_initialize_PIR 0012  
                                   postdec1 000FE5                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                                  _temp_reset 31CC  
                            __tdiv_to_l_@f1 0080                              __tdiv_to_l_@f2 0083  
                             ??__tdiv_to_l_ 0086                                   _PORTBbits 000F81  
                                 _PORTDbits 000F83                                  _option_PIR 2C9C  
                             _inputTypeAddr 004E                                   _PIR_reset 32F8  
                 __size_of_initialize_timer 001A                                   _TRISAbits 000F92  
                                 _TRISBbits 000F93                                   _TRISCbits 000F94  
                            _tempStatusAddr 0050                         __end_of_checkStatus 376C  
                                 _TXSTAbits 000FAC                      __size_of_setUpPassword 00D6  
                         ??_option_passcode 0087                         __size_of__div_to_l_ 0188  
                           _FindCurrentTemp 3424                         __end_of_clearScreen 421C  
                            __end_of___ftge 3A68                                ?_My_ISR_High 0001  
                            __end_of___wmul 3CDC                               __pidataCOMRAM 422E  
                            __end_of_fround 1F60                                  ?_PIR_reset 0001  
                       start_initialization 3EEA                         __end_of__tdiv_to_l_ 2998  
                __size_of_initialize_serial 0018                       option_passcode@i_1127 008B  
                           ___llmod@divisor 0091                             ___llmod@counter 0095  
                  __size_of_updateThreshold 025C                                 ?_temp_reset 0017  
                               __pdataBANK0 00EA                            __CFG_LPT1OSC$OFF 000000  
                      verifyPassword@i_1033 00CA                                    ??_fround 0091  
                       __size_of_mainScreen 0338                               sprintf@tmpval 00B4  
         option_passcode@my_correctPassword 0087                               _setUpPassword 376C  
                               ?_option_PIR 0001                                  fround@prec 0091  
                               _checkStatus 3656                           __size_of___ftpack 0118  
                         __size_of___lltoft 007C                                 __pbssCOMRAM 0046  
                         __size_of___lwtoft 0034                               __pcstackBANK0 0080  
                               sprintf@flag 00B0                                 sprintf@fval 00BE  
                               sprintf@prec 00C1                     __size_of_option_Refresh 0002  
                   __end_of_FindCurrentTemp 353E                                 _clearScreen 420E  
                         __CFG_CCP2MX$PORTC 000000                              _initialize_PIR 41FC  
                                 __pintcode 0008                               __pmediumconst 7554  
                                  ?___awdiv 0086                                    ?___awmod 0080  
                                  ?___ftneg 0080                                    ?___lldiv 0080  
                                  ?___llmod 008D                                    ?___ftsub 0089  
                                 __npowers_ 757D                                    ?___fttol 0092  
                         __size_of_my_print 007E                                 __pintcodelo 0018  
                       __end_of_read_EEPROM 41E6                              ?_setUpPassword 0001  
                               __tdiv_to_l_ 27FA                                ??__div_to_l_ 0086  
                               ??_PIR_reset 0003                            _initialize_timer 419E  
                           _option_Keyboard 417A                                    ?_sprintf 00A1  
                            __size_of_scale 0482                         __size_of_temp_reset 012C  
                My_ISR_Low_TempSensor@check 0034                                   _reception 41E6  
                                  _IPR1bits 000F9F                                    _PIE1bits 000F9D  
                       __size_of_option_PIR 017A                      __end_of_initialize_PIR 420E  
                                 _tempArray 00E1                                    i1u611_20 32EE  
                                  i2u601_40 341A                                    _PIR1bits 000F9E  
                        __end_of__div_to_l_ 2B20                                    i1u895_20 0362  
                                  _RCONbits 000FD0                            __CFG_WDTPS$32768 000000  
                             _tempThreshold 00DD                                  PIR_reset@i 0006  
                                _ADCON0bits 000FC2                        __size_of_My_ISR_High 21BC  
                   __size_of_verifyPassword 0134              __size_of_initialize_tempSensor 0006  
             __end_of_initialize_tempSensor 422E                             _option_passcode 19F8  
                               _INTCON2bits 000FF1                                   copy_data0 3EFE  
                                 copy_data1 3F1E                               _PIRStatusAddr 00EA  
                     _My_ISR_Low_TempSensor 0018                                  _EECON1bits 000FA6  
                                  __Hrparam 0000                                 _read_EEPROM 41D0  
                                  __Lrparam 0000                             ??_setUpPassword 0080  
                          __size_of___awdiv 00BE                            __size_of___ftadd 030C  
                          __size_of___awmod 00A2                     __end_of_option_Keyboard 419E  
                          __size_of___ftdiv 01C0                            __size_of___ftneg 0030  
                          __size_of___lldiv 00BC                            __size_of___ftmul 021A  
                          __size_of___llmod 009A                            __size_of___ftsub 004C  
                          __size_of___fttol 0144                                    ___ftpack 353E  
                                  ___lltoft 3E6E                     __size_of_changePassword 0086  
                        __end_of_mainScreen 16EC                                    ___lwtoft 40CA  
                    __size_of_option_Keypad 0024                                  sprintf@exp 00BC  
                                sprintf@val 00B8                            __size_of_isdigit 0038  
                         _option_TempSensor 2B20                                 _keypadValue 00E0  
                                  __ptext10 3656                                    __ptext11 4092  
                                  __ptext20 2420                                    __ptext12 41D0  
                                  __ptext21 3A68                                    __ptext13 4228  
                                  __ptext30 16EC                                    __ptext22 3842  
                                  __ptext14 41FC                                    __ptext31 353E  
                                  __ptext23 27FA                                    __ptext15 13B4  
                                  __ptext40 2C9C                                    __ptext32 40FE  
                                  __ptext24 2998                                    __ptext16 03C0  
                                  __ptext41 41E6                                    __ptext33 39BC  
                                  __ptext25 3E6E                                    __ptext17 0F32  
                                  __ptext50 31CC                                    __ptext42 3FF8  
                                  __ptext34 19F8                                    __ptext26 3BAC  
                                  __ptext18 3C46                                    __ptext43 3DF0  
                                  __ptext35 3D6A                                    __ptext27 3900  
                                  __ptext19 1CF4                                    __ptext52 32F8  
                                  __ptext44 3B0A                                    __ptext36 2B20  
                                  __ptext28 2E16                                    __ptext45 4156  
                                  __ptext37 21C4                                    __ptext29 4046  
                                  __ptext46 417A                                    __ptext38 3F4C  
                                  __ptext47 412E                                    __ptext39 4232  
                                  __ptext48 420E                                    __powers_ 75A4  
                        ?_option_TempSensor 0001                            __size_of_sprintf 0B72  
                     __end_of_initialScreen 4046                              _option_Refresh 4232  
                             __size_of_atoi 013E                               __size_of_main 0052  
                       ??_option_TempSensor 0080                                 _inputMethod 00EE  
                                  _tempPass 00D2                                    _my_print 3DF0  
                              ??_temp_reset 0019                     __end_of_option_passcode 1CF4  
                              ??_option_PIR 00C4                                ?_checkStatus 0001  
                 __end_of_option_TempSensor 2C9C                                  _INTCONbits 000FF2  
                           verifyPassword@i 00CC              My_ISR_High@sec_correctPassword 0015  
                                  scale@scl 0091                      ?_My_ISR_Low_TempSensor 0001  
                    __end_of_option_Refresh 4234                              _thresholdArray 00E7  
                                  intlevel1 0000                                    intlevel2 0000  
                                 sprintf@ap 00AE                            __tdiv_to_l_@exp1 008E  
                                 sprintf@sp 00A1                            __tdiv_to_l_@cntr 008D  
                          __tdiv_to_l_@quot 0089                          __end_of_temp_reset 32F8  
                          ___lldiv@dividend 0080                               _option_Keypad 4156  
                  __end_of_initialize_timer 41B8                        __end_of_write_EEPROM 4156  
                        __end_of_option_PIR 2E16                            ?_option_Keyboard 0001  
           changePassword@a_correctPassword 0083                                ?__tdiv_to_l_ 0080  
                            _verifyPassword 3098                               _thresholdAddr 00F4  
                               _temperature 00D6                                    sprintf@c 00C3  
                                  sprintf@f 00A3                            ___lldiv@quotient 0088  
                           ?_option_Refresh 0001                              ?_option_Keypad 0001  
               temp_reset@b_correctPassword 001A                             _updateThreshold 21C4  
